// Code generated by go-bindata.
// sources:
// builtin_models/BVLC-AlexNet.yml
// builtin_models/BVLC-GoogLeNet.yml
// builtin_models/BVLC-Reference-CaffeNet.yml
// builtin_models/BVLC-Reference-RCNN-ILSVRC13.yml
// builtin_models/SqueezeNet_v1.0.yml
// builtin_models/SqueezeNet_v1.1.yml
// builtin_models/VGG16.yml
// builtin_models/VGG19.yml
// builtin_models/voc-fcn16s.yml
// builtin_models/voc-fcn32s.yml
// DO NOT EDIT!

package caffe

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlcAlexnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x5d\x6f\xe3\xb6\x12\x7d\xd7\xaf\x18\xc0\x58\x20\x7b\xaf\x25\xd9\x8e\xb3\x9b\xab\x0b\x14\x6d\xd3\x3e\x14\x68\xf3\xd0\xaf\x97\x62\x11\x8c\xa8\x91\xc5\x0d\x45\x0a\xe4\xc8\x89\xf7\xd7\x17\x43\x4a\x96\xb3\x1f\xdd\xe6\xc1\x91\x38\xe7\x0c\x67\x86\x33\x87\xb2\xd8\x53\x05\xdf\xff\xf9\xf3\x5d\xfe\x9d\xa1\xe7\x7b\x62\x58\x81\x2c\x82\x6b\xe1\xe4\x46\x0f\xbd\x6b\xc8\x64\xad\xc7\x9e\x9e\x9c\x7f\xac\x32\x80\x44\xba\xc3\xb6\x25\x58\xc1\xd9\x04\xad\xf3\xc0\x1d\x4d\x14\x80\x23\xf9\xa0\x9d\xad\x60\x5b\x6c\x5e\x00\x27\x03\x28\x67\xd9\xa3\xb6\x9c\x7d\x04\x9d\x01\xda\xb6\xce\xf7\xc8\xe9\x19\x02\xf5\x68\x59\xab\xb3\x3d\x59\x33\xf1\x83\xda\x92\xaf\x60\x05\xe7\x97\x00\x63\xa0\x06\xd8\xc1\x40\x5e\x90\x29\x30\x18\x3c\x35\x5a\x89\xcf\x0c\x96\xbf\x15\xf4\xa3\x61\x3d\x18\x82\xc1\x20\x0b\x3e\x80\x42\x0b\x35\x41\x18\x48\xe9\x56\x53\x93\x01\x60\xdf\xbc\xd9\x57\x91\x79\x18\xc6\x0a\x3c\xea\xc1\xbb\xf7\xa4\xb8\x54\xe8\x7b\x93\x2b\xa9\x4b\x15\x61\xb9\x1a\xc6\x88\x54\x5f\x45\x1e\x22\x72\x18\xd4\x9b\xbd\xa1\xea\xab\xa4\x09\x38\xd1\xfe\x39\x94\x4b\x6c\x43\x41\x79\x3d\x70\xac\xf5\x37\x19\xc0\xef\x9d\x0e\x53\x5d\x74\x00\x04\x4f\x83\xd1\x2a\x55\xdc\xb5\xcb\x71\x42\x62\xd6\xd4\xc8\x41\xc8\xf2\xdc\x2f\xc3\x58\xcf\x8c\x22\x03\xf8\x41\xb7\x2d\x79\xb2\x8a\x42\x05\xd6\x31\xc4\x13\xd6\xf6\x00\x4f\x9a\xbb\xc8\xf4\x64\xf4\xa1\x63\x59\x6b\x90\x31\xc7\xf1\xd0\x93\xe5\xe8\xe2\xff\x19\x80\xb6\x9a\x35\x1a\xfd\x41\x10\xd6\xd9\xfc\x03\x79\x07\xb5\xc6\x40\x41\x8e\x73\x53\x6c\x41\xdb\xc0\x84\x8d\xc4\xb8\x85\xab\xd6\x8d\xb6\x01\x4b\x8a\x42\x40\x7f\x4a\x9d\x38\xed\xbb\x06\x0c\x8b\xcb\x94\x19\x3b\xd8\xc2\x01\x8f\x04\xad\x41\x06\xe3\x42\x78\x5d\xc4\x6a\x10\xd4\xa3\x6d\x0c\x35\x4b\x51\x24\x64\xcd\xe4\x13\xf5\xfa\xcd\x66\xbd\xd9\x6c\x20\x58\x1c\x42\xe7\xb8\x48\x24\x0a\x0c\x47\x34\xba\xc1\xa9\xb1\xa6\x9e\x43\xab\x08\x9a\xd1\x4b\x2a\x4b\x25\x24\xa2\xc5\xe3\xcd\x6d\xf4\x18\xeb\xb3\xf8\x00\x54\x6a\xf4\xa8\x4e\x19\xc0\xcd\xdb\x62\x77\x73\xfb\x0a\xd0\x36\x31\x58\xd8\x16\xb7\xd7\xff\xdb\xdf\x16\x97\xe7\xe7\x6a\xe9\x7b\x39\x44\x76\x43\xbe\x3d\xf3\x85\xbd\x4d\x5c\xcc\x20\x1a\x6f\x16\xe3\xed\xa6\xd8\xbd\x02\x97\xce\xf4\x62\xf7\x40\xbc\x86\x31\x48\xb8\xef\xc7\xc0\xd1\xac\xc8\x32\x79\x50\xde\x0d\x52\xad\xab\x3f\xa2\x59\x2c\x78\x24\x8f\x87\xa8\x1a\xdb\x4d\x04\x84\x35\x5c\xed\xe1\xbf\xb0\x9d\x58\xaf\xe1\x3f\xb0\x83\x5e\x7b\xef\xfc\x1a\x42\xe7\x46\xd3\x4c\x21\xcb\x54\x41\xad\x19\x3a\x7d\xe8\xc8\x9f\x63\x2b\x5e\xbf\x6c\x50\x29\x5b\xac\x21\x35\x50\x9f\xe0\xc7\x23\x5a\xf8\xad\x23\xd3\x61\x4f\x1e\xbe\x0d\xf3\x63\xe6\x69\x69\xc1\x15\x2c\x6f\x51\x0b\x70\x10\x69\x28\xe1\x89\xea\xa0\x99\xe4\x91\x58\x15\xc5\xdc\xe1\x73\x4a\xb3\x8a\xe5\xd0\x31\x0f\xa1\x2a\xcb\x83\xe6\x6e\xac\x0b\xe5\xfa\x52\x14\xb3\x8c\xe3\x55\xb2\x27\x2a\x7b\x0c\x4c\xbe\x8c\x9c\x50\xd6\x47\xa3\x1e\xd0\xd0\xb3\x25\xfe\x17\x1e\x9e\xf4\xa3\x2e\x7f\x89\xd4\x7c\xce\x3d\x77\x36\xff\xa9\xc7\x03\xdd\x13\xe7\xbb\xcd\x76\x97\x1f\x71\x89\xa6\x2a\xcb\x94\x47\x61\xf5\x10\x0a\xa5\xd2\x6b\xb9\xbf\xdd\xed\x73\x2d\x34\x4b\x9c\x2b\x83\x21\xe8\x76\x1a\xce\x5c\xfa\x2b\x6f\x88\x86\x5c\x39\x7b\x74\x66\x94\x55\x34\xb9\xa5\xd1\xc7\x7f\x2c\xe2\x1c\x8a\xa1\x69\xb3\x15\x18\xad\xc8\x06\x7a\x21\x02\xd9\xb4\x58\xc1\x68\x3d\x05\xf6\x5a\x31\x35\xd9\x0a\xb4\x1d\x46\x8e\xe5\x5d\xb0\x69\x4d\xa4\x6c\x05\xad\xf6\x81\x13\x0a\xf8\x34\xd0\x27\x57\x45\x1e\x97\x2b\x88\xb1\x67\x49\x8f\x2f\xb4\x6a\x8e\xe2\xc2\x4f\x04\xbd\x90\xb3\x38\xa7\x71\x8b\xc5\xcb\x80\x72\xe9\x30\xf9\xd8\x09\x71\xeb\x65\x69\x92\xff\x46\xf7\x64\xe5\x3a\x09\x15\xfc\xb5\x5d\xc3\xf5\x1a\x76\xbb\xb7\xf1\xe7\xdd\x04\xe9\x09\xad\x18\x77\xd7\x6b\xd8\x6e\xdf\xae\x61\xbb\xd9\xbf\xcb\xdc\xc8\xc3\xc8\x29\x43\xd9\x3c\xba\x9f\x22\x4d\x36\x19\xb7\x98\x57\x4b\xc8\xa3\xa7\x08\xc5\xcf\x65\x96\xf0\x4b\x70\xd9\x67\x92\x9b\x30\x06\xeb\x58\xb3\x8b\xdc\xa6\x8a\x7d\x2e\xbf\x69\xe7\xf0\x30\x7a\x53\xcd\xcd\x23\xb2\x5b\x34\xbd\x51\x45\x6f\xca\x5e\xda\x74\x6e\xdd\xb9\x79\xca\x70\xb2\x81\xb8\xe0\x67\xce\xa2\x49\xea\x37\xdf\x83\xf3\x40\x1e\x3c\x0e\x5d\x14\x96\x27\x12\x45\x0f\xe0\x29\xb8\xd1\x2b\x92\xbd\xa3\xf5\x61\x40\xee\xaa\xf3\x00\x78\x7c\x2a\xd2\x10\x8c\x81\xbc\x5c\xd5\x64\xf9\xe3\x79\xf8\xf2\x30\x95\x0d\x0d\xc6\x9d\x8a\xc1\x3b\x76\x12\x1a\xcc\x3b\x5f\xec\x23\xf9\x99\x22\xba\x2a\x6a\xf2\x8f\x64\xe8\x74\xd4\x72\xc0\x85\xf3\x87\x17\xfe\x12\x6a\x6e\x42\x1d\x1e\xd0\xab\x4e\x1f\xe5\xc0\xd0\x04\xf9\xba\xd1\x6d\x52\x42\xee\x28\x49\x64\x8d\x81\xa4\x96\xe9\xba\x94\x07\x76\x80\x16\x26\xe6\xe5\x27\xc5\xc5\xb7\x85\x30\x97\x7a\x5c\x96\x2c\x2d\x44\xf7\x0d\x59\xc7\x24\xcf\x5f\xf0\xd2\x6a\x43\xf1\xeb\x2b\xcc\x6d\xf3\xe9\x09\xc8\x94\x4f\x37\xf4\x1c\x12\x32\x7b\x5d\x8f\x9c\xe4\x90\x9e\xd9\x23\x4c\xd3\x0e\x8b\x2d\x03\x78\xd4\xb6\xa9\xe0\xee\xfe\x7e\x8a\x58\xde\x65\xa7\xa4\x10\x67\xce\xd5\xdd\xfd\xfd\x1a\x7e\x95\x9f\xa2\x88\x22\x3d\xdf\x6c\x0f\xd2\x58\x81\xb8\x82\x59\xbb\x64\x8e\xd3\xda\xf9\x6b\xec\xf2\x72\xce\x00\x7a\xb4\xba\xa5\xc0\x0f\x38\x72\xe7\x7c\x05\x58\x37\xa3\x69\xb2\xbf\x03\x00\x00\xff\xff\x70\xba\xd6\xd4\x9b\x0a\x00\x00"

func bvlcAlexnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcAlexnetYml,
		"BVLC-AlexNet.yml",
	)
}

func bvlcAlexnetYml() (*asset, error) {
	bytes, err := bvlcAlexnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-AlexNet.yml", size: 2715, mode: os.FileMode(420), modTime: time.Unix(1502903237, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcGooglenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\xdd\x6e\xdb\xb8\x12\xbe\xd7\x53\x0c\x62\x14\x48\xce\xb1\x25\xcb\x71\x53\x57\x05\x0e\xce\x36\xc5\x16\x8b\x2d\x72\xb1\xdd\x9f\x8b\x45\x61\x8c\xa8\x91\xc4\x86\x22\xb5\xe4\xd0\x8e\xfb\xf4\x0b\x52\x92\xed\xa4\x69\xeb\x0b\x43\xe4\x7c\xf3\xcb\x8f\xc3\xd1\xd8\x51\x01\x6f\xff\xfc\x70\xbb\x78\x6f\x4c\xf3\x81\xee\x88\x61\x06\x61\x1b\x4c\x0d\x07\xe3\x2d\x74\xa6\x22\x95\xd4\x16\x3b\xda\x1b\x7b\x5f\x24\x00\x83\xda\x2d\xd6\x35\xc1\x0c\x8e\x22\xa8\x8d\x05\x6e\x69\x54\x01\xd8\x91\x75\xd2\xe8\x02\xf2\x74\xf9\x08\x38\x0a\x40\x18\xcd\x16\xa5\xe6\xe4\x09\x74\x02\x48\x5d\x1b\xdb\x21\x0f\xdf\xe0\xa8\x43\xcd\x52\x1c\xe5\x83\x34\x09\x76\x50\x6a\xb2\x05\xcc\xe0\xb8\x70\xe0\x1d\x55\xc0\x06\x7a\xb2\x01\x39\x04\x06\xbd\xa5\x4a\x8a\x60\x33\x81\xd3\x6f\x06\x9d\x57\x2c\x7b\x45\xd0\x2b\xe4\x80\x77\x20\x50\x43\x49\xe0\x7a\x12\xb2\x96\x54\x25\x00\xd8\x55\x37\xeb\x22\x6a\x36\xbd\x2f\xc0\xa2\xec\xad\xf9\x4c\x82\x33\x81\xb6\x53\x0b\x11\xea\x52\x44\xd8\x42\xf4\x3e\x22\xc5\x0f\x91\x4d\x44\xf6\xbd\xb8\x59\x2b\x2a\x7e\xa8\x34\x02\x47\xb5\xef\x87\x72\x8e\xad\xc8\x09\x2b\x7b\x8e\xb5\xfe\x5f\x02\xf0\x7b\x2b\xdd\x58\x17\xe9\x00\xc1\x52\xaf\xa4\x18\x2a\x6e\xea\xd3\x71\xc2\xa0\x59\x52\x15\x0e\x22\x6c\x07\xc6\xa8\xc8\x98\xde\x97\x93\x4e\x0a\x7f\x11\xec\x8d\x57\x15\x28\x79\x4f\xa1\xf8\xdc\xa2\xbe\x87\xdb\xd6\x4a\xc7\x12\x35\x7c\xfc\x42\x0d\x55\x87\xc8\x16\x54\x0a\x42\x00\x2d\xa9\x7e\xb2\xfb\x24\x82\x93\x9b\x18\x47\x9a\x00\xbc\x93\x75\x4d\x96\xb4\x20\x17\xe9\x68\x18\x22\x8d\xa4\x6e\x60\x2f\xb9\x1d\xcd\x28\xd9\xb4\x1c\xf6\x2a\x64\x5c\xa0\x6f\x3a\xd2\x1c\xed\xbe\xf9\xa6\x96\x13\xa8\x08\x42\x64\xe1\xcc\x79\x61\x03\xfe\x79\x03\xde\x91\x83\x8b\x07\xdc\x49\xb2\x17\x21\x51\xa9\x25\x4b\x54\xf2\x0b\x45\x53\x7b\x0a\xfe\x1d\x48\xed\x98\xb0\x0a\xb9\x5c\x34\xe8\x9d\x93\xa8\x2f\x82\x81\x7f\xbc\x14\xf7\x5b\x67\xd4\x8e\x6c\xda\x5b\xc3\x86\x1f\x78\x30\x8b\x50\x8d\x39\x32\x28\x42\x1b\x83\xb4\xc8\x04\x15\x09\x3c\x40\x6f\x94\x14\x87\x58\xda\xe8\xcb\x58\xd9\x48\x8d\x0a\x9e\x58\x9b\x07\x08\x87\x32\x9b\x7d\xb0\xda\x79\xd1\x42\x8d\x8e\xc9\x9e\x92\xbf\xbc\x59\x02\xf5\x46\xb4\x0e\x76\x0e\x56\x2f\xa7\xd5\xd5\x9b\xc8\x0f\x82\xd2\xeb\x4a\x51\x75\xa2\x49\x70\x29\x99\xec\x70\x48\xab\xf9\x7a\xb9\x9c\x2f\x97\x4b\x70\x1a\x7b\xd7\x1a\x3e\x33\x79\x05\xde\x05\x27\xcf\x26\x3b\xf1\xef\xb1\x03\x53\x86\xfb\x1b\xc2\x65\xd3\x2f\x72\x40\x21\xbc\x45\x71\x80\x9b\x4d\xfa\xea\x05\x5c\x5e\xe7\xe9\xf5\x0b\x20\x6b\x8d\xbd\x02\xd4\xd5\x08\x7c\x79\x02\x6e\x36\xe9\xeb\x17\x70\x99\xe7\x69\x7e\x04\x9a\xa1\x52\x3b\x54\xb2\x1a\xe2\x76\xc4\xf3\x31\xba\xcf\xde\x71\x14\x0b\xd2\xa1\x36\xc2\x9a\x3e\x30\xed\xf2\x8f\x28\x0e\x12\xdc\x91\xc5\x26\xf6\xc5\x7c\x19\x01\x6e\x0e\x97\x6b\xf8\x2f\xe4\xa3\xd6\x15\xfc\x07\x56\xd0\xc9\xe0\x6f\x0e\xae\x8d\xb7\x60\x48\x06\x10\x4a\xc9\xd0\xca\xa6\x25\x7b\x8c\x33\xbd\x0a\x05\x90\x9d\xd4\x8d\x8b\xd7\xa1\xdc\x29\xb1\x6d\x22\xe1\x35\xf1\xc0\x4a\xe1\xdf\xdd\xdd\x8d\x61\x96\xc8\xa2\xdd\x3a\xf9\x85\x8a\x7c\xb5\x09\x29\x21\xfc\xba\x5e\x8a\x70\x0b\x7e\x1a\xe3\xfb\xd9\xd8\x3d\xda\x0a\x7a\x74\xae\x80\x97\x37\xab\x74\xb3\xce\xa1\x73\xe9\x19\xe6\x2d\x8a\xfb\x33\x50\x9e\xaf\xae\xd3\xcd\xfa\x09\x68\x34\xb4\x98\xc0\x05\xe4\x37\x9b\x4d\xba\x19\x61\x67\x8d\x63\x8f\x6e\x60\x13\x55\x50\x1e\xe0\x23\xd9\x46\x1a\x78\xef\xb1\x42\x6b\xb1\x43\xf8\xbf\x6b\xc2\x22\xb1\x74\xbc\xb7\x30\x83\xd3\x2a\xf6\x68\xec\x43\xcb\xce\x60\x4f\xa5\x93\x4c\xe1\x93\x58\xa4\xe9\xd4\x79\xa6\x83\x98\x5e\x97\x05\xb4\xcc\xbd\x2b\xb2\xac\x91\xdc\xfa\x32\x15\xa6\xcb\xc2\x5b\x96\xc5\xb6\x97\xb1\x25\xca\xba\xc8\xf5\x2c\xea\xb8\xec\x71\x7d\x1f\xd9\x40\xfb\x20\x77\xa9\xb1\x4d\x86\xa5\xcb\xf2\xf5\xf2\x75\xba\xde\xac\x57\xc9\x0c\x94\x14\xa4\x1d\x3d\xea\x86\xc9\xb8\x59\x80\xd7\x96\x1c\x5b\x29\x98\xaa\x64\x06\x52\xf7\x9e\xdd\xd0\xf6\x26\xec\xb0\x17\xce\x68\x06\xb5\xb4\x8e\x07\x14\xf0\xa1\xa7\xaf\xde\xcc\x45\xdc\x2e\x40\x76\xd8\x50\x32\x3c\x4c\x67\x4d\x7b\x8a\xe2\xcc\x4e\x04\x3d\xea\xeb\xf1\x7a\x46\x17\x27\x2b\x3d\x86\xd7\x97\xc9\xc6\xd2\x47\xd7\xa7\xad\xf1\x1d\xac\x64\x47\x3a\xbc\xab\xae\x80\xbf\xf3\x39\x5c\xcf\x61\xb5\x5a\xc7\xbf\x4f\x23\xa4\x23\xd4\x41\xb8\xba\x9e\x43\x9e\xbf\x9a\x43\xbe\x5c\x7f\x4a\x8c\xe7\xde\xf3\x90\x61\x70\x1e\xcd\x8f\x91\x0e\xb2\x04\xc6\xbc\x6a\x42\xf6\x96\x22\x14\x9f\xcb\x6c\xc0\x9f\x82\x4b\x9e\x49\x6e\xc4\x28\x2c\x63\xcd\xce\x72\x1b\x2b\xf6\x5c\x7e\xa3\x67\xb7\xf5\x56\x15\xf1\xdc\x8b\x2c\x0b\x9d\x3d\xad\x3a\x25\xd2\x4e\x65\xdd\x83\x26\x9e\xb8\x12\x4b\x17\xd6\xee\xa0\x1d\x71\x1a\xda\x55\x14\x85\xfa\x4d\x03\xc1\x74\x03\x1a\x8b\x7d\x1b\x7b\xd1\xd4\xf5\x2d\x39\xe3\xad\xa0\xe0\x3b\x4a\xb7\x3d\x72\x5b\x1c\xf9\x66\x71\x9f\x0e\xbc\xf5\x8e\x6c\x98\x59\x48\xf3\x53\x0a\x7f\x8f\xbd\x59\x45\xbd\x32\x87\xf3\x5e\x3a\xfa\x3e\xf3\x14\x32\x54\x69\x34\x96\x96\x64\xef\x49\xd1\x61\x27\xc3\x11\x47\xaa\x3f\xb6\x38\xe0\x26\x22\x4a\xb7\x45\x2b\x5a\xb9\x0b\x87\x86\xca\x85\x51\x4f\xd6\x43\xd3\xe4\x96\x86\x6e\x5a\xa2\xa3\x50\xcf\x61\x76\x08\x1f\x6c\x00\x35\x8c\x9a\xe7\xf3\xd5\xd9\xa0\x15\x34\x4f\x35\x39\x2f\xdb\xb0\x11\xcd\x57\xa4\x0d\xc7\x97\xf4\x1b\x56\x6a\xa9\x28\x8e\xa2\x6e\xa2\xce\xd7\xa7\x10\x3a\xe8\x38\x56\x4c\x21\x21\xb3\x95\xa5\xe7\xa1\x07\xd1\x03\x5b\x04\x4d\x1c\xe7\xd2\x93\x2c\x01\xb8\x97\xba\x2a\xe0\xf6\xee\x6e\x8c\x38\xac\x83\x27\x4d\xde\xa2\x3a\xea\x5c\xde\xde\xdd\xcd\xe1\xb7\xf0\x97\xa6\xb1\xa3\x4f\x0f\xeb\x36\x90\xcb\x11\x17\xf0\x4b\xe0\xd2\x30\x5b\x8f\x7b\xc7\xd1\x34\xde\xff\x51\x21\x01\xe8\x50\xcb\x9a\x1c\x6f\xd1\x73\x6b\x6c\x01\x58\x56\x5e\x55\xc9\xbf\x01\x00\x00\xff\xff\x0d\x0f\x51\x34\xaa\x0b\x00\x00"

func bvlcGooglenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcGooglenetYml,
		"BVLC-GoogLeNet.yml",
	)
}

func bvlcGooglenetYml() (*asset, error) {
	bytes, err := bvlcGooglenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-GoogLeNet.yml", size: 2986, mode: os.FileMode(420), modTime: time.Unix(1502685794, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceCaffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x5b\x6f\xdb\xb6\x17\x7f\xd7\xa7\x38\x80\xf1\x07\xd2\xff\x6c\xc9\x76\xd2\x36\xd0\x80\x61\x5b\xfa\xd2\x61\xc8\x43\xd1\xed\x65\x28\x02\x8a\x3c\xb2\xd8\x52\x24\x41\x1e\x26\xf1\x3e\xfd\x70\x48\xc9\xb2\x7b\x59\x97\x07\x47\xe4\xf9\x9d\xfb\x8d\x56\x8c\xd8\xc2\xaf\x7f\xfe\x7e\xb7\x79\x87\x3d\x06\xb4\x12\x37\x77\xa2\xef\xf1\x1e\x09\x56\xc0\x74\x70\x3d\x1c\x5d\x0a\x30\x3a\x85\xa6\xea\x83\x18\xf1\xc9\x85\x4f\x6d\x05\x50\xf8\x33\x03\xac\xe0\x44\x82\xde\x05\xa0\x01\x27\x16\x80\x47\x0c\x51\x3b\xdb\xc2\xae\xde\x5e\x00\x27\x02\x48\x67\x29\x08\x6d\xa9\xfa\x0c\x3a\x03\xb4\xed\x5d\x18\x05\x95\x6f\x88\x38\x0a\x4b\x5a\x9e\xe8\x85\x5a\xb1\x1c\xa1\x2d\x86\x16\x56\x70\x3a\x44\x48\x11\x15\x90\x03\x8f\x81\x91\xc5\x30\xf0\x01\x95\x96\x2c\xb3\x82\xe5\x6f\x05\x63\x32\xa4\xbd\x41\xf0\x46\x10\xe3\x23\x48\x61\xa1\x43\x88\x1e\xa5\xee\x35\xaa\x0a\x40\x8c\xea\xd5\x4d\x9b\x39\x0f\x3e\xb5\x10\x84\xf6\xc1\x7d\x44\x49\x8d\x14\x61\x34\x1b\xc9\x71\x69\x33\x6c\x23\x7d\xca\x48\xf9\x5d\xe4\x21\x23\xbd\x97\xaf\x6e\x0c\xb6\xdf\x65\x9a\x80\x13\xdb\xbf\x9b\x72\x8e\x55\x18\x65\xd0\x9e\x72\xac\x7f\xaa\x00\xde\x0f\x3a\x4e\x71\xd1\x31\x67\x2f\x60\x4c\x86\x38\xff\xbd\x33\xc6\x3d\x69\x7b\xc8\xf7\x25\xdf\x6f\x47\x71\xc8\x65\x52\x78\x72\xfa\x18\xa1\x6d\xa4\x90\x72\x54\x63\x0d\x6f\x89\xa5\x09\x08\xe8\x8d\x96\x25\x7f\xae\x5f\x8a\x03\x8a\x1d\x1d\x2a\x4e\x2b\x5f\xff\x62\xf0\x99\xc5\xfa\xd4\x9d\x38\x9e\x34\x0d\x10\xdd\x88\xa0\x74\x3f\xd5\x69\xac\x2b\x80\x37\xcb\x31\xd7\xa3\xa3\xc5\x90\xcc\x54\xfc\x30\xfa\x30\x10\xdf\x29\x41\x62\x23\xd2\x61\x44\x4b\x59\xf4\x8f\x15\x64\x8c\x0b\x0a\x03\x5b\xe6\x9d\x33\x8c\x14\x56\x81\xe5\xa2\x32\xfa\xef\x62\x84\x11\x47\x2e\x25\x1d\x21\x3e\x69\x92\x03\x2a\xb8\xd2\x16\xe6\x76\x59\x9f\x58\x75\x04\xe5\x2c\x42\x87\xbd\x0b\x78\x29\xe5\x45\xfd\x45\xa8\xa3\x15\x3e\x0e\x2e\x07\x5a\x13\x86\xa2\xed\x7a\xb7\x5d\x6f\xb7\xdb\x1a\xde\x0f\x2c\x29\x12\x3c\x0a\xa3\x55\x21\x4e\x65\x2c\xac\x44\x50\x29\xe4\xc4\x9c\xdc\x16\xf1\x42\xcc\x35\x8b\x29\xc1\x38\x93\x20\xa4\x4c\x41\xc8\x23\xbc\x7c\x5d\xdf\xec\xf6\xff\xcb\xfe\x1a\x17\x23\xec\xea\xdb\xfd\xf5\xfe\xf6\x33\x3b\x5d\xc7\xad\xc4\x99\x24\xe7\x37\xbb\x4b\xfe\xc2\x5d\x48\x2f\x17\xd2\xed\x96\x49\xae\xa4\xf5\x4c\x77\xe4\x60\xa5\xc8\xc6\x7e\x4c\x91\x32\x59\xa2\x25\x0c\x20\x83\xf3\xac\xf9\xea\x8f\x38\x57\x9b\x78\xc4\x20\x0e\x79\x0c\xed\xb6\x19\x10\xd7\x70\x75\x03\x3f\xc0\x6e\xe2\x7a\x01\xff\x87\x3d\x8c\x3a\x04\x17\xd6\x10\x07\x97\x8c\x9a\x0c\x06\x01\x9d\x26\x18\xf4\x61\xc0\xb0\x58\x16\x49\x1b\x53\xbf\xb8\x74\x91\x03\x97\xa3\x88\x0a\xba\x23\xfc\x86\x7d\x0f\x6f\x9c\x15\x43\x42\xf8\xf9\x23\xf6\xbd\x2a\x87\x2a\xe0\xa9\xe6\x60\x05\xcb\x29\x0f\x18\xe1\xb9\x48\x1a\x78\xc2\x2e\x6a\x42\xfe\x44\x92\x75\x3d\x17\xfa\xec\xd6\x3c\x1a\x37\x30\x10\xf9\xd8\x36\xcd\x41\xd3\x90\xba\x5a\xba\xb1\xe1\x89\xdc\xe4\x9e\x6d\x28\x20\x36\xa3\x88\x84\xa1\xc9\x3c\xb1\xe9\x1e\x8d\x7c\x38\xa9\x7d\xc8\x38\x8b\x74\x12\xd6\x36\x4d\x31\xa3\xb6\xda\xc7\x5a\xca\x72\x6c\x6e\x6e\xf7\x37\x1b\xcd\x6d\x6b\x91\x36\xd2\x88\x18\x75\x3f\xb5\xd8\x86\x0b\x64\xa3\x10\xfd\x46\x3a\xfb\xe8\x4c\xe2\x5b\x61\x36\x16\x53\xc8\xff\x88\x07\x76\xac\xbd\xea\xab\x15\x18\x2d\xd1\x46\xbc\x68\xe5\x6a\xba\x6c\x21\xd9\x80\x91\x82\x96\x84\xaa\x5a\x81\xb6\x3e\x51\x8e\xce\x82\x2d\x77\xdc\xb3\x2b\xe8\x75\x88\x54\x50\x40\x47\x8f\x5f\xac\x8f\x4d\xbe\x6e\x21\xdb\x5e\x95\x19\x7d\x36\xbf\x66\x2b\xce\xe4\x64\xd0\xc5\x88\x63\x40\x51\xb1\x48\xf1\x82\x17\x11\x61\xc8\x89\xcc\xaa\x97\xab\x69\x25\x28\x3d\xa2\xe5\x15\x13\x5b\xf8\x6b\xb7\x86\xeb\x35\xec\xf7\xaf\xf3\xcf\x87\x09\x32\xa2\xb0\x4c\xdc\x5f\xaf\x61\xb7\x7b\xbd\x86\xdd\xf6\xe6\x43\xe5\x12\xf9\x44\xc5\x43\x56\x9e\xc5\x4f\x96\x16\x1a\x8f\x9e\xec\x57\x8f\x82\x52\xc0\x0c\x15\x5f\xf3\xac\xe0\x17\xe3\xaa\xaf\x38\x37\x61\x8c\xe8\x72\xcc\xce\x7c\x9b\x22\xf6\x35\xff\x26\xcd\xf1\x21\x05\xd3\xce\xc5\xc3\x43\xb2\x56\xa3\x91\xf5\x68\x9a\xf1\xd9\x22\xcd\x95\x37\x17\x4f\x13\x8f\x36\x22\xd5\xf4\x4c\x55\x26\x71\xfc\xe6\xdd\x38\xf7\xd3\x21\x08\x3f\xe4\xc9\xf0\x84\x3c\x7f\x23\x2f\x14\x97\x82\x44\xd6\x9d\xa9\x0f\x5e\xd0\xd0\x9e\x3a\x20\x88\xa7\xba\x74\x41\x8a\x18\x78\x7d\xa3\xa5\xcf\x1b\xe2\x3f\xf5\x42\xa3\xd0\x1b\x77\xac\x7d\x70\xe4\xd8\x4a\x98\x8d\x38\x53\xc9\xae\x9a\x3a\xb3\xd4\x1d\x86\x4f\x68\xf0\xf8\xa8\x39\xd7\xb5\x0b\x87\x6f\x89\x2e\x0c\xa5\x34\x2b\x00\x1d\x1f\x44\x90\x83\x7e\xe4\x3c\x0a\x13\xf9\x21\xa4\xfb\x32\xe3\x68\xc0\x32\xfc\x3a\x11\x91\x43\x5c\x76\x21\x7f\x90\x03\x61\x61\xe2\x3c\x7f\x7d\x9c\x3d\x43\x98\x73\x09\xd3\x79\x24\xcb\x45\x16\xaf\xd0\x3a\x42\xfe\xfe\x86\x94\x5e\x1b\xcc\x0f\xb5\x38\x57\xd3\x97\x89\xe1\xe6\x9f\xd6\xef\x6c\x92\x20\x0a\xba\x4b\x54\x86\x1c\x3e\x53\x10\x30\x0d\x01\x58\x68\x15\xc0\x27\x6d\x55\x0b\x77\xf7\xf7\x93\xc5\x7c\x66\x4d\x65\x70\x9c\x78\xae\xee\xee\xef\xd7\xf0\x8e\x7f\xea\x3a\x8f\xde\x79\x63\x3d\x70\xbd\x45\xa4\x76\x79\x52\xac\x60\xba\x3b\x3d\xdc\xf2\x48\x98\x18\x2a\x80\x51\x58\xdd\x63\xa4\x07\x91\x68\x70\xa1\x05\xd1\xa9\x64\x54\xf5\x4f\x00\x00\x00\xff\xff\xe9\x40\x30\x01\xd1\x0a\x00\x00"

func bvlcReferenceCaffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceCaffenetYml,
		"BVLC-Reference-CaffeNet.yml",
	)
}

func bvlcReferenceCaffenetYml() (*asset, error) {
	bytes, err := bvlcReferenceCaffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-CaffeNet.yml", size: 2769, mode: os.FileMode(420), modTime: time.Unix(1502685797, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceRcnnIlsvrc13Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\xc1\x8e\xdb\x36\x10\xbd\xeb\x2b\x06\xf0\xa5\x05\xd6\x52\xbd\x9b\xa6\x80\x0e\x45\x91\x05\x5a\x04\x48\x7d\xd8\x14\xb9\x14\x85\x31\xa2\x46\x16\x63\x8a\x24\x86\x23\x7b\xfd\xf7\xc5\x50\x92\xed\x6d\xb6\x49\xf6\xb0\x90\xc9\x37\xc3\xc7\x37\x6f\x46\xf2\x38\x50\x0d\xef\x3e\x7d\x78\x5c\x3f\x51\x47\x4c\xde\xd0\xfa\xe9\x71\xbb\x5d\xbf\xff\xf0\xf1\xd3\xd3\xe3\xe6\x01\x56\xa0\x20\x08\x1d\x9c\xc3\xc8\x30\x84\x96\x5c\xd1\x31\x0e\x74\x0a\x7c\xa8\x0b\x80\x29\xc9\x23\x76\x1d\xc1\x0a\x2e\x5b\xd0\x05\x06\xe9\x69\x0e\x01\x38\x12\x27\x1b\x7c\x0d\x9b\xf2\xa7\x17\xc0\x79\x03\x4c\xf0\xc2\x68\xbd\x14\xff\x81\x2e\x00\xeb\xbb\xc0\x03\xca\xf4\x0c\x89\x06\xf4\x62\xcd\x65\x7f\xda\x2d\x34\x0f\x5a\x4f\x5c\xc3\x0a\x2e\x3f\x12\x8c\x89\x5a\x90\x00\x91\x58\x91\x13\x31\x88\x4c\xad\x35\x9a\xb3\x80\xeb\xdf\x0a\x86\xd1\x89\x8d\x8e\x20\x3a\x14\xc5\x27\x30\xe8\xa1\x21\x48\x91\x8c\xed\x2c\xb5\x05\x00\x0e\xed\xdb\x37\x75\x8e\xdc\xc7\xb1\x06\x46\x1b\x39\x7c\x26\x23\x95\x41\x1e\xdc\xda\xa8\x2e\x75\x86\xad\x4d\x1c\x33\xd2\x7c\x13\xb9\xcf\xc8\x18\xcd\xdb\x37\x8e\xea\x6f\x06\xcd\xc0\x39\xec\xeb\x54\x6e\xb1\x2d\x25\xc3\x36\x4a\xd6\xfa\xd7\x02\xe0\xaf\x9e\x20\x8e\x4c\x73\x39\xad\x4f\xa2\x12\x4f\x92\x87\x2e\xd7\xf3\x69\xfd\xb8\xdd\xce\xe2\x69\x8d\x2f\x56\x69\x49\x28\x0b\x59\xe6\x4c\x36\xcd\xa0\x13\x26\x18\xb0\x25\x68\xce\x20\x8c\x3e\x45\xa7\x49\xfd\xfe\x26\xdd\xc7\x4f\x7f\x82\x71\x98\x92\x0a\xcb\x09\xac\x97\x00\x08\x9d\x59\xb3\xf1\xfe\xb2\x65\x26\x26\x0e\xcf\xc4\x77\x10\x39\x1c\x6d\x4b\x2d\xf4\xc4\x04\x98\x00\x95\x64\xb7\x96\x9e\xd6\xa9\x27\xd7\xcd\xd7\x98\x88\x05\xce\xbc\xf8\x9c\x8f\xbd\x90\x05\x7a\xc6\x41\xeb\x2c\x01\x12\x11\x58\x51\x6f\xe1\xe5\x22\xdb\xf2\x5d\x09\xbf\x07\x06\xa6\x44\xc8\xa6\x57\x81\x62\x48\x94\xee\x60\xc0\x03\xa9\xad\x16\x69\x42\xd7\x59\x63\xd1\xcd\x97\x8a\x68\x0e\xb8\x27\x40\xdf\x82\x0f\x02\xa2\x9a\xcc\xc7\xbd\xa2\x51\x36\x3f\xb5\x2a\xd3\x53\x48\x09\xfe\xb0\x9c\x7a\x6b\x0e\xf0\x1b\x37\xfb\xf9\xb9\xe0\xa5\x4f\x93\xba\xfb\xfa\x2b\x1b\x1b\xa3\x6a\x57\xc1\x89\x9a\x64\x85\xf4\x91\xc4\x94\x25\x4c\x85\x6e\x16\xcd\x97\x96\x5c\x43\x2f\x12\x53\x5d\x55\x7b\x2b\xfd\xd8\x94\x26\x0c\x95\x8e\x83\x2a\x7b\xa5\x12\x26\xaa\x06\x4c\x42\x5c\xe5\x98\x54\x35\x47\x67\x76\x97\x63\x77\x5a\x9d\x9d\x75\xe9\xc8\x66\xf3\xf0\x22\x23\xf2\xb3\x3d\x96\x81\xf7\x15\x36\xa9\xda\x3c\x6c\x36\xe5\xfd\xcf\xf7\x6f\x2e\x98\xba\xaa\x7c\x73\xb4\x74\x22\x2e\x3f\x8f\xf1\x2c\xc4\x19\x3d\x31\xb9\x65\xd1\xb8\xd0\x2c\x2c\x66\xf5\x52\x75\x35\x9b\x8d\x67\xdf\x14\x2b\x70\xd6\x90\xbf\xd6\x62\xba\xe3\xbc\x58\xc3\xe8\x99\x92\xb0\x35\x42\x6d\xb1\x02\xeb\xe3\x28\x59\xb4\x2b\x76\x5a\xd3\x6e\x5b\x41\x67\x39\xc9\x84\x02\x39\x47\xfa\x62\x9a\xad\xf3\x72\x0d\x76\xc0\x3d\x15\xd3\xc8\xb8\x69\xa7\x85\xc5\x4d\x9e\x0c\x7a\xd1\x71\x0a\x98\x8e\xb8\x66\x89\xa8\x73\x51\x88\x73\x7d\xf3\xd1\xd7\xa5\x79\x42\xb5\x76\x20\xaf\x13\x2f\xd5\xf0\xf7\xe6\x0e\x1e\xee\xe0\xfe\xfe\x97\xfc\xef\x9f\x22\x8c\x12\x47\x99\x6e\xa1\x07\xe4\x14\x8b\x3f\xf3\x5e\x01\x33\xf7\x8e\x50\x46\xa6\x0c\xc5\xd7\xd8\x4f\xf8\x2b\x81\xe2\x95\x0b\xcc\x18\x87\x4d\xd6\xe5\x86\xff\xac\xca\x6b\x77\x98\x4f\x4e\xbb\x91\x5d\x7d\xb1\x0c\xe3\xa9\x9c\xca\x3f\x26\x62\x9d\xdc\xe4\x25\x7b\x92\xd1\xae\x5f\x0e\xb3\xd9\x8e\xb3\x2d\x5a\x14\xac\x66\x1b\xde\xab\x37\x76\xe9\xec\x13\xc9\xee\x14\xb8\x4d\xa5\x3c\x4b\x91\x03\x54\xd3\x65\x7c\x2f\xad\xb7\x67\x8c\x7d\xee\xd1\x13\xd9\x7d\x2f\x49\x3b\x3d\x8c\x6c\x48\xb9\xe6\xdd\x5d\x44\xe9\xbf\x87\xe7\x8d\x6b\xbf\xbf\x6d\xaa\x96\xa2\x0b\xe7\x32\x72\x90\xa0\x54\x61\x61\x72\x73\x6e\x5d\x55\xad\x2b\x73\xea\xb2\x21\x3e\x90\xa3\xf3\xd1\xaa\x09\x72\xd7\x7c\x2d\xff\x14\xb5\x18\xd7\xa6\x9d\x4e\x31\x7b\x54\x03\xa0\x4b\xfa\xd2\xb6\x1d\x24\x92\x3b\xad\xa7\xcf\x45\x6d\x30\x91\xd6\x06\x6c\x02\x04\x7d\xd0\x71\xec\x61\x8e\xbc\x7d\x53\xde\xbc\x32\x35\xf2\xaa\xd7\xad\xa4\xd3\x42\x4e\xdf\x92\x0f\x42\xfa\xfc\x3f\x59\x3a\xeb\x28\x7f\x54\xa4\xc5\x86\x5f\x56\xe8\x64\xa5\xb7\x13\xd5\x85\x12\x8a\xb0\x6d\x46\x99\x06\x23\x3d\x0b\x23\x78\x92\xfc\x85\x71\xdd\x2b\x00\x0e\xd6\xb7\x35\xe8\x7c\x9e\x18\xeb\x6f\x3d\xc9\xd3\xc8\xe8\x2e\x31\x3f\x3c\x6e\xb7\x77\xf0\xa4\xff\xca\xb2\xfc\x51\x9b\x46\xe7\xb3\xf5\xfb\x9d\xba\x2d\x91\xd4\xf0\x5e\xdb\x76\x4b\xa2\xbd\x3f\xad\x5d\x3e\x32\xf2\xbc\x98\x03\x0a\x80\x01\xbd\xed\x28\xc9\x0e\x47\xe9\x03\xd7\x80\x4d\x3b\xba\xb6\xf8\x37\x00\x00\xff\xff\x1e\x06\xbb\x1b\x82\x09\x00\x00"

func bvlcReferenceRcnnIlsvrc13YmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceRcnnIlsvrc13Yml,
		"BVLC-Reference-RCNN-ILSVRC13.yml",
	)
}

func bvlcReferenceRcnnIlsvrc13Yml() (*asset, error) {
	bytes, err := bvlcReferenceRcnnIlsvrc13YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-RCNN-ILSVRC13.yml", size: 2434, mode: os.FileMode(420), modTime: time.Unix(1502685800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v10Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\x60\x04\x68\x01\xaf\x64\x6f\xb2\xbb\x81\x0e\x05\xd2\xed\x25\x17\x1f\x92\x63\x11\x18\x63\x6a\x64\xb1\xe1\x57\xc8\xe1\xda\x9b\x5f\x5f\x0c\x25\x5b\xda\x66\xdb\xd4\x07\x43\xe4\xbc\xf9\x7a\x7c\x1c\x3a\xb4\xd4\xc2\xe7\x6f\x99\xe8\x3b\xed\x88\x61\x05\xb2\x05\xbe\x87\x67\x9f\x23\x58\xdf\x91\xa9\xfa\x88\x96\x4e\x3e\x7e\x6d\x2b\x80\xd1\xe5\x11\xfb\x9e\x60\x05\x57\x13\xf4\x3e\x02\x0f\x34\xb9\x00\x3c\x51\x4c\xda\xbb\x16\xb6\xf5\xe6\x05\x70\x32\x80\xf2\x8e\x23\x6a\xc7\xd5\x3f\xa0\x17\x80\x76\xbd\x8f\x16\x79\xfc\x86\x44\x16\x1d\x6b\x75\xb5\x8f\xd6\x4a\xe2\xa0\x76\x14\x5b\x58\xc1\x75\x91\x20\x27\xea\x80\x3d\x04\x8a\x82\x1c\x0b\x83\x10\xa9\xd3\x4a\x62\x56\x30\xff\x56\x60\xb3\x61\x1d\x0c\x41\x30\xc8\x82\x4f\xa0\xd0\xc1\x81\x20\x05\x52\xba\xd7\xd4\x55\x00\x68\xbb\xfb\x77\x6d\xf1\x3c\x86\xdc\x42\x44\x1d\xa2\xff\x8b\x14\x37\x0a\xa3\x35\x37\x4a\x78\x69\x0b\xec\x46\x85\x5c\x90\xea\xa7\xc8\x63\x41\x86\xa0\xee\xdf\x19\x6a\x7f\xea\x34\x01\x27\xb7\xff\x2e\x65\x89\xed\x28\xa9\xa8\x03\x17\xae\x7f\xab\xe0\x72\xf0\x8e\x18\x50\x0d\x9a\x9e\x28\x41\xd2\x56\x1b\x8c\x10\x29\x65\xc3\x49\x18\xfc\x60\xe8\xbc\x23\x5e\x03\x32\xdc\x6d\xce\xd0\xd3\x89\x22\x04\x94\x23\x65\xa1\x1a\x5d\x07\xdb\xe6\x6e\xb3\xe1\xa1\x68\x20\xe9\xef\x54\x4b\x7c\x8b\xc6\x8c\xc4\x27\xc0\x28\xe2\x88\x04\x3d\x61\xd2\x07\x43\x12\xba\xa3\x60\xfc\x33\x78\x07\x03\xc6\xee\x24\x98\x93\xe6\x01\x8c\xb6\x9a\xa9\x03\x4b\xd6\xc7\xe7\x35\x44\xfa\x96\x75\x24\x30\x94\x52\x05\xa0\xbc\xb5\xd9\x69\x35\x8a\xa3\xcb\x51\xbb\x23\x74\x3a\x71\xd4\x87\x2c\x7e\x45\x59\xda\x1d\xd7\xa5\x36\x09\x2b\x49\x29\x96\x9c\x57\x9c\xac\x94\xd1\xe4\x38\xd5\x33\x1d\xbb\x25\x1d\x77\x0f\xf5\xdd\x9b\x12\xe4\xfd\xa6\x7e\xfb\x06\xd8\x87\x9b\x6d\x59\xcb\xd7\x1d\xa0\xca\x11\x15\x97\x16\x3e\x5a\x3c\x8a\x77\x5d\x45\xea\x29\x92\x53\x94\x44\x94\xf3\xaa\xe8\x11\x83\x70\xd6\xc0\x89\x0e\x49\x33\xc9\x27\xb1\xaa\x6b\x18\xcf\xe7\x20\xbd\x2c\x6f\xd2\x0d\x0c\xcc\x21\xb5\x4d\x73\xd4\x3c\xe4\x43\xad\xbc\x6d\xfe\x20\x0a\x9f\x15\x1a\x6a\xe6\xaa\x5f\x60\x31\x9e\xf5\x53\xed\xe3\xb1\xc1\x43\x6a\xb6\xf7\x9b\xdb\x7a\xf3\xf0\xf6\x7e\x53\xad\xc0\x68\x45\x2e\x95\x5b\x3e\xe7\x99\x36\x5b\xf8\xfd\xc3\xc7\x4f\xd5\x0a\xb4\x0b\x79\x3c\xfe\x19\x33\xee\x89\x40\x57\xd0\xeb\x98\x78\x44\x01\x3f\x07\xfa\x61\x00\xdc\x94\xed\x16\xb4\xb0\x52\x8d\xb7\x6c\xa1\xc0\x4b\xf6\x45\x9c\x02\x7a\x21\x52\x01\x8c\x29\xe6\x28\xb3\xee\x84\xdb\x92\x7a\xde\x9a\x2e\x75\xa7\x2d\x39\x19\x12\xa9\x85\x3f\xb7\x6b\x78\xbb\x86\xdb\xdb\x87\xf2\xf7\x65\x82\x58\x42\x27\xc6\xdb\xf7\x6b\xb8\xfc\x7d\xa9\x7c\xe6\x90\x79\xec\x50\x92\x97\xf0\x53\xa5\xa3\xad\x82\xa9\xaf\x9e\x90\x73\xa4\x02\xc5\xd7\x3a\x1b\xf1\x73\x71\xd5\x2b\xcd\x4d\x18\x83\x87\xc2\xd9\xa2\xb7\x89\xb1\xd7\xfa\x9b\x32\xa7\x7d\x8e\xa6\x2d\x07\xde\x36\x4d\x87\x8c\x75\x67\x8d\xaa\xad\x69\xec\xd9\x11\x37\xe3\xc5\x6b\x0a\x75\xb2\x4e\xcf\x2e\x11\xd7\x7c\xe6\xaa\x98\x84\xbf\xcb\x74\x4b\xd3\x7c\x3c\x46\x0c\x43\xd1\xf7\x89\xf4\x71\xe0\x24\x83\xc0\xe7\xa8\x48\x72\x1f\x30\xd1\x9c\xf5\x7f\x48\xb2\x89\x78\x6a\x2c\x26\xa6\xb8\xd8\xdd\x3f\x6d\xeb\x4d\x53\xc1\x98\x6d\x1f\x90\x87\x76\x1a\x05\x75\x88\x9e\xbd\x94\x08\x97\x0a\x26\x7b\xba\x0e\xab\xe2\x5e\x97\xf9\x76\x11\x9b\x4e\x7b\x8c\x6a\xd0\x4f\x72\x30\x68\x92\xbc\x4d\xba\x87\x24\x53\x8b\x07\x72\x85\xec\x4b\xf5\xa0\x13\x20\xc8\x07\x7b\x40\x07\x93\xe7\xf2\x41\x58\xbc\x0c\xe2\x39\xd7\xb9\xa4\x66\xdc\x28\xe1\x3b\x72\x5e\xe6\xc9\xf0\x6f\x51\x7a\x6d\xa8\xbc\x9d\xe9\x22\x8f\x1f\x99\x96\xc9\xa7\xc7\x52\x2f\x25\x21\x4f\xa3\xaa\x88\x9d\xce\x1c\x11\x1c\x71\x79\x48\x67\x5b\x05\xf0\x55\xbb\xae\x85\xc7\xdd\x6e\xaa\x58\xd6\x92\xc9\x51\x8e\x68\xae\x3e\xbf\x3c\xee\x76\x6b\xf8\x24\x7f\x75\x5d\xff\x2a\x62\x9e\x26\xe5\x5e\x04\x94\x88\xdb\xeb\x18\x93\xfb\x3a\xee\x5d\xdf\xd2\x72\xc7\x27\x87\x0a\xc0\xa2\xd3\x3d\x25\xde\x63\xe6\xc1\xc7\x16\xf0\xd0\x65\xd3\x55\x7f\x07\x00\x00\xff\xff\x9e\x17\x41\xf2\x57\x08\x00\x00"

func squeezenet_v10YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v10Yml,
		"SqueezeNet_v1.0.yml",
	)
}

func squeezenet_v10Yml() (*asset, error) {
	bytes, err := squeezenet_v10YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.0.yml", size: 2135, mode: os.FileMode(420), modTime: time.Unix(1502686947, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v11Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x5f\x6f\xdb\x36\x10\x7f\xd7\xa7\x38\xc0\x40\xb1\x01\xb6\x14\xa7\x6e\xda\x09\xe8\x86\x2d\x7b\xe9\x4b\x1e\xda\xc7\xa1\x30\x4e\xe4\xc9\xe2\x22\x91\x1c\x79\x8c\x93\x7d\xfa\xe1\x48\xd9\x72\xda\x74\xf1\x83\x20\xdd\xfd\xee\xee\xc7\xfb\x47\x57\x16\x27\x6a\xe1\xcb\x3f\x89\xe8\x5f\xba\x23\x86\x15\x88\x08\x5c\x0f\x4f\x2e\x05\x98\x9c\xa6\xb1\xea\x03\x4e\x74\x74\xe1\xbe\xad\x00\x8a\xc9\x2d\xf6\x3d\xc1\x0a\xce\x2a\xe8\x5d\x00\x1e\x68\x36\x01\x78\xa0\x10\x8d\xb3\x2d\x6c\xeb\xab\x67\xc0\x59\x01\xca\x59\x0e\x68\x2c\x57\x17\xd0\x2d\xac\xce\x00\x63\x7b\x17\x26\xe4\xf2\x0e\x91\x26\xb4\x6c\xd4\x59\x5f\xb4\x95\xf8\x41\x63\x29\xb4\xb0\x82\xf3\x47\x84\x14\x49\x03\x3b\xf0\x14\x04\x59\x88\x81\x0f\xa4\x8d\x12\x9f\x15\x2c\xbf\x15\x4c\x69\x64\xe3\x47\x02\x3f\x22\x0b\x3e\x82\x42\x0b\x1d\x41\xf4\xa4\x4c\x6f\x48\x57\x00\x38\xe9\x9b\x5d\x9b\x2d\x0f\x3e\xb5\x10\xd0\xf8\xe0\xfe\x26\xc5\x8d\xc2\x30\x8d\x1b\x25\x79\x69\x33\x6c\xa3\x7c\xca\x48\xf5\x2a\xf2\x90\x91\xde\xab\x9b\xdd\x48\xed\xab\x46\x33\x70\x36\xfb\x7f\x2a\x97\x58\x4d\x51\x05\xe3\x39\xe7\xfa\xd7\x0a\x2e\x0b\xff\x20\xb9\x1f\x30\xc2\x75\xbd\x7b\x84\x91\x62\x04\xe5\x26\x9f\xb8\xe4\x9f\x07\xb4\x82\xb9\x5a\xc3\xd1\xf0\xe0\x12\x43\x44\x15\x4c\x6f\x94\xb1\x07\x40\xa5\x52\x40\xf5\x54\x57\x81\x7a\x0a\x64\x15\x45\x29\xc7\xf2\x95\x2b\x81\x5e\x0a\xd3\xc0\x91\xba\x68\x98\xe4\x95\x58\xd5\x35\x14\x66\x9d\xb8\xba\xec\xa1\x0d\x0c\xcc\x3e\xb6\x4d\x73\x30\x3c\xa4\xae\x56\x6e\x6a\xfe\x24\xf2\x5f\x14\x8e\xd4\x2c\xf4\x9f\x61\x31\x3c\x9a\x87\xda\x85\x43\x83\x5d\x6c\xb6\x37\x57\xd7\xf5\xd5\xfb\xb7\x37\x57\x3f\x72\xa8\xcd\x83\xd1\x86\x4d\xa3\xee\x4b\xd2\x1a\x0e\x44\xcd\x84\x91\x29\x34\x1e\xd5\x3d\x1e\xa8\xc9\x9a\x4c\x6c\xa3\x89\x7c\x14\x06\x9b\x58\x18\x58\xe2\xcd\xb6\xde\x9e\x03\xb4\x4d\xa3\xee\xad\x3b\x8e\xa4\x0f\x94\x99\x04\xf2\xae\x39\x52\x57\xfb\xc1\xff\xc6\x34\x49\x97\xd1\xc7\x05\xf4\xe6\xcd\x51\x19\xfd\x71\x0e\xd6\xbe\xfb\x65\xb7\xdd\xbd\xdd\x7d\xe8\xb6\x9d\x26\xdd\xbd\xab\x56\x30\x1a\x45\x36\xe6\xd1\x5c\x52\x34\x0b\x5b\xf8\xe3\xf7\x4f\x9f\xab\x15\x18\xeb\x13\xe7\x5c\x2f\x98\x22\x93\xae\x5a\x41\x6f\x42\xe4\x82\x02\x7e\xf2\xf4\xdd\xd4\x6e\xb2\xb8\x05\x33\xe1\x81\xaa\x32\x1a\x17\x6d\x73\x8a\x7e\xe1\x27\x83\x9e\x75\x96\x00\x4a\x88\xc5\x8b\x47\x99\x7f\xa6\x90\xdb\x22\x87\x5e\x44\xf3\x24\x6a\x33\x91\x95\xc9\x8e\x2d\xfc\xb5\x5d\xc3\xdb\x35\x5c\x5f\xbf\xcf\x8f\xaf\x33\x64\x22\xb4\xa2\xbc\xfe\xb0\x86\xd3\xe3\x6b\xe5\x12\xfb\xc4\xe5\x84\x12\x3c\xbb\x9f\x99\x16\x5d\x05\xf3\xb9\x7a\x42\x4e\x81\x32\x14\x5f\x3a\x59\xc1\x2f\xe4\xaa\x17\x0e\x37\x63\x46\xec\x72\xce\x2e\xce\x36\x67\xec\xa5\xf3\xcd\x91\xe3\x3e\x85\xb1\x3d\x75\x89\x46\xc6\x5a\x4f\xa3\xaa\xa7\xb1\x99\x1e\x2d\x71\x93\x2b\x11\x9b\x9c\x3a\xf9\x8e\x4f\x36\x12\xd7\xfc\xc8\x55\x56\x49\xfe\x4e\x2b\x29\xce\x4b\xed\x10\xd0\x0f\x80\x56\xc3\x91\xcc\x61\xe0\x08\x81\xa2\x4b\x41\x91\xc4\xce\xda\xbd\x47\x1e\xda\x73\xfb\x07\x3c\xd6\x65\x04\x52\xa4\x20\x5b\x93\x2c\xe7\x69\x08\x68\x36\xcf\x17\xc9\xcc\x68\x9e\x87\x32\x21\x4b\xe3\xef\x65\x73\x34\x9a\xfc\xe8\x9e\x6a\x1f\x1c\x3b\xa1\x0a\x27\x26\xdf\xc4\x7d\x65\x8e\x85\xd7\x29\xd0\x22\x2d\x21\xbe\x09\x59\x2f\x03\x59\x01\x98\xb8\xc7\xa0\x06\xf3\x20\x35\xc6\x31\xca\xdd\x64\x7a\x88\xc4\x6b\x29\x99\xcd\x75\xeb\x30\x92\xa4\x1f\x4c\x04\x04\x79\x61\x07\x68\x61\xb6\xbc\xbc\x10\x2e\x6e\x06\xb1\x5c\x52\x78\x99\xe5\x22\xc8\xee\x35\x59\xc7\x24\xef\x3f\xf0\xd2\x9b\x91\xf2\xdd\x19\x4f\x9d\xf6\x7d\xd1\x64\xb3\x9a\x42\xf5\x44\x09\x99\x83\xe9\x12\x97\x75\x4a\x8f\x1c\x10\x2c\x71\xbe\x48\x17\x5d\x05\x70\x6f\xac\x6e\xe1\xf6\xee\x6e\x66\x2c\xdf\x12\xc9\x52\x0a\x38\x9e\x6d\x7e\xba\xbd\xbb\x5b\xc3\x67\x79\xd4\x75\xfd\xb3\xcc\x85\xdc\xc1\xc6\x1e\xf6\xd2\x8b\x91\xb8\x85\x4f\xd2\x7a\xe5\xcf\xc0\x2c\x3b\xdf\xa5\x79\x5d\xcc\x06\x15\xc0\x84\xd6\xf4\x14\x79\x8f\x89\x07\x17\x5a\xc0\x4e\xa7\x51\x57\xff\x05\x00\x00\xff\xff\xac\xc6\x70\x72\x58\x08\x00\x00"

func squeezenet_v11YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v11Yml,
		"SqueezeNet_v1.1.yml",
	)
}

func squeezenet_v11Yml() (*asset, error) {
	bytes, err := squeezenet_v11YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.1.yml", size: 2136, mode: os.FileMode(420), modTime: time.Unix(1502722373, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg16Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4b\x8f\xdb\xb6\x13\xbf\xeb\x53\x0c\xe0\x4b\x02\xac\x48\xcb\xf6\xfa\xa1\xc3\xff\x10\x1f\x8c\x00\xf9\xef\x21\x2d\x16\x68\x8b\xc0\xa0\xc8\x91\xcc\xae\x44\x12\xe4\xc8\x5e\x5f\xfa\xd9\x0b\x52\xf2\x63\x93\x6d\x53\x1d\x04\x92\xf3\x9b\xf7\xcb\x88\x0e\x4b\x78\xde\xed\x8a\x25\x4c\x20\xde\xc0\xd6\x70\xb6\xbd\x87\xce\x2a\x6c\xb3\xda\x8b\x0e\x4f\xd6\xbf\x94\x19\xc0\x80\xde\x8a\xba\x46\x98\xc0\x95\x04\xb5\xf5\x40\x07\x1c\x59\x00\x8e\xe8\x83\xb6\xa6\x84\x82\x4d\xdf\x00\x47\x02\x48\x6b\xc8\x0b\x6d\x28\xfb\x0e\x7a\x01\x68\x53\x5b\xdf\x09\x1a\xce\x10\xb0\x13\x86\xb4\xbc\xd2\x07\x6a\x16\xe5\x08\x6d\xd0\x97\x30\x81\xeb\x25\x40\x1f\x50\x01\x59\x70\xe8\x23\x72\x30\x0c\x9c\x47\xa5\x65\x94\x99\xc1\xed\x9b\x40\xd7\xb7\xa4\x5d\x8b\xe0\x5a\x41\x11\x1f\x40\x0a\x03\x15\x42\x70\x28\x75\xad\x51\x65\x00\xa2\x53\xcb\x45\x99\x38\x1b\xd7\x97\xe0\x85\x76\xde\xfe\x89\x92\xb8\x14\xbe\x6b\x73\x19\xe3\x52\x26\x58\x2e\x5d\x9f\x90\xf2\xa7\xc8\x26\x21\x9d\x93\xcb\x45\x8b\xe5\x4f\x99\x46\xe0\xc8\xf6\xef\xa6\xdc\x63\x15\x06\xe9\xb5\xa3\x14\xeb\xff\x65\x00\xbf\x5e\xf2\x05\x3a\x80\x30\xa0\x3b\xe7\xed\x11\xd5\x35\xc4\xb6\x4e\x39\x2d\x96\x79\x2b\xce\x38\xd6\xc3\x10\xd9\xea\x9c\x48\xcf\xbb\x1d\x10\x8a\x2e\x66\x28\xde\x3f\x7f\xf9\xe5\xf9\xeb\x36\x9f\x4d\x8b\x05\x48\xdb\x39\x24\x1d\xf5\xb1\xcc\x63\x8d\x1e\x8d\xc4\x10\xf3\x74\xbb\xa5\x14\x09\x17\x33\xc6\xe1\x84\x55\xd0\x84\xf1\x88\x24\x19\x83\xc1\xe4\x4a\x9b\xe6\x4d\x71\xe5\x70\x20\x72\xa1\xe4\xbc\xd1\x81\x58\xa3\xe9\xd0\x57\x4c\xda\x8e\xbf\x04\xdd\x59\x73\x16\x86\xcf\x8a\x62\x3d\xdf\xe0\x6a\x35\xad\x57\xd5\xe3\x7c\x8d\x33\xb5\xfe\x8e\xf5\xca\xf5\xe9\xf9\xcb\x96\xa7\x80\xf1\x93\x7e\xd1\xfc\xff\x51\x4f\xfe\xbb\xb5\x93\xa4\x31\xe4\xd1\xe5\xbc\x3a\xe7\x74\xc0\xfc\xd8\x34\x79\x74\x39\xd7\x26\xd7\x6d\x38\x7a\x99\xdc\x7d\x23\x5b\xf8\x57\x7d\x64\xd6\x37\x5c\x54\x81\x17\x8b\xe9\x86\x15\x8f\x8f\xcb\x6c\x02\xad\x96\x68\x02\x5e\x42\x3b\x78\x34\x3e\x96\xb0\xdd\xc2\xa7\xdf\x60\xc1\xa6\xf0\x41\xda\xae\x43\x2f\xb5\x48\x01\x4f\x19\x6a\x5b\x7b\x42\xf5\x31\x9b\x80\x36\xae\xa7\x14\xbb\x9b\x90\xe1\x2d\x96\xcf\x04\x6a\xed\x03\x0d\x28\xa0\xb3\xc3\x1f\xda\x33\x4f\xcf\x25\xe8\x4e\x34\x98\x0d\x3d\x70\x57\x1f\x17\xf3\xee\xe4\x24\xd0\x9b\x12\x8a\x80\x41\xc5\x4d\x8a\x13\xb1\xd1\x09\x7d\x4a\x73\x52\x7d\x7b\x1a\x5b\x4e\xe9\x0e\x4d\xac\xaf\x50\xc2\x1f\xc5\x03\xcc\x1f\x60\x36\x5b\xa4\xdf\xb7\x11\xd2\xa1\x30\x91\x38\x9b\xb3\xe5\xfa\x01\x8a\x62\xc9\x56\xab\xcd\x03\x14\xd3\x39\xdb\xcc\x37\xdf\x32\xdb\x93\xeb\x69\x70\x36\xda\x91\x34\x8d\x46\x0f\xb4\x0c\x46\x17\x6b\x14\xd4\x7b\x4c\x50\xf1\x9e\x93\x03\xfe\x66\x67\xf6\x8e\x9f\x23\xa6\x15\x55\x0a\xdf\x9d\x9b\x63\xf0\xde\x73\x75\xd4\x1c\xf6\xbd\x6f\xcb\x54\x1b\x25\xe7\x4a\x90\x60\xaa\x6b\x25\xeb\x5a\xde\xbd\x1a\x24\x3e\x14\x19\x4f\x51\x8c\xf7\x70\x36\x01\x89\xd1\x2b\x65\x89\x14\x43\x79\x19\x43\x61\x6c\xc2\xc6\x0b\x77\x00\x61\x14\x9c\x50\x37\x07\x0a\xe0\x31\xd8\xde\x4b\x8c\xba\x13\x75\xef\x04\x1d\xca\xf7\x5a\xa5\x0f\xe8\xe3\xa8\x44\x43\xff\xa1\x6b\xb8\x17\x27\xae\x50\x6d\xe6\xcb\x79\xa5\x36\x73\x94\x53\xb9\x5a\x4d\x8b\xf9\xa2\x5e\xe0\x7c\xbd\x52\x6b\x11\xbf\xd9\x62\xba\x92\xc8\x9f\x77\xbb\xfd\x30\x05\xf6\xc5\x72\x9f\xe6\x46\xd8\x2b\x74\xad\x3d\x33\xe7\x2d\xd9\xe8\x16\x5c\xac\xbe\xb3\xb1\xe4\xfc\x74\x3a\x31\x6f\x2b\x4b\x81\xd9\x57\x26\x24\xeb\x5f\xf8\x5f\xc7\xa6\xe1\xc1\xd6\x74\x12\x1e\xf9\x11\xfd\x79\xaf\x10\xdd\xd8\xae\xef\x69\x63\x89\x74\xa9\x74\x1d\xf6\xc2\xcb\x83\x3e\xc6\x52\x10\x6d\x88\x6b\x4b\xd7\x10\x90\x1e\x62\x66\x87\xb1\x55\x89\x80\x31\x4b\xa9\xcd\x20\x1e\xc8\xc6\x89\x38\x72\xde\xef\x8a\xbb\xa5\x11\x39\x6f\x91\xbe\x4f\xc6\xf0\x90\xc4\x2b\x34\x96\x30\x9e\xff\x41\x4a\xad\x5b\x4c\x6b\x35\x5c\x0a\xf2\xc7\xdc\x9e\x34\x1d\xc6\x09\x7b\x31\x49\x10\x79\x5d\xf5\x34\x0c\x54\x7c\x25\x2f\xc0\x20\xa5\x1d\x7b\xa3\x65\x00\x2f\xda\xa8\x12\xb6\x4f\x4f\xa3\xc5\xf1\x1e\x35\x19\xec\xbd\x68\xaf\x3c\x1f\xb6\x4f\x4f\x0f\xf0\x35\xfe\x18\x63\x1f\x63\xfb\xc4\xf5\xac\x4d\xb3\x8f\x25\x1b\x90\x4a\xf8\x1c\x2b\xf4\x09\x29\x0e\x8b\xe1\xed\xba\x66\xd3\x80\x19\x19\x32\x80\x4e\x18\x5d\x63\xa0\xbd\xe8\xe9\x60\x7d\x09\xa2\x52\x7d\xab\xb2\xbf\x03\x00\x00\xff\xff\x97\xe6\x41\xd4\x6d\x08\x00\x00"

func vgg16YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg16Yml,
		"VGG16.yml",
	)
}

func vgg16Yml() (*asset, error) {
	bytes, err := vgg16YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "VGG16.yml", size: 2157, mode: os.FileMode(420), modTime: time.Unix(1502685497, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg19Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4b\x8f\xdb\xb6\x13\xbf\xeb\x53\x0c\xe0\x4b\x02\x58\xe4\xca\x0f\x79\xa5\xc3\xff\x10\x1f\x8c\x00\xf9\xef\x21\x2d\x16\x68\x8b\xc0\xa0\xa8\x91\xcc\xae\x44\x12\xe4\xc8\x5e\x5f\xfa\xd9\x0b\x52\xf2\x63\x93\x6d\x53\x1d\x04\x92\xf3\x9b\xf7\x4b\x8b\x1e\x4b\x78\xde\xed\xb2\x02\x66\x10\x6e\x60\x1a\x38\x9b\xc1\x41\x6f\x6a\xec\x92\xc6\x89\x1e\x4f\xc6\xbd\x94\x09\xc0\x88\xde\x8a\xa6\x41\x98\xc1\x95\x04\x8d\x71\x40\x07\x9c\x58\x00\x8e\xe8\xbc\x32\xba\x84\x8c\x3d\xbc\x01\x4e\x04\x90\x46\x93\x13\x4a\x53\xf2\x1d\xf4\x02\x50\xba\x31\xae\x17\x34\x9e\xc1\x63\x2f\x34\x29\x79\xa5\x8f\xd4\x24\xc8\x11\x4a\xa3\x2b\x61\x06\xd7\x8b\x87\xc1\x63\x0d\x64\xc0\xa2\x0b\xc8\xd1\x30\xb0\x0e\x6b\x25\x83\xcc\x04\x6e\xdf\x0c\xfa\xa1\x23\x65\x3b\x04\xdb\x09\x0a\x78\x0f\x52\x68\xa8\x10\xbc\x45\xa9\x1a\x85\x75\x02\x20\xfa\x3a\x5f\x95\x91\xb3\xb5\x43\x09\x4e\x28\xeb\xcc\x9f\x28\x89\x4b\xe1\xfa\x2e\x95\x21\x2e\x65\x84\xa5\xd2\x0e\x11\x29\x7f\x8a\x6c\x23\xd2\x5a\x99\xaf\x3a\x2c\x7f\xca\x34\x01\x27\xb6\x7f\x37\xe5\x1e\x5b\xa3\x97\x4e\x59\x8a\xb1\xfe\x5f\x02\xf0\xeb\x25\x5f\xa0\x3c\x08\x0d\xaa\xb7\xce\x1c\xb1\xbe\x86\xd8\x34\x31\xa7\x59\x91\x76\xe2\x8c\x53\x3d\x8c\x91\xad\xce\x91\xf4\xbc\xdb\x01\xa1\xe8\x43\x86\xc2\xfd\xf3\x97\x5f\x9e\xbf\x6e\xd3\xc5\x43\xb6\x02\x69\x7a\x8b\xa4\x82\x3e\x96\x38\x6c\xd0\xa1\x96\xe8\x43\x9e\x6e\xb7\x98\x22\x61\x43\xc6\x38\x9c\xb0\xf2\x8a\x30\x1c\x91\x24\x63\x30\x9a\x5c\x29\xdd\xbe\x29\xae\x14\x0e\x44\xd6\x97\x9c\xb7\xca\x13\x6b\x15\x1d\x86\x8a\x49\xd3\xf3\x17\xaf\x7a\xa3\xcf\x42\xf3\xe5\xe6\x71\x9d\xe5\x8b\xa6\x58\xcb\x7a\x51\xaf\x1b\xc4\xcd\xe6\x3b\xd6\x2b\xd7\xa7\xe7\x2f\x5b\x1e\x03\xc6\x4f\xea\x45\xf1\xff\x07\x3d\xe9\xef\xc6\xcc\xa2\x46\x9f\x06\x97\xd3\xea\x9c\xd2\x01\xd3\x63\xdb\xa6\xc1\xe5\x54\xe9\x54\x75\xfe\xe8\x64\x74\xf7\x8d\x6c\xe1\x5e\xd5\x91\x19\xd7\x72\x51\x79\x9e\xad\x1e\x0a\x96\xad\xd7\x79\x32\x83\x4e\x49\xd4\x1e\x2f\xa1\x1d\x3d\x9a\x1e\x4b\xd8\x6e\xe1\xd3\x6f\xb0\x62\x0f\xf0\x41\x9a\xbe\x47\x27\x95\x88\x01\x8f\x19\xea\x3a\x73\xc2\xfa\x63\x32\x03\xa5\xed\x40\x31\x76\x37\x21\xe3\x5b\x28\x9f\x19\x34\xca\x79\x1a\x51\x40\x67\x8b\x3f\xb4\x67\x1a\x9f\x4b\x50\xbd\x68\x31\x19\x7b\xe0\xae\x3e\x2e\xe6\xdd\xc9\x89\xa0\x37\x25\x14\x00\xa3\x8a\x9b\x14\x2b\x42\xa3\x13\xba\x98\xe6\xa8\xfa\xf6\x34\xb5\x5c\xad\x7a\xd4\xa1\xbe\x7c\x09\x7f\x64\x73\x58\xce\x61\xb1\x58\xc5\xdf\xb7\x09\xd2\xa3\xd0\x81\xb8\x58\xb2\xfc\x71\x0e\x59\x96\xb3\xcd\xa6\x98\x43\xf6\xb0\x64\xc5\xb2\xf8\x96\x98\x81\xec\x40\xa3\xb3\xc1\x8e\xa8\x69\x32\x7a\xa4\x25\x30\xb9\xd8\xa0\xa0\xc1\x61\x84\x8a\xf7\x9c\x1c\xf1\x37\x3b\x93\x77\xfc\x9c\x30\x9d\xa8\x62\xf8\xee\xdc\x9c\x82\xf7\x9e\xab\x93\x66\xbf\x1f\x5c\x57\xc6\xda\x28\x39\xaf\x05\x09\x56\xf7\x9d\x64\x7d\xc7\xfb\x57\x8d\xc4\xc7\x22\xe3\x31\x8a\xe1\xee\xcf\xda\x23\x31\x7a\xa5\x24\x92\x42\x28\x2f\x63\xc8\x4f\x4d\xd8\x3a\x61\x0f\x20\x74\x0d\x27\x54\xed\x81\x3c\x38\xf4\x66\x70\x12\x83\xee\x48\xdd\x5b\x41\x87\xf2\xbd\x56\x19\x3c\xba\x30\x2a\x51\xd3\x7f\xe8\x1a\xee\xc4\x89\x37\xab\x25\x22\x36\xf2\x31\x2f\xea\x7c\x95\x57\xab\x55\x21\x44\x2e\x31\xcf\x9b\xc7\x4d\xd5\x14\x8f\x1b\x91\xc9\xa2\x5a\xf3\xe7\xdd\x6e\x3f\x4e\x81\x7d\x56\xec\xe3\xdc\xf0\xfb\x1a\x6d\x67\xce\xcc\x3a\x43\x26\xb8\x05\x17\xab\xef\x6c\x2c\x39\x3f\x9d\x4e\xcc\x99\xca\x90\x67\xe6\x95\x09\xc9\x86\x17\xfe\xd7\xb1\x6d\xb9\x37\x0d\x9d\x84\x43\x7e\x44\x77\xde\xd7\x88\x76\x6a\xd7\xf7\xb4\xb1\x48\xba\x54\xba\xf2\x7b\xe1\xe4\x41\x1d\x43\x29\x88\xce\x87\xb5\xa5\x1a\xf0\x48\xf3\x90\xd9\x71\x6c\x55\xc2\x63\xc8\x52\x6c\x33\x08\x07\x32\x61\x22\x4e\x9c\xf7\xbb\xe2\x6e\x69\x04\xce\x5b\xa4\xef\x93\x31\x3e\x44\xf1\x35\x6a\x43\x18\xce\xff\x20\xa5\x51\x1d\xc6\xb5\xea\x2f\x05\xf9\x63\x6e\x4f\x8a\x0e\xd3\x84\xbd\x98\x24\x88\x9c\xaa\x06\x1a\x07\x2a\xbe\x92\x13\xa0\x91\xe2\x8e\xbd\xd1\x12\x80\x17\xa5\xeb\x12\xb6\x4f\x4f\x93\xc5\xe1\x1e\x34\x69\x1c\x9c\xe8\xae\x3c\x1f\xb6\x4f\x4f\x73\xf8\x1a\x7e\x8c\xb1\x8f\xa1\x7d\xc2\x7a\x56\xba\xdd\x87\x92\xf5\x48\x25\x7c\x0e\x15\xfa\x84\x14\x86\xc5\xf8\x76\x5d\xb3\x71\xc0\x4c\x0c\x09\x40\x2f\xb4\x6a\xd0\xd3\x5e\x0c\x74\x30\xae\x04\x51\xd5\x43\x57\x27\x7f\x07\x00\x00\xff\xff\x68\x5d\x45\xc3\x6d\x08\x00\x00"

func vgg19YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg19Yml,
		"VGG19.yml",
	)
}

func vgg19Yml() (*asset, error) {
	bytes, err := vgg19YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "VGG19.yml", size: 2157, mode: os.FileMode(420), modTime: time.Unix(1502686654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vocFcn16sYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8f\xdb\x36\x10\xbe\xeb\x57\x0c\xe0\x4b\x0b\xd8\x92\x25\x7b\x65\x5b\x87\x02\x81\x8b\x00\x45\x03\x27\x48\x5f\x87\x22\x10\x46\xe4\xc8\x62\x23\x91\x02\x39\xb2\xd7\xff\xbe\x20\x25\x3f\xb6\xd9\x74\x7d\x30\x28\xce\x37\xcf\x6f\x66\xa8\xb1\xa3\x02\xde\xef\x0f\x8b\x34\x77\xf0\xe9\xdd\x6f\xfb\x77\x1f\x60\x06\xfe\x1a\x4c\x0d\x17\x33\x58\xe8\x8c\xa4\x36\xaa\x2d\x76\x74\x36\xf6\x6b\x11\x01\x8c\x6a\x7b\xac\x6b\x82\x19\xdc\x44\x50\x1b\x0b\xdc\xd0\xa4\x02\x70\x22\xeb\x94\xd1\x05\xa4\xf1\xf2\x05\x70\x12\x80\x30\x9a\x2d\x2a\xcd\xd1\x7f\xa0\x57\x80\xd2\xb5\xb1\x1d\xf2\x78\x06\x47\x1d\x6a\x56\xe2\x26\x1f\xa5\x91\xb7\x83\x4a\x93\x2d\x60\x06\xb7\x0f\x07\x83\x23\x09\x6c\xa0\x27\xeb\x91\x63\x60\xd0\x5b\x92\x4a\x78\x9b\x11\xdc\x7f\x33\xe8\x86\x96\x55\xdf\x12\xf4\x2d\xb2\xc7\x3b\x10\xa8\xa1\x22\x70\x3d\x09\x55\x2b\x92\x11\x00\x76\x32\x5f\x17\x41\xf3\xd8\x0f\x05\x58\x54\xbd\x35\xff\x90\xe0\x44\xa0\xed\xda\x85\xf0\x75\x29\x02\x6c\x21\xfa\x21\x20\xc5\x9b\xc8\x63\x40\xf6\xbd\xc8\xd7\x2d\x15\x6f\x2a\x4d\xc0\x49\xed\xff\x43\x79\xc4\x4a\x72\xc2\xaa\x9e\x43\xad\x7f\x8a\x00\x7e\xff\xf8\xf3\xc7\xc8\x52\x4d\x96\xb4\x20\xe7\x0b\x78\xff\x0a\xb5\xc3\xde\x97\x32\x81\x33\x55\x4e\x31\xf9\x23\xb1\x88\x63\x18\x6d\x55\x4a\x1f\x5f\xb0\xbe\x80\x86\xb9\x77\x45\x92\xa0\x7d\x56\xa7\xd8\xd8\x63\x82\x95\x4b\xd2\x7c\xf9\x14\x2f\xf3\x2c\x4d\x6f\xa0\x22\x49\xce\xe7\x73\x2c\x4e\x8b\xda\x0c\x5a\x06\x9e\x03\xde\xf4\xa4\x51\x08\x72\x2e\xf1\x74\x92\xe6\x52\x9c\x7a\x5b\x66\xcb\xf4\x29\x69\xb8\x6b\x93\x0f\x46\x1f\xcb\xf7\x43\xdb\x5e\xca\xbd\xd1\x27\xd3\x0e\x5e\x19\xdb\xf2\x40\xec\x7b\xcc\x05\x6c\xb9\xff\xf3\xd3\xe7\x32\xa4\x10\x7b\xb5\x17\xe1\x1d\x15\x37\x43\x15\x0b\xd3\x25\xae\xa1\xb6\xc1\x8e\x6c\x52\x0b\x1d\x57\x64\xbf\x52\x4b\x97\x93\x72\xd7\x80\xd8\x12\x25\x1d\x3a\x26\x9b\x9c\x8c\x58\xd4\x42\xaf\x32\x17\xcd\xa0\x55\x82\xb4\x0b\xe3\x72\x2f\xc2\x74\x59\xc0\x1f\x87\x5f\x0f\x1f\xff\x3a\x44\x33\x50\xba\x1f\x38\x14\xf4\x0e\x1b\xef\x3c\xd9\x33\xa8\x95\x75\x3c\xa2\x80\x2f\x3d\x7d\x33\x4c\x8b\x70\x5d\x80\xea\xf0\x48\xd1\xd8\xb1\x0f\x6c\x5e\x03\x78\xb0\x13\x40\x2f\x08\xf7\x80\xd1\xc5\xdd\x4a\x8f\x7e\x2c\x99\x6c\xe0\x3e\xb8\xbe\x5f\x4d\x03\x22\x55\x47\xda\xd7\xc2\x15\xf0\x77\x3a\x87\xd5\x1c\x9e\x96\xcb\xf0\xf7\x65\x82\x74\x84\xda\x0b\xb3\x2c\xce\x37\xdb\x5d\x36\x87\x34\xcd\xe3\x3c\xdf\x6e\x36\x73\x48\x97\xeb\x78\xb9\xcc\x77\xbb\x2f\x91\x19\xb8\x1f\x78\xcc\xd9\x87\x13\x1c\x4e\xb1\x8f\xb2\x08\xa6\x4c\x6b\x42\x1e\x2c\x05\x28\xbe\x96\xeb\x88\xbf\x87\x1b\xbd\x92\xee\x84\x69\xb1\x0a\x55\x7c\xc8\x76\xaa\xe1\x6b\x19\x4f\x9e\x5d\x39\xd8\xb6\x78\xe8\x17\xc7\xf1\xd8\x34\x83\x23\x3b\x35\x66\xe8\x1f\xd4\x46\x5f\x3a\x33\xb8\x04\xb7\xd9\xba\xc2\xd5\x6a\x55\xe1\x2e\xcb\x76\x2b\xa4\xed\x52\xca\xad\xcc\xf3\x8d\x5c\xed\xd2\x34\xb1\x78\x4e\xaa\x4c\xa6\x32\x13\x28\x71\xb5\x21\x4c\xd7\xdb\x74\x8b\xd5\x46\xac\x28\xcb\x76\x62\xbd\xab\xaa\x2c\x13\xeb\xa7\xd5\x53\x70\x59\xab\x96\xd2\x98\x9f\x39\x0a\xad\xe0\x59\xba\xee\x23\x37\x6d\xb4\xa3\xc5\xbe\x01\xd4\x12\xce\xa4\x8e\x0d\x3b\xb0\xe4\xcc\x60\x05\xf9\x7c\x82\xb4\xec\x91\x9b\x7b\x2e\x16\xcf\xdf\x49\xe5\xcd\x51\x78\x39\x05\x69\xee\x92\x13\xb6\x71\x6f\x0d\x1b\x1f\x24\x5c\x63\x78\xf0\x58\x24\x89\x6c\xe3\xb0\x8d\x5e\xb3\x38\x9a\x59\x34\x84\xa7\xcb\xa2\x47\x27\x70\x02\x5f\x7b\x5f\xb9\x12\xad\x68\xd4\xc9\x77\x05\xb6\xce\x3f\x3b\xaa\x06\x47\x3c\xf7\x24\xeb\xc0\x74\x85\x8e\x3c\x61\xa0\x1c\x20\xf8\x03\x1b\x40\x0d\x93\xe6\xe3\xae\x7f\x58\xfa\x5e\xf3\x5e\xa0\xc7\x1a\x8e\x17\xc1\xbc\x24\x6d\x98\xfc\xf9\x3b\x56\x3c\x47\xe1\x59\x74\xd7\xde\xfc\x96\x92\xb3\xe2\x46\x8d\xa1\x5e\x43\x42\x66\xab\xaa\x81\xc7\xbd\x4b\xcf\x6c\x11\xf4\xb8\xbf\xe0\x2e\x8b\x00\xbe\x2a\x2d\x0b\xd8\x1f\x0e\x53\xc4\xfe\xdb\x7b\xd2\x34\x58\x6c\x6f\x3a\x3f\xec\x0f\x87\x39\x7c\xf6\x7f\x71\x1c\xff\xe8\x27\xc9\x3f\xaf\x4a\x1f\x4b\x89\x8c\x8e\xb8\x80\x5f\xfc\xe4\x1f\x88\xfd\xfa\x18\xef\x6e\xcf\x64\x58\x39\x93\x42\x04\xd0\xa1\x56\x35\x39\x2e\x71\xe0\xc6\xd8\x02\xb0\x92\x43\x2b\xa3\x46\x49\x49\x7e\xbc\xec\x40\xd1\xbf\x01\x00\x00\xff\xff\x87\x9d\x34\x36\x43\x08\x00\x00"

func vocFcn16sYmlBytes() ([]byte, error) {
	return bindataRead(
		_vocFcn16sYml,
		"voc-fcn16s.yml",
	)
}

func vocFcn16sYml() (*asset, error) {
	bytes, err := vocFcn16sYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voc-fcn16s.yml", size: 2115, mode: os.FileMode(420), modTime: time.Unix(1502315579, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vocFcn32sYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x5b\xaf\xdb\x36\x0c\x7e\xf7\xaf\x20\x90\x97\x0d\x38\xb1\x63\x27\x27\x17\x3f\x0c\x28\x32\x14\x18\x56\xa4\x45\x77\x7b\x18\x0a\x83\x96\xe8\x58\xab\x2d\x09\x12\x9d\x34\xff\x7e\x90\xec\x5c\xce\x7a\xba\xe6\x21\x90\xc5\x8f\xd7\x8f\xa4\x34\xf6\x54\xc2\xdb\xfd\x61\xbe\x2c\x3c\x7c\x78\xf3\xdb\xfe\xcd\x3b\x98\x41\xb8\x06\xd3\xc0\xc5\x0c\x0e\x7a\x23\xa9\x4b\x1a\x87\x3d\x9d\x8d\xfb\x5c\x26\x00\xa3\xda\x1e\x9b\x86\x60\x06\x37\x11\x34\xc6\x01\xb7\x34\xa9\x00\x9c\xc8\x79\x65\x74\x09\x79\xba\x78\x01\x9c\x04\x20\x8c\x66\x87\x4a\x73\xf2\x1f\xe8\x15\xa0\x74\x63\x5c\x8f\x3c\x9e\xc1\x53\x8f\x9a\x95\xb8\xc9\x47\x69\x12\xec\xa0\xd2\xe4\x4a\x98\xc1\xed\xc3\xc3\xe0\x49\x02\x1b\xb0\xe4\x02\x72\x0c\x0c\xac\x23\xa9\x44\xb0\x99\xc0\xfd\x37\x83\x7e\xe8\x58\xd9\x8e\xc0\x76\xc8\x01\xef\x41\xa0\x86\x9a\xc0\x5b\x12\xaa\x51\x24\x13\x00\xec\xe5\x7a\x55\x46\xcd\xa3\x1d\x4a\x70\xa8\xac\x33\xff\x90\xe0\x4c\xa0\xeb\xbb\xb9\x08\x75\x29\x23\x6c\x2e\xec\x10\x91\xe2\xbb\xc8\x63\x44\x5a\x2b\xd6\xab\x8e\xca\xef\x2a\x4d\xc0\x49\xed\xff\x43\x79\xc4\x4a\xf2\xc2\x29\xcb\xb1\xd6\x3f\x25\x00\xbf\xbf\xff\xf9\x7d\xe2\xa8\x21\x47\x5a\x90\x0f\x05\xbc\x7f\xc5\xda\xa1\x0d\xa5\xcc\xe0\x4c\xb5\x57\x4c\xe1\x48\x2c\xd2\x14\x46\x5b\xb5\xd2\xc7\x17\xac\xcf\xa1\x65\xb6\xbe\xcc\x32\x74\x5f\xd4\x29\x35\xee\x98\x61\xed\xb3\x7c\xbd\x78\x4e\x17\xeb\x22\xcf\x6f\xa0\x32\xcb\xce\xe7\x73\x2a\x4e\xf3\xc6\x0c\x5a\x46\x9e\x23\xde\x58\xd2\x28\x04\x79\x9f\x05\x3a\x49\x73\x25\x4e\xd6\x55\xc5\x22\x7f\xce\x5a\xee\xbb\xec\x9d\xd1\xc7\xea\xed\xd0\x75\x97\x6a\x6f\xf4\xc9\x74\x43\x50\xc6\xae\x3a\x10\x87\x1e\xf3\x11\x5b\xed\xff\xfc\xf0\xb1\x8a\x29\xa4\x41\xed\x45\x78\x47\xc5\xed\x50\xa7\xc2\xf4\x99\x6f\xa9\x6b\xb1\x27\x97\x35\x42\xa7\x35\xb9\xcf\xd4\xd1\xe5\xa4\xfc\x35\x20\x76\x44\x59\x8f\x9e\xc9\x65\x27\x23\xe6\x8d\xd0\xcb\xc2\x27\x33\xe8\x94\x20\xed\xe3\xb8\xdc\x8b\x30\x5d\x96\xf0\xc7\xe1\xd7\xc3\xfb\xbf\x0e\xc9\x0c\x94\xb6\x03\xc7\x82\xde\x61\xe3\x5d\x20\x7b\x06\x8d\x72\x9e\x47\x14\xf0\xc5\xd2\x57\xc3\x34\x8f\xd7\x25\xa8\x1e\x8f\x94\x8c\x1d\xfb\xc0\xe6\x35\x80\x07\x3b\x11\xf4\x82\xf0\x00\x18\x5d\xdc\xad\x58\x0c\x63\xc9\xe4\x22\xf7\xd1\xf5\xfd\x6a\x1a\x10\xa9\x7a\xd2\xa1\x16\xbe\x84\xbf\xf3\x27\x58\x3e\xc1\xf3\x62\x11\xff\x3e\x4d\x90\x9e\x50\x07\x61\x51\xa4\xeb\xcd\x76\x57\x3c\x41\x9e\xaf\xd3\xf5\x7a\xbb\xd9\x3c\x41\xbe\x58\xa5\x8b\xc5\x7a\xb7\xfb\x94\x98\x81\xed\xc0\x63\xce\x21\x9c\xe8\x70\x8a\x7d\x94\x25\x30\x65\xda\x10\xf2\xe0\x28\x42\xf1\xb5\x5c\x47\xfc\x3d\xdc\xe4\x95\x74\x27\x4c\x87\x75\xac\xe2\x43\xb6\x53\x0d\x5f\xcb\x78\xf2\xec\xab\xc1\x75\xe5\x43\xbf\x78\x4e\xc7\xa6\x19\x3c\xb9\xa9\x31\x63\xff\xa0\x36\xfa\xd2\x9b\xc1\x67\xb8\x2d\x56\x35\x2e\x97\xcb\x1a\x77\x45\xb1\x5b\x22\x6d\x17\x52\x6e\xe5\x7a\xbd\x91\xcb\x5d\x9e\x67\x0e\xcf\x59\x5d\xc8\x5c\x16\x02\x25\x2e\x37\x84\xf9\x6a\x9b\x6f\xb1\xde\x88\x25\x15\xc5\x4e\xac\x76\x75\x5d\x14\x62\xf5\xbc\x7c\x8e\x2e\x1b\xd5\x51\x9e\xf2\x17\x4e\x62\x2b\x04\x96\xae\xfb\xc8\x4f\x1b\xed\xe8\xd0\xb6\x80\x5a\xc2\x99\xd4\xb1\x65\x0f\x8e\xbc\x19\x9c\xa0\x90\x4f\x94\x56\x16\xb9\xbd\xe7\xe2\xf0\xfc\x8d\x54\xbe\x3b\x0a\x5f\x4d\x41\x76\xc2\x2e\xb5\xce\xb0\x09\x41\xc2\x35\x86\x07\x8f\x65\x96\xc9\x2e\x8d\xdb\xe8\x35\x8b\xa3\x99\x79\x4b\x78\xba\xcc\x2d\x7a\x81\x13\xf8\xda\xfb\xca\x57\xe8\x44\xab\x4e\xa1\x2b\xb0\xf3\xe1\xd9\x51\x0d\x78\xe2\xa7\x40\xb2\x8e\x4c\xd7\xe8\x29\x10\x06\xca\x03\x42\x38\xb0\x01\xd4\x30\x69\x3e\xee\xfa\x87\xa5\x1f\x34\xef\x05\x7a\xac\xe1\x78\x11\xcd\x4b\xd2\x86\x29\x9c\xbf\x61\x25\x70\x14\x9f\x45\x7f\xed\xcd\xaf\x29\x39\x2b\x6e\xd5\x18\xea\x35\x24\x64\x76\xaa\x1e\x78\xdc\xbb\xf4\x85\x1d\x82\x1e\xf7\x17\xdc\x65\x09\xc0\x67\xa5\x65\x09\xfb\xc3\x61\x8a\x38\x7c\x07\x4f\x9a\x06\x87\xdd\x4d\xe7\x87\xfd\xe1\xf0\x04\x1f\xc3\x5f\x9a\xa6\x3f\x86\x49\x0a\xcf\xab\xd2\xc7\x4a\x22\xa3\x27\x2e\xe1\x97\x30\xf9\x07\xe2\xb0\x3e\xc6\xbb\xdb\x33\x19\x57\xce\xa4\x90\x00\xf4\xa8\x55\x43\x9e\x2b\x1c\xb8\x35\xae\x04\xac\xe5\xd0\xc9\xa4\x55\x52\x52\x18\x2f\x37\x50\xf2\x6f\x00\x00\x00\xff\xff\x5a\x4a\xe7\xde\x43\x08\x00\x00"

func vocFcn32sYmlBytes() ([]byte, error) {
	return bindataRead(
		_vocFcn32sYml,
		"voc-fcn32s.yml",
	)
}

func vocFcn32sYml() (*asset, error) {
	bytes, err := vocFcn32sYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voc-fcn32s.yml", size: 2115, mode: os.FileMode(420), modTime: time.Unix(1502685807, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC-AlexNet.yml": bvlcAlexnetYml,
	"BVLC-GoogLeNet.yml": bvlcGooglenetYml,
	"BVLC-Reference-CaffeNet.yml": bvlcReferenceCaffenetYml,
	"BVLC-Reference-RCNN-ILSVRC13.yml": bvlcReferenceRcnnIlsvrc13Yml,
	"SqueezeNet_v1.0.yml": squeezenet_v10Yml,
	"SqueezeNet_v1.1.yml": squeezenet_v11Yml,
	"VGG16.yml": vgg16Yml,
	"VGG19.yml": vgg19Yml,
	"voc-fcn16s.yml": vocFcn16sYml,
	"voc-fcn32s.yml": vocFcn32sYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC-AlexNet.yml": &bintree{bvlcAlexnetYml, map[string]*bintree{}},
	"BVLC-GoogLeNet.yml": &bintree{bvlcGooglenetYml, map[string]*bintree{}},
	"BVLC-Reference-CaffeNet.yml": &bintree{bvlcReferenceCaffenetYml, map[string]*bintree{}},
	"BVLC-Reference-RCNN-ILSVRC13.yml": &bintree{bvlcReferenceRcnnIlsvrc13Yml, map[string]*bintree{}},
	"SqueezeNet_v1.0.yml": &bintree{squeezenet_v10Yml, map[string]*bintree{}},
	"SqueezeNet_v1.1.yml": &bintree{squeezenet_v11Yml, map[string]*bintree{}},
	"VGG16.yml": &bintree{vgg16Yml, map[string]*bintree{}},
	"VGG19.yml": &bintree{vgg19Yml, map[string]*bintree{}},
	"voc-fcn16s.yml": &bintree{vocFcn16sYml, map[string]*bintree{}},
	"voc-fcn32s.yml": &bintree{vocFcn32sYml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

