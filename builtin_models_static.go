// Code generated by go-bindata.
// sources:
// builtin_models/BVLC-AlexNet.yml
// builtin_models/BVLC-GoogLeNet.yml
// builtin_models/BVLC-Reference-CaffeNet.yml
// builtin_models/BVLC-Reference-RCNN-ILSVRC13.yml
// builtin_models/SqueezeNet_v1.0.yml
// builtin_models/SqueezeNet_v1.1.yml
// builtin_models/VGG16.yml
// builtin_models/VGG19.yml
// builtin_models/voc-fcn16s.yml
// builtin_models/voc-fcn32s.yml
// DO NOT EDIT!

package caffe

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlcAlexnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x5b\x6f\xeb\xb8\x11\x7e\xd7\xaf\x18\xc0\x58\x20\xa7\xb5\xae\xbe\xc4\x51\x81\xa2\x6d\xda\x87\x02\x6d\x1e\x7a\x7b\x29\x16\xc1\x88\x1c\x59\xdc\x50\xa4\x40\x8e\x9c\x78\x7f\x7d\x41\x4a\xb2\x9c\xdd\xb3\x3d\x9b\x07\x47\xe2\x7c\xdf\x70\x6e\xfc\x28\x83\x3d\xd5\xf0\xa7\xff\xfc\xed\x39\xfd\xa3\xa6\x8f\x17\x62\xd8\x40\x58\x04\xdb\xc2\xd5\x8e\x0e\x7a\x2b\x49\x27\xad\xc3\x9e\xde\xad\x7b\xab\x13\x80\x89\xf4\x8c\x6d\x4b\xb0\x81\x9b\x09\x5a\xeb\x80\x3b\x9a\x29\x00\x17\x72\x5e\x59\x53\x43\x99\x15\x9f\x80\xb3\x01\x84\x35\xec\x50\x19\x4e\x7e\x02\x5d\x00\xca\xb4\xd6\xf5\xc8\xd3\x33\x78\xea\xd1\xb0\x12\x37\xfb\x64\x4d\x82\x1f\x54\x86\x5c\x0d\x1b\xb8\xbd\x78\x18\x3d\x49\x60\x0b\x03\xb9\x80\x9c\x02\x83\xc1\x91\x54\x22\xf8\x4c\x60\xfd\xdb\x40\x3f\x6a\x56\x83\x26\x18\x34\x72\xc0\x7b\x10\x68\xa0\x21\xf0\x03\x09\xd5\x2a\x92\x09\x00\xf6\xf2\xb8\xaf\x23\xf3\x3c\x8c\x35\x38\x54\x83\xb3\x3f\x90\xe0\x5c\xa0\xeb\x75\x2a\x42\x5d\xea\x08\x4b\xc5\x30\x46\xa4\xf8\x26\xf2\x1c\x91\xc3\x20\x8e\x7b\x4d\xf5\x37\x49\x33\x70\xa6\xfd\xff\x50\xee\xb1\x92\xbc\x70\x6a\xe0\x58\xeb\xdf\x27\x00\xff\xea\x94\x9f\xeb\xa2\x3c\x20\x38\x1a\xb4\x12\x53\xc5\x6d\xbb\xb6\x13\x26\x66\x43\x32\x34\x22\x2c\x2f\xf3\x32\x8c\xcd\xc2\xc8\x12\x80\x3f\xab\xb6\x25\x47\x46\x90\xaf\xc1\x58\x86\xd8\x61\x65\xce\xf0\xae\xb8\x8b\x4c\x47\x5a\x9d\x3b\x0e\x6b\x12\x19\x53\x1c\xcf\x3d\x19\x8e\x2e\x7e\x97\x00\x28\xa3\x58\xa1\x56\x3f\x06\x84\xb1\x26\xfd\x91\x9c\x85\x46\xa1\x27\x1f\xda\x59\x64\x25\x28\xe3\x99\x50\x86\x18\x4b\x78\x68\xed\x68\x24\x18\x12\xe4\x3d\xba\xeb\x34\x89\xf3\xbe\x5b\x40\xbf\xba\x9c\x32\x63\x0b\x25\x9c\xf1\x42\xd0\x6a\x64\xd0\xd6\xfb\x2f\x59\xac\x06\x41\x33\x1a\xa9\x49\xae\x45\x09\x21\x2b\x26\x37\x51\x77\xc7\x62\x5b\x14\x05\x78\x83\x83\xef\x2c\x67\x13\x89\x3c\xc3\x05\xb5\x92\x38\x0f\xd6\x3c\x73\x68\x04\x81\x1c\x5d\x48\x65\xad\x44\x88\x68\xf5\x78\x38\x45\x8f\xb1\x3e\xab\x0f\x40\x21\x46\x87\xe2\x9a\x00\x1c\x1e\xb3\xea\x70\xfa\x0e\xd0\xc8\x18\x2c\x94\xd9\x69\xf7\xb4\x3f\x65\xf7\xfd\xb3\x4d\x98\xfb\xd0\x44\xb6\x43\x5a\xde\xf8\x81\x5d\x4e\x5c\x4c\x20\x1a\x0f\xab\xf1\x54\x64\xd5\x77\x60\xa7\x9e\xde\xed\xee\x89\xb7\x30\xfa\x10\xee\x0f\xa3\xe7\x68\x16\x64\x98\x1c\x08\x67\x87\x50\xad\x87\x7f\x47\x73\xb0\xe0\x85\x1c\x9e\xa3\x6a\x94\x45\x04\xf8\x2d\x3c\xec\xe1\xb7\x50\xce\xac\x2f\xf0\x1b\xa8\xa0\x57\xce\x59\xb7\x05\xdf\xd9\x51\xcb\x39\xe4\x70\xaa\xa0\x51\x0c\x9d\x3a\x77\xe4\x6e\xb1\x65\x5f\x3e\x0f\x68\x28\x5b\xac\x21\x49\x68\xae\xf0\x97\x0b\x1a\xf8\x67\x47\xba\xc3\x9e\x1c\xfc\xc1\x2f\x8f\x89\xa3\x75\x04\x37\xb0\xbe\x45\x2d\xc0\x21\x48\x43\x0e\xef\xd4\x78\xc5\x14\x1e\x89\x45\x96\x2d\x13\xbe\xa4\xb4\xa8\x58\x0a\x1d\xf3\xe0\xeb\x3c\x3f\x2b\xee\xc6\x26\x13\xb6\xcf\x83\x62\xe6\xf1\x78\xe5\xec\x88\xf2\x1e\x3d\x93\xcb\x23\xc7\xe7\xcd\x45\x8b\x57\xd4\xf4\x61\x88\x7f\x85\x87\x77\xf5\xa6\xf2\xbf\x47\x6a\xba\xe4\x9e\x5a\x93\xfe\xb5\xc7\x33\xbd\x10\xa7\x55\x51\x56\xe9\x05\xd7\x68\xea\x3c\x9f\xf2\xc8\x8c\x1a\x7c\x26\xc4\xf4\x9a\xef\x4f\xd5\x3e\x55\x81\x66\x88\x53\xa1\xd1\x7b\xd5\xce\x87\x33\x0d\xf3\x95\x4a\xa2\x21\x15\xd6\x5c\xac\x1e\xc3\x2a\xea\xd4\xd0\xe8\xe2\x3f\x0e\xe2\xec\xb3\x41\xb6\xc9\x06\xb4\x12\x64\x3c\x7d\x12\x81\x64\x5e\xac\x61\x34\x8e\x3c\x3b\x25\x98\x64\xb2\x01\x65\x86\x91\x63\x79\x57\xec\xb4\x16\xa4\x6c\x03\xad\x72\x9e\x27\x14\xf0\x75\xa0\x9f\x5d\x15\x69\x5c\xae\x21\xc6\x9e\x4c\x7a\x7c\xa7\x55\x4b\x14\x77\x7e\x22\xe8\x93\x9c\xc5\x73\x1a\xb7\x58\xbd\x0c\x18\x2e\x1d\x26\x17\x27\x21\x6e\xbd\x2e\xcd\xf2\x2f\x55\x4f\x26\x5c\x27\xbe\x86\xff\x96\x5b\xd8\x6d\xa1\xaa\x1e\xe3\xcf\xf7\x33\xa4\x27\x34\xc1\x58\xed\xb6\x50\x96\x8f\x5b\x28\x8b\xfd\xf7\x89\x1d\x79\x18\x79\xca\x30\x6c\x1e\xdd\xcf\x91\x4e\xb6\x70\xdc\x62\x5e\x2d\x21\x8f\x8e\x22\x14\xbf\x96\xd9\x84\x5f\x83\x4b\xbe\x92\xdc\x8c\xd1\xd8\xc4\x9a\xdd\xe5\x36\x57\xec\x6b\xf9\xcd\x3b\xfb\xd7\xd1\xe9\x7a\x19\x9e\x20\xbb\x99\xec\xb5\xc8\x7a\x9d\xf7\x61\x4c\x97\xd1\x5d\x86\x27\xf7\x57\xe3\x89\x33\xfe\xe0\xcf\x6e\x44\x47\xe2\xcd\x8f\x7d\x0d\x7b\x59\xed\xf6\xcd\xe1\xb4\xdb\xa1\xc0\xfd\xfe\xa9\x3a\x15\xc7\x03\x96\xa7\x42\x36\xbb\xa2\x3c\x62\x12\x5d\x86\xba\x2f\xf7\xe7\x72\x90\xcf\x0e\x87\x2e\x0a\xd2\x3b\x85\x9b\xc0\x83\x23\x6f\x47\x27\x28\xc4\x1c\xad\xaf\x03\x72\x57\xdf\x0e\x8e\xc3\xf7\x6c\x3a\x3c\xa3\x27\x17\xae\x78\x32\xfc\xd3\x73\xf4\xcb\x87\x30\x97\x34\x68\x7b\xcd\x06\x67\xd9\x4e\x29\xcd\x3b\xdf\xed\x13\xea\xa2\xb3\xe8\x2a\x6b\xc8\xbd\x91\xa6\xeb\x45\x85\xc1\xc8\xac\x3b\x7f\xf2\x37\xa1\x96\xe1\x55\xfe\x15\x9d\xe8\xd4\x25\x34\x1a\xb5\x0f\x5f\x45\xaa\x9d\x14\x94\x3b\x9a\xa4\xb5\x41\x4f\xa1\x07\xd3\x35\x1b\x1e\xd8\x02\x1a\x98\x99\xf7\x9f\x22\x77\xdf\x24\x81\xb9\xd6\xe3\xbe\x64\xd3\x42\x74\x2f\xc9\x58\xa6\xf0\xfc\x0b\x5e\x5a\xa5\x29\x7e\xb5\xf9\x65\xdc\x7e\xde\x81\xa0\x0e\xf3\xcd\xbe\x86\x34\x6d\xbd\xb6\xbc\x95\xcd\xa1\x3a\xa0\x40\x3c\xc9\x9d\x6c\x8a\xf6\xf4\x28\x0e\x87\xc7\xc7\xa7\xa2\x6c\x0f\x3b\xa2\xbb\xba\xae\xa4\xea\x89\x9a\xfd\xd3\xa1\x29\xcb\x63\xb9\x3b\x55\x07\x51\x3e\x15\xc5\xee\x54\xb5\x87\xea\x74\x7c\x3a\xee\x12\x64\x76\xaa\x19\x79\x92\x6b\xfa\x60\x87\x30\xab\x11\xac\xb6\x04\xe0\x4d\x19\x59\xc3\xf3\xcb\xcb\x5c\x99\xf0\x1e\x32\x9a\x14\xec\xc6\x79\x78\x7e\x79\xd9\xc2\x3f\xc2\x4f\x96\xc5\x4b\x64\xb9\x79\x5f\xc3\xe0\x7b\xe2\x1a\x16\x6d\x0d\x3a\x33\xad\xdd\xbe\x16\xef\x3f\x1e\x12\x80\x1e\x8d\x6a\xc9\xf3\x2b\x8e\xdc\x59\x57\x03\x36\x72\xd4\x32\xf9\x5f\x00\x00\x00\xff\xff\x86\xd9\xe7\x00\x3b\x0b\x00\x00"

func bvlcAlexnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcAlexnetYml,
		"BVLC-AlexNet.yml",
	)
}

func bvlcAlexnetYml() (*asset, error) {
	bytes, err := bvlcAlexnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-AlexNet.yml", size: 2875, mode: os.FileMode(420), modTime: time.Unix(1506055317, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcGooglenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x5d\x6f\xeb\xb8\x11\x7d\xd7\xaf\x18\xdc\xe0\x02\xb9\xad\x2d\x4b\xb6\xe2\x28\x5a\xa0\x68\x37\x8b\x2e\x8a\x2e\xf2\xd0\xed\xc7\x43\xb1\x08\x46\xe4\x48\xe2\x86\x22\x55\x72\x64\xc7\xf7\xd7\x17\xa4\x24\xdb\xc9\x66\x77\xfd\x60\x88\xe4\x99\x33\x1f\x3c\x1c\xd2\x60\x4f\x15\x7c\xfb\xef\x1f\x1e\xd7\xdf\x5b\xdb\xfe\x40\x4f\xc4\x70\x03\x61\x1a\x6c\x03\x27\x3b\x3a\xe8\xad\x24\x9d\x34\x0e\x7b\x3a\x5a\xf7\x52\x25\x00\x93\xd9\x23\x36\x0d\xc1\x0d\x9c\x97\xa0\xb1\x0e\xb8\xa3\xd9\x04\xe0\x40\xce\x2b\x6b\x2a\xc8\xd3\xec\x0d\x70\x5e\x00\x61\x0d\x3b\x54\x86\x93\x77\xd0\x05\xa0\x4c\x63\x5d\x8f\x3c\x7d\x83\xa7\x1e\x0d\x2b\x71\x5e\x9f\x56\x93\xc0\x83\xca\x90\xab\xe0\x06\xce\x03\x0f\xa3\x27\x09\x6c\x61\x20\x17\x90\x53\x60\x30\x38\x92\x4a\x04\xce\x04\x2e\xbf\x1b\xe8\x47\xcd\x6a\xd0\x04\x83\x46\x0e\x78\x0f\x02\x0d\xd4\x04\x7e\x20\xa1\x1a\x45\x32\x01\xc0\x5e\xee\x8b\x2a\x5a\xb6\xc3\x58\x81\x43\x35\x38\xfb\x33\x09\xde\x08\x74\xbd\x5e\x8b\x50\x97\x2a\xc2\xd6\x62\x18\x23\x52\xfc\x2e\xb2\x8d\xc8\x61\x10\xfb\x42\x53\xf5\xbb\x46\x33\x70\x36\xfb\xed\x50\xae\xb1\x92\xbc\x70\x6a\xe0\x58\xeb\x3f\x25\x00\xff\xec\x94\x9f\xeb\xa2\x3c\x20\x38\x1a\xb4\x12\x53\xc5\x6d\x73\xd9\x4e\x98\x2c\x6b\x92\x61\x23\xc2\x74\x50\x8c\x8e\x8a\x19\xc6\x7a\xb1\x49\xe1\x3f\x04\x47\x3b\x6a\x09\x5a\xbd\x50\x28\x3e\x77\x68\x5e\xe0\xb1\x73\xca\xb3\x42\x03\x3f\x7e\xa5\x96\xe4\x29\xaa\x05\xb5\x86\x10\x40\x47\x7a\x58\x78\xdf\x45\x70\x71\x13\xe3\x48\x13\x80\xef\x54\xd3\x90\x23\x23\xc8\x47\x39\x5a\x86\x28\x23\x65\x5a\x38\x2a\xee\x66\x1a\xad\xda\x8e\xc3\x9c\x44\xc6\x35\x8e\x6d\x4f\x86\x23\xef\x37\xbf\x6a\xe5\x05\x6a\x82\x10\x59\xd8\x73\x5e\xbb\x80\xff\x98\x60\xf4\xe4\xe1\xd3\x2b\x1e\x14\xb9\x4f\x21\x51\x65\x14\x2b\xd4\xea\x2b\x45\xaa\x23\x05\xff\x1e\x94\xf1\x4c\x28\x43\x2e\x9f\x5a\x1c\xbd\x57\x68\x3e\x05\x82\xff\x8d\x4a\xbc\x3c\x7b\xab\x0f\xe4\xd2\xc1\x59\xb6\xfc\xca\x13\x2d\x82\x9c\x73\x64\xd0\x84\x2e\x06\xe9\x90\x09\x24\x09\x3c\xc1\x60\xb5\x12\xa7\x58\xda\xe8\xcb\x3a\xd5\x2a\x83\x1a\xde\xb1\xad\x02\x84\x43\x99\xed\x31\xb0\xf6\xa3\xe8\xa0\x41\xcf\xe4\x2e\xc9\xdf\xee\x33\xa0\xc1\x8a\xce\xc3\xc1\xc3\xf6\x6e\x19\x7d\xf9\x26\xea\x83\xa0\x1e\x8d\xd4\x24\x2f\x32\x09\x2e\x15\x93\x9b\x36\x69\xbb\x2a\xb2\x6c\x95\x65\x19\x78\x83\x83\xef\x2c\x5f\x51\x7e\x81\xd1\x07\x27\x1f\x26\xbb\xe8\xef\xad\x03\x5b\x87\xf3\x1b\xc2\x65\x3b\xac\x73\x40\x21\x46\x87\xe2\x04\xfb\x32\xbd\xff\x0c\xb7\xbb\x3c\xdd\x7d\x06\x72\xce\xba\x2f\x80\x46\xce\xc0\xbb\x0b\xb0\x2c\xd3\x87\xcf\x70\x9b\xe7\x69\x7e\x06\xda\xa9\x52\x07\xd4\x4a\x4e\x71\x7b\xe2\xd5\x1c\xdd\xcf\xa3\xe7\xb8\x2c\xc8\x84\xda\x08\x67\x87\xa0\xb4\xdb\x7f\xc5\xe5\xb0\x82\x07\x72\xd8\xc6\xbe\x98\x67\x11\xe0\x57\x70\x5b\xc0\x1f\x21\x9f\xad\xbe\xc0\x1f\x60\x0b\xbd\x0a\xfe\x56\xe0\xbb\x78\x0a\xa6\x64\x00\xa1\x56\x0c\x9d\x6a\x3b\x72\xe7\x38\xd3\x2f\xa1\x00\xaa\x57\xa6\xf5\xf1\x38\xd4\x07\x2d\x9e\xdb\x28\x78\x43\x3c\xa9\x52\x8c\xdf\x3d\x3d\xcd\x61\xd6\xc8\xa2\x7b\xf6\xea\x2b\x55\xf9\xb6\x0c\x29\x21\xfc\xbd\xc8\x44\x38\x05\x7f\x99\xe3\xfb\xab\x75\x47\x74\x12\x06\xf4\xbe\x82\xbb\xfd\x36\x2d\x8b\x1c\x7a\x9f\x5e\x61\xbe\x45\xf1\x72\x05\xca\xf3\xed\x2e\x2d\x8b\x77\xa0\x99\x68\xbd\x80\x2b\xc8\xf7\x65\x99\x96\x33\xec\xaa\x71\x1c\xd1\x4f\x6a\x22\x09\xf5\x09\x7e\x24\xd7\x2a\x0b\xdf\x8f\x28\xd1\x39\xec\x11\xfe\xec\xdb\x30\x48\x1c\x9d\xcf\x2d\xdc\xc0\x65\x14\x7b\x34\x0e\xa1\x65\x6f\xe0\x48\xb5\x57\x4c\xe1\x93\x58\xa4\xe9\xd2\x79\x96\x8d\x58\x6e\x97\x35\x74\xcc\x83\xaf\x36\x9b\x56\x71\x37\xd6\xa9\xb0\xfd\x26\xdc\x65\x9b\xd8\xf6\x36\xec\x88\x36\x7d\xd4\xfa\x26\xda\xf8\xcd\xdb\xfa\xbe\xe1\x40\xf7\xaa\x0e\xa9\x75\xed\x06\x6b\xbf\xc9\x8b\xec\x21\x2d\xca\x62\x9b\xdc\x80\x56\x82\x8c\xa7\x37\xdd\x30\x99\x27\x2b\x18\x8d\x23\xcf\x4e\x09\x26\x99\xdc\x80\x32\xc3\xc8\x7e\x6a\x7b\x0b\x76\x9a\x0b\x7b\x74\x03\x8d\x72\x9e\x27\x14\xf0\x69\xa0\x5f\xdc\x99\xeb\x38\x5d\x81\xea\xb1\xa5\x64\xba\x98\xae\x9a\xf6\x12\xc5\x15\x4f\x04\xbd\xe9\xeb\xf1\x78\x46\x17\x17\x96\x01\xc3\xed\xcb\xe4\x62\xe9\xa3\xeb\xcb\xd4\x7c\x0f\x4a\xd5\x93\x09\xf7\xaa\xaf\xe0\xbf\xf9\x0a\x76\x2b\xd8\x6e\x8b\xf8\xf7\xd3\x0c\xe9\x09\x4d\x58\xdc\xee\x56\x90\xe7\xf7\x2b\xc8\xb3\xe2\xa7\xc4\x8e\x3c\x8c\x3c\x65\x18\x9c\x47\xfa\x39\xd2\x69\x2d\x81\x39\xaf\x86\x90\x47\x47\x11\x8a\x1f\x65\x36\xe1\x2f\xc1\x25\x1f\x24\x37\x63\x34\xd6\xb1\x66\x57\xb9\xcd\x15\xfb\x28\xbf\xd9\xb3\x7f\x1e\x9d\xae\xe2\xbe\x57\x9b\x4d\xe8\xec\xa9\xec\xb5\x48\x7b\xbd\xe9\x5f\x0d\xf1\xa2\x95\x58\xba\x30\xf6\x27\xe3\x89\xd3\xa9\x5d\x5d\xd1\x88\x8e\xc4\x8b\x1f\xfb\x0a\x0a\xb9\xdd\x15\xf5\x5d\xb9\xdb\xa1\xc0\xa2\x78\xd8\x96\xd9\xfe\x0e\xf3\x32\x93\xf5\x2e\xcb\xf7\x98\x44\xca\x50\xf7\xe5\x21\xb1\x9c\x9c\xd6\xe1\xd0\xc5\x1e\xb6\xdc\x16\x8e\xbc\x1d\x9d\xa0\x10\x73\x5c\x7d\x1e\x90\xbb\xea\xac\x53\x87\xc7\x74\xd2\xfb\xe8\xc9\x85\xb7\x0e\x19\x7e\x2f\xfd\xdf\x52\xfd\x46\xd2\xa0\xed\xe9\xba\x07\xcf\xbe\xaf\x3c\x85\xca\xe8\x34\x92\xa5\x35\xb9\x17\xd2\x74\x3a\xa8\x20\x8d\x78\x44\xde\x32\x4e\xb8\x45\xc0\xca\x3f\xa3\x13\x9d\x3a\x84\xcd\x46\xed\xc3\x13\x51\x35\x53\xb3\xe5\x8e\xa6\x2e\x5c\xa3\xa7\xb0\x0f\xd3\x9b\x23\x7c\xb0\x05\x34\x30\x5b\x5e\xbf\xcb\xae\x1e\x68\xc1\xf2\x52\x93\xeb\xb2\x4d\x13\x91\x5e\x92\xb1\x1c\x6f\xe0\x5f\x61\x69\x94\xa6\xf8\x84\xf5\x8b\xe4\x7e\xb9\x0b\xa1\xf3\xce\xcf\x91\x4b\x48\x93\xeb\xab\x6d\xc7\xfb\x6d\x99\xdf\x17\xa5\x7c\xc8\xeb\x87\x7d\x56\x63\xb9\x97\xfb\x32\xcf\xf2\x4c\x16\x88\xdb\xab\xca\x5e\x8c\xa4\xc8\xee\xf6\xf7\x79\x93\x15\xc5\xee\x3e\x2b\x25\xe6\x75\x26\x33\xa4\x8c\x32\xf1\x20\x50\x26\xc8\xec\x54\x3d\xf2\xd4\x23\xe9\x95\x1d\x82\x21\x8e\xef\xe6\xcb\x5a\x02\xf0\xa2\x8c\xac\xe0\xf1\xe9\x69\xae\x4c\x18\x87\x8c\x0c\x8d\x0e\xf5\xd9\xe6\xf6\xf1\xe9\x69\x05\xff\x08\x7f\x69\x1a\x6f\x9c\xe5\xe2\x7f\x0e\xe2\xf7\xc4\x15\xfc\x2d\x68\x7d\x7a\xfb\xcf\x73\xe7\xa7\x73\xec\x4f\xb3\x41\x02\xd0\xa3\x51\x0d\x79\x7e\xc6\x91\x3b\xeb\x2a\xc0\x5a\x8e\x5a\x26\xff\x0f\x00\x00\xff\xff\xa3\x02\x8e\x23\x4a\x0c\x00\x00"

func bvlcGooglenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcGooglenetYml,
		"BVLC-GoogLeNet.yml",
	)
}

func bvlcGooglenetYml() (*asset, error) {
	bytes, err := bvlcGooglenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-GoogLeNet.yml", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1506055521, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceCaffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4b\x6f\xe3\x38\x12\xbe\xeb\x57\x14\x60\x2c\x90\xde\xb5\x25\xcb\xef\x68\x81\xc5\xee\xa6\x2f\xbd\x58\xe4\xd0\xe8\x99\xcb\xa0\x11\x50\x64\xc9\x62\x87\x22\x09\xb2\x98\xc4\xf3\xeb\x07\x24\x65\xcb\xee\xc7\xf4\xe4\xe0\x88\xac\xef\x2b\xd6\x9b\xd4\x6c\xc0\x06\xfe\xfb\xeb\xff\x1f\x16\x1f\xb1\x43\x87\x9a\xe3\xe2\x81\x75\x1d\x3e\x22\xc1\x0c\xa2\x1c\x4c\x07\x27\x13\x1c\x0c\x46\xa0\x2a\x3a\xc7\x06\x7c\x35\xee\xb9\x29\x00\x32\x3f\x11\x60\x06\x17\x11\x74\xc6\x01\xf5\x38\x52\x00\x5e\xd0\x79\x69\x74\x03\x75\xb9\xbc\x01\x8e\x02\xe0\x46\x93\x63\x52\x53\xf1\x15\xf4\x0c\x90\xba\x33\x6e\x60\x94\xbf\xc1\xe3\xc0\x34\x49\x7e\x91\x67\x69\x11\xf5\x30\xa9\xd1\x35\x30\x83\xcb\xc2\x43\xf0\x28\x80\x0c\x58\x74\x11\x99\x0d\x03\xeb\x50\x48\x1e\x75\x16\x30\xfd\xcd\x60\x08\x8a\xa4\x55\x08\x56\x31\x8a\x78\x0f\x9c\x69\x68\x11\xbc\x45\x2e\x3b\x89\xa2\x00\x60\x83\xd8\x6d\x9a\xc4\x3c\xda\xd0\x80\x63\xd2\x3a\xf3\x05\x39\x55\x9c\xb9\x41\x2d\x78\x8c\x4b\x93\x60\x0b\x6e\x43\x42\xf2\x9f\x22\x8f\x09\x69\x2d\xdf\x6d\x14\x36\x3f\x25\x8d\xc0\x91\xf6\xe7\xa6\x5c\x63\x05\x7a\xee\xa4\xa5\x14\xeb\x7f\x15\x00\x9f\x7a\xe9\xc7\xb8\x48\x9f\xb2\xe7\xd0\x07\x45\x31\xff\x9d\x51\xca\xbc\x4a\x7d\x4c\xfb\x39\xdf\x1f\x06\x76\x4c\x65\x92\x39\x29\x7d\x11\x21\xb5\x27\x17\x52\x54\x7d\x09\x1f\x28\x6a\x63\xe0\xd0\x2a\xc9\x73\xfe\x4c\x37\x15\x07\x64\x3b\x5a\x14\x31\xad\x71\xfb\x3f\x0a\xdf\xa2\x5a\x1b\xda\x0b\xe3\x55\x52\x0f\xde\x0c\x08\x42\x76\x63\x9d\xfa\xb2\x00\x78\x3f\x2d\x53\x3d\x1a\x9a\x0c\x49\xa4\xec\x87\x92\xc7\x9e\xe2\x9e\x60\xc4\x16\x2c\x1c\x07\xd4\x94\x54\xff\xb3\x80\x84\x31\x4e\xa0\x8b\x96\x59\x63\x54\x44\x32\x2d\x40\xc7\xa2\x52\xf2\xf7\x6c\x84\x62\xa7\x58\x4a\xd2\x83\x7f\x95\xc4\x7b\x14\x70\x27\x35\x9c\xdb\x65\x7e\xa1\x4a\x0f\xc2\x68\x84\x16\x3b\xe3\xf0\x56\xcb\xbb\xf2\x9b\x50\x7b\xcd\xac\xef\x4d\x0a\xb4\x24\x74\xf9\xb4\x75\xbd\x9c\x2f\x97\xcb\x12\x3e\xf5\x51\x93\x27\x78\x61\x4a\x8a\x2c\x1c\xcb\x98\x69\x8e\x20\x82\x4b\x89\xb9\xb8\xcd\xfc\x8d\x9a\x75\x54\x93\x83\x71\xa5\x81\x71\x1e\x1c\xe3\x27\xd8\xee\xcb\x4d\xbd\xfa\x5b\xf2\x57\x19\xef\xa1\x2e\x0f\xab\xf5\xea\xf0\x95\x9d\xa6\x8d\xad\x14\x33\x49\xc6\x2e\xea\x5b\x7e\x66\x67\xd1\x76\x12\x1d\x96\x51\x64\x72\x5a\xaf\xce\xf6\x31\x58\xc1\x47\x63\xbf\x04\x4f\x49\xcc\x51\x13\x3a\xe0\xce\xd8\x78\xf2\xdd\x2f\xfe\x5c\x6d\xec\x05\x1d\x3b\xa6\x31\x54\x2f\x13\xc0\xcf\xe1\x6e\x03\xff\x80\x7a\x64\xbd\x83\xbf\xc3\x0a\x06\xe9\x9c\x71\x73\xf0\xbd\x09\x4a\x8c\x06\x03\x83\x56\x12\xf4\xf2\xd8\xa3\x9b\x2c\xf3\x24\x95\x2a\xdf\xdd\xba\x18\x03\x97\xa2\x88\x02\xda\x13\xfc\x0f\xbb\x0e\xde\x1b\xcd\xfa\x80\xf0\xef\x2f\xd8\x75\x22\x2f\x0a\x87\x97\x9a\x83\x19\x4c\xab\x34\x60\x98\x8d\x45\x52\xc1\x2b\xb6\x5e\x12\xc6\x4f\x24\x5e\x96\xe7\x42\x3f\xbb\x75\x1e\x8d\x0b\xe8\x89\xac\x6f\xaa\xea\x28\xa9\x0f\x6d\xc9\xcd\x50\xc5\x89\x5c\xa5\x9e\xad\xc8\x21\x56\x03\xf3\x84\xae\x4a\x1c\x5f\xb5\x2f\x8a\x3f\x5d\x8e\x7d\x4a\x38\x8d\x74\x51\xd6\x54\x55\x36\xa3\xd4\xd2\xfa\x92\xf3\xbc\xac\x36\x87\xd5\x66\x21\x63\xdb\x6a\xa4\x05\x57\xcc\x7b\xd9\x8d\x2d\xb6\x88\x05\xb2\x10\x88\x76\xc1\x8d\x7e\x31\x2a\xc4\x5d\xa6\x16\x1a\x83\x4b\xff\x28\x0e\x6c\x5f\x5a\xd1\x15\x33\x50\x92\xa3\xf6\x78\xd3\xca\xc5\xb8\xd9\x40\xd0\x0e\x3d\x39\xc9\x09\x45\x31\x03\xa9\x6d\xa0\x14\x9d\x09\x9b\xf7\x62\xcf\xce\xa0\x93\xce\x53\x46\x01\x9d\x2c\x7e\x73\x7d\x2c\xd2\x76\x03\xc9\xf6\x22\xcf\xe8\xab\xf9\x75\xb6\xe2\x4a\x4f\x02\xdd\x8c\xb8\x08\xc8\x47\x4c\x5a\x2c\x8b\x17\x11\xa1\x4b\x89\x4c\x47\x4f\x5b\xe3\x95\x20\xe4\x80\x3a\x5e\x31\xbe\x81\xdf\xea\x39\xac\xe7\xb0\x5a\xed\xd3\xcf\xe7\x11\x32\x20\xd3\x51\xb8\x5a\xcf\xa1\xae\xf7\x73\xa8\x97\x9b\xcf\x85\x09\x64\x03\x65\x0f\xe3\xe1\x49\xfd\x68\x69\x96\xc5\xd1\x93\xfc\xea\x90\x51\x70\x98\xa0\xec\x7b\x9e\x65\xfc\x64\x5c\xf1\x1d\xe7\x46\x8c\x62\x6d\x8a\xd9\x95\x6f\x63\xc4\xbe\xe7\xdf\x78\xb2\x7f\x0a\x4e\x35\xe7\xe2\x89\x43\xb2\x14\x83\xe2\xe5\xa0\xaa\xe1\x4d\x23\x9d\x2b\xef\x5c\x3c\x95\x3f\x69\x8f\x54\xd2\x1b\xdd\xaa\xe1\x3d\xf2\x67\x1f\x86\x06\x36\x62\xb5\xde\xb4\xdb\xc3\x7a\xcd\x38\xdb\x6c\xee\x57\x87\xe5\x6e\xcb\xea\xc3\x52\xb4\xeb\x65\xbd\x63\x45\x52\x19\xe3\x7e\xbe\x53\xcf\x7d\x78\x74\xcc\xf6\x69\xa2\xbc\x62\x9c\xdb\x3e\x5e\x44\x26\x38\x8e\xd1\xe6\x24\x7d\xb2\x8c\xfa\xe6\xd2\x39\x8e\xbd\x96\xb9\x7b\x82\x47\x17\xaf\x7d\xd4\xf4\x75\x23\xfd\xa5\x1e\xaa\x04\x5a\x65\x4e\xa5\x75\x86\x4c\xf6\x6e\x34\xe2\xea\xc8\x18\x22\x55\x26\x4a\xd9\xa2\x7b\x46\x85\xa7\x17\x19\x6b\xa4\x34\xee\xf8\x23\xd5\x99\x90\x4b\xba\x00\x90\xfe\x89\x39\xde\xcb\x97\x98\x7f\xa6\x7c\x7c\x40\xc9\x2e\xcf\x46\xea\x31\x0f\xcd\x96\x79\x8c\xa9\xc9\x77\x68\xfc\x20\x03\x4c\xc3\xc8\xbc\x7e\xb5\x5c\x3d\x5f\x22\x73\x0a\xd3\x75\x24\xf3\x46\x52\x2f\x50\x1b\xc2\xf8\xfd\x03\x2d\x9d\x54\x98\x1e\x78\xfe\x5c\x85\xdf\x26\x26\x0e\x8d\xf1\xda\x9e\x4c\xca\x47\x4f\x95\x70\xbf\xdd\x2e\xb7\xb5\xa8\x6b\xdc\x6c\x5a\xb1\xba\x17\xe2\xb0\x67\xab\xad\x10\xfb\xdd\x0e\xf9\x6a\x7d\x15\xe3\x89\xc4\xba\xdd\xfe\xd0\x2d\x5b\xb1\xe6\x42\xac\x36\xeb\x3d\xae\xb7\xbb\xfd\xbd\x38\x1c\x76\xbb\x6d\xbd\x5f\x16\x8c\xc8\xc9\x36\x50\x1e\xc2\xf8\x46\x8e\xc1\x38\xa4\x60\x92\x15\x00\xcf\x52\x8b\x06\x1e\x1e\x1f\xc7\xc8\xc4\x75\xf4\x28\x0f\xb6\x0b\xe7\xee\xe1\xf1\x71\x0e\x1f\xe3\x4f\x59\xa6\xab\xe1\x7c\xa3\x3e\xc5\x7e\xf0\x48\xcd\xf4\xe4\x99\xc1\xb8\x77\x79\x58\xa6\x91\x35\x12\x0a\x80\x81\x69\xd9\xa1\xa7\x27\x16\xa8\x37\xae\x01\xd6\x8a\xa0\x44\xf1\x47\x00\x00\x00\xff\xff\xb7\xd4\x0b\xb3\x71\x0b\x00\x00"

func bvlcReferenceCaffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceCaffenetYml,
		"BVLC-Reference-CaffeNet.yml",
	)
}

func bvlcReferenceCaffenetYml() (*asset, error) {
	bytes, err := bvlcReferenceCaffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-CaffeNet.yml", size: 2929, mode: os.FileMode(420), modTime: time.Unix(1506055551, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceRcnnIlsvrc13Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xdb\x46\x13\xbe\xf3\x57\x0c\xe0\xcb\xfb\x02\x16\x69\xea\xc3\xb2\x78\x28\x8a\x18\x68\x11\x20\xd5\xc1\x29\x72\x29\x0a\x61\xb8\x1c\x8a\x1b\x91\xbb\x8b\xd9\xa1\x64\xfd\xfb\x62\x97\x94\x44\x37\x6e\x12\x1f\x0c\x6a\xf7\x99\xaf\x67\x9e\x19\xd2\x60\x47\x05\x7c\xf8\xf2\xe9\x79\xf6\x42\x35\x31\x19\x45\xb3\x97\xe7\xed\x76\xf6\xf1\xd3\xe7\x2f\x2f\xcf\xf9\x02\xee\x20\x80\xc0\xd6\x70\xb6\x3d\x43\x67\x2b\x6a\x93\x9a\xb1\xa3\x93\xe5\x43\x91\x00\x0c\x4e\x9e\xb1\xae\x09\xee\xe0\x7a\x05\xb5\x65\x90\x86\x46\x13\x80\x23\xb1\xd7\xd6\x14\x90\xa7\x0f\x6f\x80\xe3\x05\x28\x6b\x84\x51\x1b\x49\xfe\x05\xbd\x00\xb4\xa9\x2d\x77\x28\xc3\x33\x78\xea\xd0\x88\x56\xd7\xfb\xe1\x36\x09\x7e\x50\x1b\xe2\x02\xee\xe0\xfa\xc3\x43\xef\xa9\x02\xb1\xe0\x88\x03\x72\x48\x0c\x1c\x53\xa5\x55\xf0\x99\xc0\xed\xef\x0e\xba\xbe\x15\xed\x5a\x02\xd7\xa2\x04\xbc\x07\x85\x06\x4a\x02\xef\x48\xe9\x5a\x53\x95\x00\x60\x57\x3d\x2e\x8b\x68\xb9\x77\x7d\x01\x8c\xda\xb1\xfd\x4a\x4a\x32\x85\xdc\xb5\x33\x15\x78\x29\x22\x6c\xa6\x5c\x1f\x91\xea\x87\xc8\x7d\x44\x3a\xa7\x1e\x97\x2d\x15\x3f\x34\x1a\x81\xa3\xd9\xf7\x53\x99\x62\x2b\xf2\x8a\xb5\x93\xc8\xf5\x2f\x09\xc0\x9f\x0d\x81\xeb\x99\xc6\x76\x6a\xe3\x25\x50\x3c\x50\x6e\xeb\xd8\xcf\x97\xd9\xf3\x76\x3b\x92\x17\x7a\x7c\x95\x4a\x45\x42\x91\xc8\x34\x7a\xd2\x7e\x04\x9d\xd0\x43\x87\x15\x41\x79\x06\x61\x34\xde\xb5\xc1\xa9\xd9\x4f\xdc\x7d\xfe\xf2\x07\xa8\x16\xbd\x0f\xc4\xb2\x07\x6d\xc4\x02\x42\xad\x66\xac\x8c\xb9\x5e\xa9\x21\x93\x16\xcf\xc4\xf7\xe0\xd8\x1e\x75\x45\x15\x34\xc4\x04\xe8\x01\x43\x92\xf5\x4c\x1a\x9a\xf9\x86\xda\x7a\x2c\x63\x48\xcc\x72\xcc\x8b\xcf\x31\xec\x35\x59\xa0\x57\xec\x42\x9f\xc5\x82\x27\x02\x2d\x41\x5b\x78\x2d\x64\x9b\x7e\x48\xe1\x37\xcb\xc0\xe4\x09\x59\x35\x81\x20\x67\x3d\xf9\x7b\xe8\xf0\x40\x41\x56\x17\x6a\x6c\x5d\x6b\xa5\xb1\x1d\x8b\x72\xa8\x0e\xb8\x27\x40\x53\x81\xb1\x02\x12\x38\x19\xc3\xbd\xc3\x51\x14\x3f\x55\x81\xa6\x17\xeb\x3d\xfc\xae\xd9\x37\x5a\x1d\xe0\x57\x2e\xf7\xe3\x73\xc2\x97\x39\xf5\x41\xdd\xb7\x5f\x51\xd8\xe8\x02\x77\x19\x9c\xa8\xf4\x5a\x28\x3c\x92\xa8\x34\x85\xa1\xd1\xe5\x85\xf3\xcb\x48\xce\xa0\x11\x71\xbe\xc8\xb2\xbd\x96\xa6\x2f\x53\x65\xbb\x2c\xac\x83\x2c\x6a\x25\x13\x26\xca\x3a\xf4\x42\x9c\x45\x1b\x9f\x95\xc7\x56\xed\xae\x61\x77\xa1\x3b\x3b\xdd\xfa\x23\xab\x7c\xf1\xc6\x23\xf2\xab\x3e\xa6\x96\xf7\x19\x96\x3e\xcb\x17\x79\x9e\xce\x57\xf3\xe5\x15\x53\x64\x99\x29\x8f\x9a\x4e\xc4\xe9\xd7\xde\x9d\x85\x38\xa2\x87\x4c\xa6\x59\x94\xad\x2d\x2f\x59\x8c\xec\xf9\xec\x26\x36\xed\xce\xa6\x4c\xee\xa0\xd5\x8a\xcc\xad\x17\x43\x8d\xe3\x61\x01\xbd\x61\xf2\xc2\x5a\x09\x55\xc9\x1d\x68\xe3\x7a\x89\xa4\xdd\xb0\xc3\x59\x98\xb6\x3b\xa8\x35\x7b\x19\x50\x20\x67\x47\xdf\x6c\xb3\x59\x3c\x2e\x40\x77\xb8\xa7\x64\x58\x19\x93\x71\xba\x64\x31\xf1\x13\x41\x6f\x26\x2e\x00\x86\x10\x37\x2f\x0e\xc3\x5e\x14\xe2\xd8\xdf\x18\xfa\x76\x34\x6e\xa8\x4a\x77\x64\xc2\xc6\xf3\x05\xfc\x95\xdf\xc3\xe2\x1e\xe6\xf3\x75\xfc\xf7\x77\x62\x7b\x71\xbd\x0c\x55\x84\x00\xd1\xc5\x45\x9f\xf1\x2e\x81\x31\xf7\x9a\x50\x7a\xa6\x08\xc5\xf7\xb2\x1f\xf0\xb7\x04\x92\x77\x0a\x18\x31\x2d\x96\x91\x97\x49\xfe\x23\x2b\xef\xd5\x30\x46\xf6\xbb\x9e\xdb\xe2\x2a\x19\xc6\x53\x3a\xb4\xbf\xf7\xc4\x61\x73\x93\x91\xa8\x49\x46\x3d\x7b\xbb\xcc\x46\x39\x8e\xb2\xa8\x50\x30\x1b\x65\x38\x0f\xda\xd8\xf9\xb3\xf1\x24\xbb\x93\xe5\xca\xa7\xf2\x2a\x6f\xc3\xaa\x86\xd4\xc1\xf7\x5d\xe0\xe0\xa1\xa6\xc5\xa2\x54\x4f\xaa\x7c\x58\xe7\xf5\x93\xc2\xf5\xe2\x61\xbd\xa8\x36\xeb\xcd\x7a\xa1\x1e\x93\x18\x28\xf4\xe2\xb2\xf6\x2f\x23\xbb\x67\x74\x4d\x9c\xed\x13\xe9\x7d\x23\x3e\x6c\x08\xdb\xb3\xa2\x50\x63\xbc\xdd\x39\x94\xe6\x67\xea\x9b\xa8\xfd\xe7\xc7\x2d\xab\xc8\xb5\xf6\x9c\x3a\xb6\x62\x87\x12\xc7\x4c\x26\x71\x8b\x2c\xab\xda\x34\xba\x4e\x4b\xe2\x03\xb5\x74\x3e\xea\x20\x9e\x38\x6d\xdf\xf3\x3f\x58\x5d\x04\xaf\xfd\x2e\x6c\x3f\x7d\x0c\xc2\xc1\xd6\x87\x97\xbd\xae\xc1\x93\xdc\x07\x1d\x98\x28\x86\x12\x3d\x85\x9e\x82\xf6\x80\x10\x1e\xc2\x1a\x37\x30\x5a\x4e\xdf\xb0\x93\x57\x6d\xb0\xbc\xf1\x35\xa5\x74\x38\x88\xee\x2b\x32\x56\x28\x3c\xff\x87\x97\x5a\xb7\x14\x3f\x46\xfc\x45\xbe\xdf\x76\xe8\xa4\xa5\xd1\x43\xaa\xb7\x94\x86\xd0\x37\x49\x2c\x9f\xd6\xf3\xcd\xf2\x29\xcf\x37\xeb\x75\xb9\xc9\x2b\xc4\x39\xae\x68\xb3\x7e\x5c\xe5\x65\xf9\xb4\x52\x13\x9e\x27\x46\x73\x95\xaf\x56\x8f\xd5\xbc\x5a\xae\x71\x93\xcf\x9f\xd4\x12\x37\x0f\xf4\x80\x1b\xb5\x5a\x2c\x73\x95\xa0\x08\xeb\xb2\x97\x61\x71\xd3\xab\x30\x82\x21\x89\x5f\x40\xb7\xbb\x04\xe0\xa0\x4d\x55\x40\x78\x7f\x0c\xcc\x84\xdf\xa1\x22\x43\x3d\x63\x7b\xb5\xf9\xdf\xf3\x76\x7b\x0f\x2f\xe1\x5f\x9a\xa6\xff\x0f\x43\x1d\xde\x1f\xda\xec\x77\x61\x1a\x3c\x49\x01\x1f\xc3\x5a\xd9\x92\x84\xdd\x34\x9c\x5d\x3f\x82\xe2\x3e\x1b\x0d\x12\x80\x0e\x8d\xae\xc9\xcb\x0e\x7b\x69\x2c\x17\x80\x65\xd5\xb7\x55\xf2\x4f\x00\x00\x00\xff\xff\xeb\x8c\x97\x11\x22\x0a\x00\x00"

func bvlcReferenceRcnnIlsvrc13YmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceRcnnIlsvrc13Yml,
		"BVLC-Reference-RCNN-ILSVRC13.yml",
	)
}

func bvlcReferenceRcnnIlsvrc13Yml() (*asset, error) {
	bytes, err := bvlcReferenceRcnnIlsvrc13YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-RCNN-ILSVRC13.yml", size: 2594, mode: os.FileMode(420), modTime: time.Unix(1506055578, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v10Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\x60\x04\x68\x01\xaf\x24\x5b\xd6\xae\xa3\x43\x81\x34\xbd\xe4\xe2\x43\x72\x2c\x02\x63\x44\x8e\x2c\x36\xfc\x50\xc8\xd1\xda\x9b\x5f\x5f\x90\x92\x2d\x6f\x93\x36\xf5\xc1\x10\xc9\x37\x5f\x8f\x33\x8f\x16\x0d\x35\xf0\xe9\xeb\x48\xf4\x8d\x0e\xc4\xb0\x82\xb8\x05\xae\x83\x17\x37\x7a\x30\x4e\x92\xce\x3a\x8f\x86\xce\xce\x7f\x69\x32\x80\xc9\xe4\x3d\x76\x1d\xc1\x0a\x6e\x47\xd0\x39\x0f\xdc\xd3\x6c\x02\xf0\x4c\x3e\x28\x67\x1b\xd8\xe4\xe5\x2b\xe0\x7c\x00\xc2\x59\xf6\xa8\x2c\x67\xff\x80\x5e\x01\xca\x76\xce\x1b\xe4\xe9\x1b\x02\x19\xb4\xac\xc4\xed\x7c\x3a\xcd\xa2\x1f\x54\x96\x7c\x03\x2b\xb8\x2d\x02\x8c\x81\x24\xb0\x83\x81\x7c\x44\x4e\x89\xc1\xe0\x49\x2a\x11\x7d\x66\xb0\xfc\x56\x60\x46\xcd\x6a\xd0\x04\x83\x46\x8e\xf8\x00\x02\x2d\xb4\x04\x61\x20\xa1\x3a\x45\x32\x03\x40\x23\x1f\x77\x4d\xb2\x3c\x0d\x63\x03\x1e\xd5\xe0\xdd\x5f\x24\xb8\x10\xe8\x8d\x7e\x10\x91\x97\x26\xc1\x1e\xc4\x30\x26\xa4\xf8\x29\xf2\x94\x90\xc3\x20\x1e\x77\x9a\x9a\x9f\x1a\xcd\xc0\xd9\xec\xbf\x53\xb9\xc7\x4a\x0a\xc2\xab\x81\x13\xd7\xbf\x65\x70\xbd\x78\x4b\x0c\x28\x7a\x45\xcf\x14\x20\x28\xa3\x34\x7a\xf0\x14\x46\xcd\x21\x32\xf8\x4e\xd3\xe5\x40\xbc\x06\x64\xa8\xcb\x0b\x74\x74\x26\x0f\x03\xc6\x2b\xe5\x48\x35\x5a\x09\x9b\xa2\x2e\x4b\xee\x53\x0f\x04\xf5\x8d\xf2\xe8\xdf\xa0\xd6\x13\xf1\x01\xd0\xc7\xe6\xf0\x04\x1d\x61\x50\xad\xa6\xe8\x5a\xd2\xa0\xdd\x0b\x38\x0b\x3d\x7a\x79\x8e\x98\xb3\xe2\x1e\xb4\x32\x8a\x49\x82\x21\xe3\xfc\xcb\x1a\x3c\x7d\x1d\x95\x27\xd0\x14\x42\x06\x20\x9c\x31\xa3\x55\x62\x6a\x0e\x39\x7a\x65\x4f\x20\x55\x60\xaf\xda\x31\xda\xa5\xce\x52\xf6\xb4\x4e\xb9\x45\xb7\x31\x28\xf9\x14\xf3\x86\x8b\x2b\xa1\x15\x59\x0e\xf9\x42\xc7\xe1\x9e\x8e\xfa\x29\xaf\xdf\x24\x27\xfb\x32\xaf\xde\x00\xbb\xe1\x61\x93\xd6\xf1\xab\x06\x14\xa3\x47\xc1\xa9\x84\x0f\x06\x4f\xd1\x3a\xcf\x3c\x75\xe4\xc9\x0a\x0a\xb1\x29\x97\x55\xea\x47\x1c\x22\x67\x05\x9c\xa9\x0d\x8a\x29\x7e\x12\x8b\x3c\x87\xe9\x7e\xda\x58\xcb\xfd\x24\x3d\x40\xcf\x3c\x84\xa6\x28\x4e\x8a\xfb\xb1\xcd\x85\x33\xc5\x1f\x44\xc3\x27\x81\x9a\x8a\x25\xeb\x57\x58\xf4\x17\xf5\x9c\x3b\x7f\x2a\xb0\x0d\xc5\xe6\xb1\xdc\xe6\xe5\x53\xf5\x58\x66\x2b\xd0\x4a\x90\x0d\x69\xca\x97\x38\xf3\x66\x03\xbf\xbf\xfb\xf0\x31\x5b\x81\xb2\xc3\x38\x5d\xff\x82\x99\xf6\x62\x83\xae\xa0\x53\x3e\xf0\x84\x02\x7e\x19\xe8\x3b\x01\x78\x48\xdb\x0d\xa8\xc8\x4a\x36\x4d\xd9\x5d\x07\x5e\xa3\xdf\xf9\x49\xa0\x57\x4d\x1a\x01\x53\x88\xc5\xcb\xd2\x77\x91\xdb\x14\x7a\xd9\x9a\x87\x5a\x2a\x43\x36\x8a\x44\x68\xe0\xcf\xcd\x1a\xaa\x35\x6c\xb7\x4f\xe9\xef\xf3\x0c\x31\x84\x36\x1e\x6e\xf7\x6b\xb8\xfe\x7d\xce\xdc\xc8\xc3\xc8\x53\x85\x31\x78\x72\x3f\x67\x3a\x9d\x65\x30\xd7\xd5\x11\xf2\xe8\x29\x41\xf1\x47\x95\x4d\xf8\x25\xb9\xec\x07\xc5\xcd\x18\x8d\x6d\xe2\xec\xae\xb6\x99\xb1\x1f\xd5\x37\x47\x0e\xc7\xd1\xeb\x26\x5d\x78\x53\x14\x12\x19\x73\x69\xb4\xc8\x8d\x2e\xcc\xc5\x12\x17\xd3\xe0\x15\x89\xba\xb8\x0e\x2f\x36\x10\xe7\x7c\xe1\xd7\x6e\x44\x4f\xe2\x4b\x18\x4d\x03\x3b\xb9\xad\x76\x6d\xbd\xaf\x2a\x14\xb8\xdb\xbd\xdd\xee\xcb\xc7\x1a\x37\xfb\x52\xb6\x55\xb9\x79\xc4\x2c\xb9\x8c\xbc\x5f\x55\x31\xcc\xba\x7a\xf2\x38\xf4\x69\x2e\xce\xa4\x4e\x3d\x87\x28\x20\x6e\xf4\x82\x62\xce\x2d\x06\x5a\xb2\xfd\x1f\xad\x5c\x78\x3c\x17\x06\x03\x93\xbf\xdb\x3d\x3e\x6f\xf2\xb2\xc8\x60\x8a\x76\x1c\x90\xfb\x66\x96\x90\x7c\xf0\x8e\xdd\x54\xda\x9c\xc1\x7c\x1e\x6e\x22\x97\xcc\xf3\xa4\x8b\xd7\x26\x55\xe1\x88\x5e\xf4\xea\x39\x5e\x28\xea\x10\xdf\x34\xd5\x41\x88\x6a\xc7\x3d\xd9\x74\x49\xd7\xec\x41\x05\x40\x88\x1f\xec\x00\x2d\xcc\x96\xf7\x0f\xc9\xdd\x8b\x12\x2d\x97\x3c\xef\xa9\x99\x36\x92\x7b\x49\xd6\x45\x1d\xea\xff\xcd\x4b\xa7\x34\xa5\x37\x37\x5c\xdb\xea\x7b\xa6\xa3\x62\xaa\x29\xd5\x25\xa5\x29\xf4\x72\xb5\x24\xaa\x8a\x64\xdb\x6d\x9e\xa8\xdc\x6f\xdb\xaa\xab\x9f\xaa\xba\x23\x21\x6a\xac\xe4\xdb\xa7\xdd\x1d\x6f\x8b\x51\xdb\xbe\xc5\x6d\x27\x77\x2d\x6d\xea\x3d\xd5\xed\x86\xea\x3d\xd6\x42\x8a\x6d\xbb\x43\xc4\x7d\x86\x3c\x4b\x69\x1a\x46\xba\xb0\x47\xb0\xc4\xe9\xa1\x5f\xce\x32\x80\x2f\xca\xca\x06\xde\x1f\x0e\x33\x33\x71\x1d\x2b\xb2\x34\x7a\xd4\x37\x9b\x5f\xde\x1f\x0e\x6b\xf8\x18\xff\xf2\x3c\xff\x35\x0e\xdb\xac\xe4\xc7\xd8\xe0\x81\xb8\xb9\xc9\x6c\xd4\x93\x69\xef\xf6\xd6\x27\x0d\x9a\x0d\x32\x00\x83\x56\x75\x14\xf8\x88\x23\xf7\xce\x37\x80\xad\x1c\xb5\xcc\xfe\x0e\x00\x00\xff\xff\xc6\x1e\xe0\xe2\xf7\x08\x00\x00"

func squeezenet_v10YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v10Yml,
		"SqueezeNet_v1.0.yml",
	)
}

func squeezenet_v10Yml() (*asset, error) {
	bytes, err := squeezenet_v10YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.0.yml", size: 2295, mode: os.FileMode(420), modTime: time.Unix(1506055607, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v11Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4d\x6f\xe3\x36\x13\xbe\xeb\x57\x0c\x60\x60\xf1\xbe\x40\xac\x0f\x5b\x91\xbd\x02\xb6\x45\xbb\xbd\xec\x25\x87\xdd\x63\xb1\x08\x46\xe4\xc8\x62\x23\x91\x2c\x39\x8a\x93\xfe\xfa\x82\xa4\x62\x39\xfb\xd1\xf8\x20\x48\x9c\x67\xbe\xe7\x19\x3a\xd3\x38\x51\x0b\x5f\xfe\x9e\x89\xfe\xa1\x3b\x62\xd8\x40\x38\x02\xd3\xc3\xb3\x99\x1d\x4c\x46\xd2\x98\xf5\x0e\x27\x3a\x1b\xf7\xd0\x66\x00\x49\xe5\x23\xf6\x3d\xc1\x06\x2e\x22\xe8\x8d\x03\x1e\x68\x51\x01\x78\x24\xe7\x95\xd1\x2d\x54\x79\xf9\x0a\xb8\x08\x40\x18\xcd\x0e\x95\xe6\xec\x0a\x5a\xc1\xe6\x02\x50\xba\x37\x6e\x42\x4e\xef\xe0\x69\x42\xcd\x4a\x5c\xe4\x49\x9a\x05\x3b\xa8\x34\xb9\x16\x36\x70\xf9\xf0\x30\x7b\x92\xc0\x06\x2c\xb9\x80\x4c\x81\x81\x75\x24\x95\x08\x36\x33\x58\x7f\x1b\x98\xe6\x91\x95\x1d\x09\xec\x88\x1c\xf0\x1e\x04\x6a\xe8\x08\xbc\x25\xa1\x7a\x45\x32\x03\xc0\x49\x36\x75\x1b\x35\x4f\x76\x6e\xc1\xa1\xb2\xce\xfc\x45\x82\x0b\x81\x6e\x1a\xb7\x22\xd4\xa5\x8d\xb0\xad\xb0\x73\x44\x8a\x37\x91\xa7\x88\xb4\x56\x34\xf5\x48\xed\x9b\x4a\x0b\x70\x51\xfb\xef\x50\xae\xb1\x92\xbc\x70\xca\x72\xac\xf5\x2f\x19\x5c\x37\xfe\x31\xd4\x7e\x40\x0f\xbb\xbc\x7e\x82\x91\xbc\x07\x61\x26\x3b\x73\xaa\x3f\x0f\xa8\x03\xa6\xbc\x81\xb3\xe2\xc1\xcc\x0c\x1e\x85\x53\xbd\x12\x4a\x9f\x00\x85\x98\x1d\x8a\xe7\x3c\x73\xd4\x93\x23\x2d\xc8\x87\x76\xac\x5f\xb1\x13\x68\x43\x63\x0a\x38\x53\xe7\x15\x53\x78\x25\x16\x79\x0e\x29\xb2\x2e\x98\xba\x9e\xa1\x2d\x0c\xcc\xd6\xb7\x45\x71\x52\x3c\xcc\x5d\x2e\xcc\x54\xfc\x41\x64\xbf\x08\x1c\xa9\x58\xc3\x7f\x85\x45\xf7\xa4\x1e\x73\xe3\x4e\x05\x76\xbe\xa8\x9a\x72\x97\x97\x87\x7d\x53\xfe\xcc\xa0\x54\x8f\x4a\x2a\x56\x85\x78\x48\x45\x2b\xd8\x11\x15\x13\x7a\x26\x57\x58\x14\x0f\x78\xa2\x22\x4a\x62\x60\x5b\x49\x64\x7d\x88\x60\xeb\x53\x04\x9a\x78\x5b\xe5\xd5\xc5\x41\x5b\x14\xe2\x41\x9b\xf3\x48\xf2\x44\x31\x12\x47\xd6\x14\x67\xea\x72\x3b\xd8\x5f\x99\xa6\x30\x65\xf4\x61\x05\xbd\x7b\x77\x16\x4a\x7e\x58\x9c\xb5\xb7\xef\xeb\xaa\xde\xd7\xc7\xae\xea\x24\xc9\xee\x36\xdb\xc0\xa8\x04\x69\x1f\xa9\xb9\x96\x68\x39\x6c\xe1\xf7\xdf\x3e\x7d\xce\x36\xa0\xb4\x9d\x39\xd6\x7a\xc5\xa4\xb3\x30\x55\x1b\xe8\x95\xf3\x9c\x50\xc0\xcf\x96\xbe\x63\xed\x36\x1e\xb7\xa0\x26\x3c\x51\x96\xa8\x71\x35\x36\x2f\xde\xaf\xec\x44\xd0\xab\xc9\x0a\x80\xe4\x62\xb5\x62\x31\xf0\x9f\xc9\xc5\xb1\x88\xae\xd7\xa3\x85\x89\x52\x4d\xa4\x03\xb3\x7d\x0b\x7f\x56\x37\xb0\xbf\x81\xdd\xee\x10\x1f\x5f\x17\xc8\x44\xa8\x83\x70\x77\xbc\x81\x97\xc7\xd7\xcc\xcc\x6c\x67\x4e\x19\x06\xe7\xd1\xfc\x12\x69\x92\x65\xb0\xe4\xd5\x13\xf2\xec\x28\x42\xf1\x47\x99\x25\xfc\x1a\x5c\xf6\x83\xe4\x16\xcc\x88\x5d\xac\xd9\x55\x6e\x4b\xc5\x7e\x94\xdf\xe2\xd9\xdf\xcf\x6e\x6c\x5f\xa6\x44\x22\x63\x2e\xa7\x51\xe4\xd3\x58\x4c\x4f\x9a\xb8\x88\x9d\xf0\x45\x2c\x5d\xf8\xf6\xcf\xda\x13\xe7\xfc\xc4\xaf\xcd\x88\x81\xc4\x83\x9f\xa7\x16\x6a\xb9\xdb\xd7\xdd\xed\x71\xbf\x47\x81\x75\xfd\x7e\x77\x2c\x9b\x5b\xac\x8e\xa5\xec\xf6\x65\xd5\x60\x16\x4d\x86\xba\xbf\xac\x32\xbf\x2c\xc3\x93\x43\x3b\x00\x6a\x09\x67\x52\xa7\x81\x3d\x38\xf2\x66\x76\x82\x42\xcc\x51\x7a\x6f\x91\x87\xf6\x42\x1b\x87\xe7\x3c\x51\x67\xf6\xe4\xc2\xb6\x25\xcd\x91\x45\x0e\xd5\xf6\xf5\x02\x5a\x32\x59\x78\x94\x98\xb5\x12\xe6\x3e\x6c\x9c\x42\x92\x1d\xcd\x73\x6e\x9d\x61\x93\x52\x5c\x22\xf9\xc6\xef\x1b\xfc\x0f\x71\xbd\x38\x5a\x4f\x93\x8b\x6f\x5c\xe6\x2b\x91\x33\x00\xe5\xef\xd1\x89\x41\x3d\x86\xd9\xc0\xd1\x87\x3b\x4d\xf5\xe0\x89\x6f\x42\xab\x75\xec\x77\x87\x9e\x42\xdb\x40\x79\x40\x08\x2f\x6c\x00\x35\x2c\x9a\xd7\x17\xc9\xd5\x8d\x12\x34\xd7\x12\x5e\x57\x39\x1d\x44\xf3\x92\xb4\x61\x0a\xef\x3f\xb1\xd2\xab\x91\xe2\x9d\xeb\x5f\x26\xf4\xfb\xa6\x85\x8d\xac\x52\xa8\x6b\x48\xc9\xf5\x3a\x25\x15\x35\x07\xd1\x55\x87\x8a\xaa\x06\x6b\xd9\x34\xbd\xdc\xef\xab\xba\x7c\x2f\x77\xfd\xa1\x2b\xe5\x55\xe9\x57\xa5\x72\x7f\x7b\xa0\x9a\xaa\x4a\x56\x87\xbd\x38\xec\xb0\xac\x9a\xea\xf6\x78\x3c\x1e\x77\x4d\x27\x8e\x94\x21\xb3\x53\xdd\xcc\x69\xdd\xd3\x13\x3b\x04\x4d\x1c\x2f\xfa\x55\x96\x01\x3c\x28\x2d\x5b\xf8\x78\x77\xb7\x54\x26\x7c\x87\x8c\x34\xcd\x0e\xc7\x8b\xce\xff\x3e\xde\xdd\xdd\xc0\xe7\xf0\xc8\xf3\xfc\xff\x81\xb7\xe1\x3f\x82\xd2\xa7\xfb\xc0\x15\x4f\xdc\xc2\xa7\x40\x8d\xf4\x67\x65\x39\xbb\xdc\xf5\x71\x9d\x2d\x0a\x19\xc0\x84\x5a\xf5\xe4\xf9\x1e\x67\x1e\x8c\x6b\x01\x3b\x39\x8f\x32\xfb\x37\x00\x00\xff\xff\xd5\x5b\xda\x13\xf8\x08\x00\x00"

func squeezenet_v11YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v11Yml,
		"SqueezeNet_v1.1.yml",
	)
}

func squeezenet_v11Yml() (*asset, error) {
	bytes, err := squeezenet_v11YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.1.yml", size: 2296, mode: os.FileMode(420), modTime: time.Unix(1506055624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg16Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4b\x8f\xdb\xb6\x13\xbf\xeb\x53\x0c\xe0\x4b\x02\xac\xde\xb2\x65\xe9\xf0\x3f\xc4\x87\x45\x80\xfc\xf7\x90\x16\x0b\xb4\x45\x60\x8c\xc8\x91\xcc\xae\x44\x0a\x24\x65\xaf\x2f\xfd\xec\x05\x29\xf9\xb1\xc9\xb6\xa9\x0f\x86\xc8\xf9\xcd\xeb\x37\x0f\x49\xe2\x40\x35\x3c\x3f\x3e\xa6\x1b\x58\x81\x3b\x81\x6a\xe1\xac\x26\x0d\x83\xe2\xd4\x07\xad\xc6\x81\x4e\x4a\xbf\xd4\x01\xc0\x8c\xde\x61\xdb\x12\xac\xe0\x2a\x82\x56\x69\xb0\x07\x5a\x54\x00\x8e\xa4\x8d\x50\xb2\x86\x34\x4a\xde\x00\x17\x01\x30\x25\xad\x46\x21\x6d\xf0\x1d\xf4\x02\x10\xb2\x55\x7a\x40\x3b\x3f\x83\xa1\x01\xa5\x15\xec\x2a\x9f\xa5\x81\xb3\x83\x42\x92\xae\x61\x05\xd7\x83\x81\xc9\x10\x07\xab\x60\x24\xed\x90\x73\x60\x30\x6a\xe2\x82\x39\x9b\x01\xdc\x7e\x2b\x18\xa6\xde\x8a\xb1\x27\x18\x7b\xb4\x0e\x6f\x80\xa1\x84\x86\xc0\x8c\xc4\x44\x2b\x88\x07\x00\x38\xf0\x4d\x51\x7b\xcd\x6e\x9c\x6a\xd0\x28\x46\xad\xfe\x24\x66\x63\x86\x7a\xe8\x43\xe6\x78\xa9\x3d\x2c\x64\xe3\xe4\x91\xec\xa7\xc8\xce\x23\xc7\x91\x6d\x8a\x9e\xea\x9f\x2a\x2d\xc0\x45\xed\xdf\x43\xb9\xc7\x72\x32\x4c\x8b\xd1\x7a\xae\xff\x17\x00\xfc\x7a\xa9\x17\x08\x03\x28\x41\x0c\xa3\x56\x47\xe2\x57\x8a\x55\xeb\x6b\x9a\x6e\xc2\x1e\xcf\xb4\xf4\xc3\xcc\x6c\x73\xf6\xa2\xe7\xc7\x47\xb0\x84\x83\xab\x90\x3b\x7f\xfe\xf2\xcb\xf3\xd7\x5d\x98\x25\x69\x01\x4c\x0d\x23\x59\xe1\xfc\x45\x81\xa6\x96\x34\x49\x46\xc6\xd5\xe9\x76\xf2\x25\xc2\xd1\x55\x2c\x86\x13\x35\x46\x58\x72\x8f\x64\x59\x14\xc1\x1c\x72\x23\x64\xf7\xa6\xb9\x42\x38\x58\x3b\x9a\x3a\x8e\x3b\x61\x6c\xd4\x09\x7b\x98\x9a\x88\xa9\x21\x7e\x31\x62\x50\xf2\x8c\x32\xce\xd2\x74\x9b\x57\x54\x96\x49\x5b\x36\xeb\x7c\x4b\x19\xdf\x7e\xa7\x7a\xd5\xfa\xf4\xfc\x65\x17\x7b\xc2\xe2\x93\x78\x11\xf1\xff\x9d\x9f\xf0\x77\xa5\x56\xde\xa3\x09\x5d\xca\x61\x73\x0e\xed\x81\xc2\x63\xd7\x85\x2e\xe5\x50\xc8\x50\xf4\xe6\xa8\x99\x4f\xf7\x8d\x6d\xd4\xaf\xe2\x18\x29\xdd\xc5\xd8\x98\x38\x2d\x92\x2a\x4a\xd7\xeb\x4d\xb0\x82\x5e\x30\x92\x86\x2e\xd4\xce\x19\x2d\x97\x35\xec\x76\xf0\xe9\x37\x28\xa2\x04\x3e\x30\x35\x0c\xa4\x99\x40\x4f\xb8\xaf\x50\xdf\xab\x13\xf1\x8f\xc1\x0a\x84\x1c\x27\xeb\xb9\xbb\x19\x99\xef\x5c\xfb\xac\xa0\x15\xda\xd8\x19\x05\xf6\x3c\xd2\x0f\xe3\x19\xfa\xeb\x1a\xc4\x80\x1d\x05\xf3\x0c\xdc\xf5\xc7\x25\xbc\x3b\x3b\x1e\xf4\xa6\x85\x1c\x60\x76\x71\xb3\x32\xa2\x1b\x74\x4b\xda\x97\xd9\xbb\xbe\x5d\x2d\x23\xc7\xc5\x40\xd2\xf5\x97\xa9\xe1\x8f\xf4\x01\xf2\x07\xc8\xb2\xc2\xff\x7d\x5b\x20\x03\xa1\x74\xc2\x2c\x8f\x36\xdb\x07\x48\xd3\x4d\x54\x96\xd5\x03\xa4\x49\x1e\x55\x79\xf5\x2d\x50\x93\x1d\x27\x3b\x27\xeb\xe2\xf0\x9e\x96\xa0\x67\x59\x00\x4b\x8a\x2d\xa1\x9d\x34\x79\x28\xbe\x97\xe4\x8c\xbf\xc5\x19\xbc\x93\xe7\x82\xe9\xb1\xf1\xf4\xdd\xa5\xb9\x90\xf7\x5e\xaa\x8b\x67\xb3\x9f\x74\x5f\xfb\xde\xa8\xe3\x98\xa3\xc5\x88\x0f\x3d\x8b\x86\x3e\x1e\x5e\x25\xd9\x78\x6e\xb2\xd8\xb3\xe8\xce\xe6\x2c\x0d\xd9\xc8\xbe\xda\xb7\x66\xd8\x81\xd8\x8b\x99\x86\x1a\x0a\x9e\xe5\x45\xb3\xde\xe6\x39\x32\x2c\x8a\x2a\xdb\x26\x9b\x35\xa6\xdb\x84\x37\x79\x92\x6e\x30\xf0\x26\x5d\x09\x2e\xeb\xcb\x2c\xc3\xdb\x69\x1c\x0f\x80\x92\xc3\x89\x44\x77\xb0\x06\x34\x19\x35\x69\x46\x2e\x66\x2f\xdd\x8f\x68\x0f\xf5\x7b\x23\x36\x19\xd2\x6e\xc5\x92\xb4\xff\x61\xda\x62\x8d\xa7\x98\x13\xaf\xf2\x4d\xde\xf0\x2a\x27\x96\xb0\xb2\x4c\xd2\xbc\x68\x0b\xca\xb7\x25\xdf\xa2\xfb\x65\x45\x52\x32\x8a\x9f\x1f\x1f\xf7\xf3\xf6\xd8\xa7\x9b\xbd\xdf\x37\x66\xcf\x69\xec\xd5\x39\x1a\xb5\xb2\x6a\xa6\x63\x89\xfa\x2e\xc6\x3a\x8e\x4f\xa7\x53\xa4\x55\xa3\xac\x89\xd4\x6b\x84\x2c\x9a\x5e\xe2\xbf\x8e\x5d\x17\x1b\xd5\xda\x13\x6a\x8a\x8f\xa4\xcf\x7b\x4e\x34\x2e\x63\xfe\x9e\xb7\xc8\x8b\x2e\x13\x22\xcc\x1e\x35\x3b\x88\xa3\x6b\x21\xec\x8d\x7b\xdd\x89\x16\x0c\xd9\x07\xd7\x11\xf3\xba\x6b\xd0\x90\xab\xae\x1f\x4f\x70\x0f\x56\xb9\x4d\xba\x68\xde\xbf\x63\xee\x5e\x36\x4e\xf3\xc6\xf4\x7d\x31\xe6\x0b\x6f\x9e\x93\x54\x96\xdc\xf3\x3f\x58\x69\x45\x4f\xfe\x75\x6c\x2e\x8d\xfc\x63\x6d\x4f\xc2\x1e\x96\xcd\x7c\x0b\x69\x76\x7d\x6b\x26\x56\x26\xeb\x75\xd2\x6e\xb3\x24\xc7\x82\x10\x69\x9d\xf3\x92\xe5\x15\xb5\x79\xc1\xaa\x8c\xdf\xb1\x7e\xd7\x81\x45\x9a\xa7\xeb\x26\x69\xdb\x4d\x95\x67\xbc\x69\x39\x55\x65\x99\xa7\x0d\x95\x0c\xb7\xeb\x2c\x40\x6b\xb5\x68\x26\x3b\x2f\x7c\x7a\xb5\x1a\x41\x92\xf5\xdf\x00\x37\x59\x00\xf0\x22\x24\xaf\x61\xf7\xf4\xb4\x30\xe3\xce\x2e\x23\x49\x93\xc6\xfe\xaa\xf3\x61\xf7\xf4\xf4\x00\x5f\xdd\x5f\x14\x45\x1f\xdd\x78\xbb\xcf\x07\x21\xbb\xbd\x1b\x29\x43\xb6\x86\xcf\x6e\x82\x9e\xc8\xba\x65\x36\xdf\x5d\x3f\x03\xfc\x02\x5c\x14\x02\x80\x01\xa5\x68\xc9\xd8\x3d\x4e\xf6\xa0\x74\x0d\xd8\xf0\xa9\xe7\xc1\xdf\x01\x00\x00\xff\xff\xd5\xb3\xf0\x49\x0d\x09\x00\x00"

func vgg16YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg16Yml,
		"VGG16.yml",
	)
}

func vgg16Yml() (*asset, error) {
	bytes, err := vgg16YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "VGG16.yml", size: 2317, mode: os.FileMode(420), modTime: time.Unix(1506055643, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg19Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x8f\xa3\x38\x13\xbe\xf3\x2b\x4a\xca\x65\x46\x6a\x20\x24\x40\x02\x87\xf7\x30\x39\xb4\x46\x9a\xb7\x0f\xb3\xab\x96\x76\x57\xa3\xa8\xb0\xcb\xc4\xdb\x60\x23\xdb\x24\x9d\xcb\xfe\xf6\x95\x0d\xf9\xe8\x99\xde\x9d\xcd\x21\xc2\xae\xa7\xbe\x9e\xfa\x00\x85\x3d\xd5\xf0\xfc\xf8\x98\x55\xb0\x00\x7f\x02\x2d\xe0\xac\x47\x03\xbd\xe6\xd4\x45\xc2\x60\x4f\x27\x6d\x5e\xea\x08\x60\x42\xef\x50\x08\x82\x05\x5c\x45\x20\xb4\x01\x77\xa0\x59\x05\xe0\x48\xc6\x4a\xad\x6a\xc8\x92\xe5\x1b\xe0\x2c\x00\xa6\x95\x33\x28\x95\x8b\xbe\x83\x5e\x00\x52\x09\x6d\x7a\x74\xd3\x33\x58\xea\x51\x39\xc9\xae\xf2\x49\x1a\x79\x3b\x28\x15\x99\x1a\x16\x70\x3d\x58\x18\x2d\x71\x70\x1a\x06\x32\x1e\x39\x05\x06\x83\x21\x2e\x99\xb7\x19\xc1\xed\xb7\x80\x7e\xec\x9c\x1c\x3a\x82\xa1\x43\xe7\xf1\x16\x18\x2a\x68\x08\xec\x40\x4c\x0a\x49\x3c\x02\xc0\x9e\x97\x79\x1d\x34\xdb\x61\xac\xc1\xa0\x1c\x8c\xfe\x93\x98\x4b\x19\x9a\xbe\x8b\x99\xe7\xa5\x0e\xb0\x98\x0d\x63\x40\xb2\x9f\x22\xdb\x80\x1c\x06\x56\xe6\x1d\xd5\x3f\x55\x9a\x81\xb3\xda\xbf\x87\x72\x8f\xe5\x64\x99\x91\x83\x0b\x5c\xff\x2f\x02\xf8\xf5\x52\x2f\x90\x16\x50\x81\xec\x07\xa3\x8f\xc4\xaf\x14\x6b\x11\x6a\x9a\x55\x71\x87\x67\x9a\xfb\x61\x62\xb6\x39\x07\xd1\xf3\xe3\x23\x38\xc2\xde\x57\xc8\x9f\x3f\x7f\xf9\xe5\xf9\xeb\x2e\x5e\x2d\xb3\x1c\x98\xee\x07\x72\xd2\xfb\x4b\x22\x43\x82\x0c\x29\x46\xd6\xd7\xe9\x76\x0a\x25\xc2\xc1\x57\x2c\x85\x13\x35\x56\x3a\xf2\x8f\xe4\x58\x92\xc0\x14\x72\x23\x55\xfb\xa6\xb9\x62\x38\x38\x37\xd8\x3a\x4d\x5b\x69\x5d\xd2\x4a\x77\x18\x9b\x84\xe9\x3e\x7d\xb1\xb2\xd7\xea\x8c\x2a\x5d\x6f\xb6\x45\x56\xae\x44\x55\x30\xbe\xe2\x85\x20\xda\x6c\xbe\x53\xbd\x6a\x7d\x7a\xfe\xb2\x4b\x03\x61\xe9\x49\xbe\xc8\xf4\xff\xde\x4f\xfc\xbb\xd6\x8b\xe0\xd1\xc6\x3e\xe5\xb8\x39\xc7\xee\x40\xf1\xb1\x6d\x63\x9f\x72\x2c\x55\x2c\x3b\x7b\x34\x2c\xa4\xfb\xc6\x36\x9a\x57\x79\x4c\xb4\x69\x53\x6c\x6c\x9a\xe5\xcb\x2a\xc9\x8a\xa2\x8c\x16\xd0\x49\x46\xca\xd2\x85\xda\x29\xa3\xf9\xb2\x86\xdd\x0e\x3e\xfd\x06\x79\xb2\x84\x0f\x4c\xf7\x3d\x19\x26\x31\x10\x1e\x2a\xd4\x75\xfa\x44\xfc\x63\xb4\x00\xa9\x86\xd1\x05\xee\x6e\x46\xa6\x3b\xdf\x3e\x0b\x10\xd2\x58\x37\xa1\xc0\x9d\x07\xfa\x61\x3c\xe3\x70\x5d\x83\xec\xb1\xa5\x68\x9a\x81\xbb\xfe\xb8\x84\x77\x67\x27\x80\xde\xb4\x90\x07\x4c\x2e\x6e\x56\x06\xf4\x83\xee\xc8\x84\x32\x07\xd7\xb7\xab\x79\xe4\xb8\xec\x49\xf9\xfe\xb2\x35\xfc\x91\x3d\xc0\xfa\x01\x56\xab\x3c\xfc\x7d\x9b\x21\x3d\xa1\xf2\xc2\xd5\x3a\x29\xb7\x0f\x90\x65\x65\xb2\xd9\x54\x0f\x90\x2d\xd7\x49\xb5\xae\xbe\x45\x7a\x74\xc3\xe8\xa6\x64\x7d\x1c\xc1\xd3\x1c\xf4\x24\x8b\x60\x4e\x51\x10\xba\xd1\x50\x80\xe2\x7b\x49\x4e\xf8\x5b\x9c\xd1\x3b\x79\xce\x98\x0e\x9b\x40\xdf\x5d\x9a\x33\x79\xef\xa5\x3a\x7b\xb6\xfb\xd1\x74\x75\xe8\x8d\x3a\x4d\x39\x3a\x4c\x78\xdf\xb1\xa4\xef\xd2\xfe\x55\x91\x4b\xa7\x26\x4b\x03\x8b\xfe\x6c\xcf\xca\x92\x4b\xdc\xab\x7b\x6b\x86\x1d\x88\xbd\xd8\xb1\xaf\x21\xe7\xab\x75\xde\x14\xdb\xf5\x1a\x19\xe6\x79\xb5\xda\x2e\xcb\x02\xb3\xed\x92\x37\xeb\x65\x56\x62\x14\x4c\xfa\x12\x5c\xd6\x97\x9d\x87\xb7\x35\x38\x1c\x00\x15\x87\x13\xc9\xf6\xe0\x2c\x18\xb2\x7a\x34\x8c\x7c\xcc\x41\xba\x1f\xd0\x1d\xea\xf7\x46\x6c\xb4\x64\xfc\x8a\x25\xe5\xfe\xc3\xb4\xa5\x06\x4f\xa9\xc8\xd7\x44\x24\xd8\xb6\xac\x78\x99\x97\x4d\x9e\x57\x88\x25\xa3\xb2\x14\xdb\x4d\x23\xaa\xed\x06\x33\x56\x35\x45\xfa\xfc\xf8\xb8\x9f\xb6\xc7\x3e\xab\xf6\x61\xdf\xd8\x3d\xa7\xa1\xd3\xe7\x64\x30\xda\xe9\x89\x8e\x39\xea\xbb\x18\xeb\x34\x3d\x9d\x4e\x89\xd1\x8d\x76\x36\xd1\xaf\x09\xb2\x64\x7c\x49\xff\x3a\xb6\x6d\x6a\xb5\x70\x27\x34\x94\x1e\xc9\x9c\xf7\x9c\x68\x98\xc7\xfc\x3d\x6f\x49\x10\x5d\x26\x44\xda\x3d\x1a\x76\x90\x47\xdf\x42\xd8\x59\xff\xba\x93\x02\x2c\xb9\x07\xdf\x11\xd3\xba\x6b\xd0\x92\xaf\x6e\x18\x4f\xf0\x0f\x4e\xfb\x4d\x3a\x6b\xde\xbf\x63\xee\x5e\x36\x5e\xf3\xc6\xf4\x7d\x31\xa6\x8b\x60\x9e\x93\xd2\x8e\xfc\xf3\x3f\x58\x11\xb2\xa3\xf0\x3a\xb6\x97\x46\xfe\xb1\xb6\x27\xe9\x0e\xf3\x66\xbe\x85\x34\xb9\xbe\x35\x13\x63\x4d\xc3\x39\x16\xd5\x2a\x5b\xae\x96\xdb\x86\xd6\x95\xd8\x56\x9b\x5c\x14\x4d\xb1\x29\x0b\xba\x63\xfd\xa6\xd4\x14\xac\xcc\xf3\x86\xb0\xe1\x1b\x26\x96\x65\xc3\x79\xb5\x2c\x0b\x26\x78\xb9\xc9\x59\xb5\x89\xd0\x39\x23\x9b\xd1\x4d\x0b\x9f\x5e\x9d\x41\x50\xe4\xc2\x37\xc0\x4d\x16\x01\xbc\x48\xc5\x6b\xd8\x3d\x3d\xcd\xcc\xf8\xb3\xcf\x48\xd1\x68\xb0\xbb\xea\x7c\xd8\x3d\x3d\x3d\xc0\x57\xff\x97\x24\xc9\x47\x3f\xde\xfe\xf3\x41\xaa\x76\xef\x47\xca\x92\xab\xe1\xb3\x9f\xa0\x27\x72\x7e\x99\x4d\x77\xd7\xcf\x80\xb0\x00\x67\x85\x08\xa0\x47\x25\x05\x59\xb7\xc7\xd1\x1d\xb4\xa9\x01\x1b\x3e\x76\x3c\xfa\x3b\x00\x00\xff\xff\x43\x5b\xc2\x6e\x0d\x09\x00\x00"

func vgg19YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg19Yml,
		"VGG19.yml",
	)
}

func vgg19Yml() (*asset, error) {
	bytes, err := vgg19YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "VGG19.yml", size: 2317, mode: os.FileMode(420), modTime: time.Unix(1506055663, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vocFcn16sYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8f\xdb\x36\x10\xbe\xeb\x57\x0c\xe0\x4b\x0b\xd8\x92\x25\x7b\x65\x5b\x87\x02\x81\x8b\x00\x45\x03\x27\x48\x5f\x87\x22\x10\x46\xe4\xc8\x62\x23\x91\x02\x39\xb2\xd7\xff\xbe\x20\x25\x3f\xb6\xd9\x74\x7d\x30\x28\xce\x37\xcf\x6f\x66\xa8\xb1\xa3\x02\xde\xef\x0f\x8b\x34\x77\xf0\xe9\xdd\x6f\xfb\x77\x1f\x60\x06\xfe\x1a\x4c\x0d\x17\x33\x58\xe8\x8c\xa4\x36\xaa\x2d\x76\x74\x36\xf6\x6b\x11\x01\x8c\x6a\x7b\xac\x6b\x82\x19\xdc\x44\x50\x1b\x0b\xdc\xd0\xa4\x02\x70\x22\xeb\x94\xd1\x05\xa4\xf1\xf2\x05\x70\x12\x80\x30\x9a\x2d\x2a\xcd\xd1\x7f\xa0\x57\x80\xd2\xb5\xb1\x1d\xf2\x78\x06\x47\x1d\x6a\x56\xe2\x26\x1f\xa5\x91\xb7\x83\x4a\x93\x2d\x60\x06\xb7\x0f\x07\x83\x23\x09\x6c\xa0\x27\xeb\x91\x63\x60\xd0\x5b\x92\x4a\x78\x9b\x11\xdc\x7f\x33\xe8\x86\x96\x55\xdf\x12\xf4\x2d\xb2\xc7\x3b\x10\xa8\xa1\x22\x70\x3d\x09\x55\x2b\x92\x11\x00\x76\x32\x5f\x17\x41\xf3\xd8\x0f\x05\x58\x54\xbd\x35\xff\x90\xe0\x44\xa0\xed\xda\x85\xf0\x75\x29\x02\x6c\x21\xfa\x21\x20\xc5\x9b\xc8\x63\x40\xf6\xbd\xc8\xd7\x2d\x15\x6f\x2a\x4d\xc0\x49\xed\xff\x43\x79\xc4\x4a\x72\xc2\xaa\x9e\x43\xad\x7f\x8a\x00\x7e\xff\xf8\xf3\xc7\xc8\x52\x4d\x96\xb4\x20\xe7\x0b\x78\xff\x0a\xb5\xc3\xde\x97\x32\x81\x33\x55\x4e\x31\xf9\x23\xb1\x88\x63\x18\x6d\x55\x4a\x1f\x5f\xb0\xbe\x80\x86\xb9\x77\x45\x92\xa0\x7d\x56\xa7\xd8\xd8\x63\x82\x95\x4b\xd2\x7c\xf9\x14\x2f\xf3\x2c\x4d\x6f\xa0\x22\x49\xce\xe7\x73\x2c\x4e\x8b\xda\x0c\x5a\x06\x9e\x03\xde\xf4\xa4\x51\x08\x72\x2e\xf1\x74\x92\xe6\x52\x9c\x7a\x5b\x66\xcb\xf4\x29\x69\xb8\x6b\x93\x0f\x46\x1f\xcb\xf7\x43\xdb\x5e\xca\xbd\xd1\x27\xd3\x0e\x5e\x19\xdb\xf2\x40\xec\x7b\xcc\x05\x6c\xb9\xff\xf3\xd3\xe7\x32\xa4\x10\x7b\xb5\x17\xe1\x1d\x15\x37\x43\x15\x0b\xd3\x25\xae\xa1\xb6\xc1\x8e\x6c\x52\x0b\x1d\x57\x64\xbf\x52\x4b\x97\x93\x72\xd7\x80\xd8\x12\x25\x1d\x3a\x26\x9b\x9c\x8c\x58\xd4\x42\xaf\x32\x17\xcd\xa0\x55\x82\xb4\x0b\xe3\x72\x2f\xc2\x74\x59\xc0\x1f\x87\x5f\x0f\x1f\xff\x3a\x44\x33\x50\xba\x1f\x38\x14\xf4\x0e\x1b\xef\x3c\xd9\x33\xa8\x95\x75\x3c\xa2\x80\x2f\x3d\x7d\x33\x4c\x8b\x70\x5d\x80\xea\xf0\x48\xd1\xd8\xb1\x0f\x6c\x5e\x03\x78\xb0\x13\x40\x2f\x08\xf7\x80\xd1\xc5\xdd\x4a\x8f\x7e\x2c\x99\x6c\xe0\x3e\xb8\xbe\x5f\x4d\x03\x22\x55\x47\xda\xd7\xc2\x15\xf0\x77\x3a\x87\xd5\x1c\x9e\x96\xcb\xf0\xf7\x65\x82\x74\x84\xda\x0b\xb3\x2c\xce\x37\xdb\x5d\x36\x87\x34\xcd\xe3\x3c\xdf\x6e\x36\x73\x48\x97\xeb\x78\xb9\xcc\x77\xbb\x2f\x91\x19\xb8\x1f\x78\xcc\xd9\x87\x13\x1c\x4e\xb1\x8f\xb2\x08\xa6\x4c\x6b\x42\x1e\x2c\x05\x28\xbe\x96\xeb\x88\xbf\x87\x1b\xbd\x92\xee\x84\x69\xb1\x0a\x55\x7c\xc8\x76\xaa\xe1\x6b\x19\x4f\x9e\x5d\x39\xd8\xb6\x78\xe8\x17\xc7\xf1\xd8\x34\x83\x23\x3b\x35\x66\xe8\x1f\xd4\x46\x5f\x3a\x33\xb8\x04\xb7\xd9\xba\xc2\xd5\x6a\x55\xe1\x2e\xcb\x76\x2b\xa4\xed\x52\xca\xad\xcc\xf3\x8d\x5c\xed\xd2\x34\xb1\x78\x4e\xaa\x4c\xa6\x32\x13\x28\x71\xb5\x21\x4c\xd7\xdb\x74\x8b\xd5\x46\xac\x28\xcb\x76\x62\xbd\xab\xaa\x2c\x13\xeb\xa7\xd5\x53\x70\x59\xab\x96\xd2\x98\x9f\x39\x0a\xad\xe0\x59\xba\xee\x23\x37\x6d\xb4\xa3\xc5\xbe\x01\xd4\x12\xce\xa4\x8e\x0d\x3b\xb0\xe4\xcc\x60\x05\xf9\x7c\x82\xb4\xec\x91\x9b\x7b\x2e\x16\xcf\xdf\x49\xe5\xcd\x51\x78\x39\x05\x69\xee\x92\x13\xb6\x71\x6f\x0d\x1b\x1f\x24\x5c\x63\x78\xf0\x58\x24\x89\x6c\xe3\xb0\x8d\x5e\xb3\x38\x9a\x59\x34\x84\xa7\xcb\xa2\x47\x27\x70\x02\x5f\x7b\x5f\xb9\x12\xad\x68\xd4\xc9\x77\x05\xb6\xce\x3f\x3b\xaa\x06\x47\x3c\xf7\x24\xeb\xc0\x74\x85\x8e\x3c\x61\xa0\x1c\x20\xf8\x03\x1b\x40\x0d\x93\xe6\xe3\xae\x7f\x58\xfa\x5e\xf3\x5e\xa0\xc7\x1a\x8e\x17\xc1\xbc\x24\x6d\x98\xfc\xf9\x3b\x56\x3c\x47\xe1\x59\x74\xd7\xde\xfc\x96\x92\xb3\xe2\x46\x8d\xa1\x5e\x43\x42\x66\xab\xaa\x81\xc7\xbd\x4b\xcf\x6c\x11\xf4\xb8\xbf\xe0\x2e\x8b\x00\xbe\x2a\x2d\x0b\xd8\x1f\x0e\x53\xc4\xfe\xdb\x7b\xd2\x34\x58\x6c\x6f\x3a\x3f\xec\x0f\x87\x39\x7c\xf6\x7f\x71\x1c\xff\xe8\x27\xc9\x3f\xaf\x4a\x1f\x4b\x89\x8c\x8e\xb8\x80\x5f\xfc\xe4\x1f\x88\xfd\xfa\x18\xef\x6e\xcf\x64\x58\x39\x93\x42\x04\xd0\xa1\x56\x35\x39\x2e\x71\xe0\xc6\xd8\x02\xb0\x92\x43\x2b\xa3\x46\x49\x49\x7e\xbc\xec\x40\xd1\xbf\x01\x00\x00\xff\xff\x87\x9d\x34\x36\x43\x08\x00\x00"

func vocFcn16sYmlBytes() ([]byte, error) {
	return bindataRead(
		_vocFcn16sYml,
		"voc-fcn16s.yml",
	)
}

func vocFcn16sYml() (*asset, error) {
	bytes, err := vocFcn16sYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voc-fcn16s.yml", size: 2115, mode: os.FileMode(420), modTime: time.Unix(1506055414, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vocFcn32sYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x5b\xaf\xdb\x36\x0c\x7e\xf7\xaf\x20\x90\x97\x0d\x38\xb1\x63\x27\x27\x17\x3f\x0c\x28\x32\x14\x18\x56\xa4\x45\x77\x7b\x18\x0a\x83\x96\xe8\x58\xab\x2d\x09\x12\x9d\x34\xff\x7e\x90\xec\x5c\xce\x7a\xba\xe6\x21\x90\xc5\x8f\xd7\x8f\xa4\x34\xf6\x54\xc2\xdb\xfd\x61\xbe\x2c\x3c\x7c\x78\xf3\xdb\xfe\xcd\x3b\x98\x41\xb8\x06\xd3\xc0\xc5\x0c\x0e\x7a\x23\xa9\x4b\x1a\x87\x3d\x9d\x8d\xfb\x5c\x26\x00\xa3\xda\x1e\x9b\x86\x60\x06\x37\x11\x34\xc6\x01\xb7\x34\xa9\x00\x9c\xc8\x79\x65\x74\x09\x79\xba\x78\x01\x9c\x04\x20\x8c\x66\x87\x4a\x73\xf2\x1f\xe8\x15\xa0\x74\x63\x5c\x8f\x3c\x9e\xc1\x53\x8f\x9a\x95\xb8\xc9\x47\x69\x12\xec\xa0\xd2\xe4\x4a\x98\xc1\xed\xc3\xc3\xe0\x49\x02\x1b\xb0\xe4\x02\x72\x0c\x0c\xac\x23\xa9\x44\xb0\x99\xc0\xfd\x37\x83\x7e\xe8\x58\xd9\x8e\xc0\x76\xc8\x01\xef\x41\xa0\x86\x9a\xc0\x5b\x12\xaa\x51\x24\x13\x00\xec\xe5\x7a\x55\x46\xcd\xa3\x1d\x4a\x70\xa8\xac\x33\xff\x90\xe0\x4c\xa0\xeb\xbb\xb9\x08\x75\x29\x23\x6c\x2e\xec\x10\x91\xe2\xbb\xc8\x63\x44\x5a\x2b\xd6\xab\x8e\xca\xef\x2a\x4d\xc0\x49\xed\xff\x43\x79\xc4\x4a\xf2\xc2\x29\xcb\xb1\xd6\x3f\x25\x00\xbf\xbf\xff\xf9\x7d\xe2\xa8\x21\x47\x5a\x90\x0f\x05\xbc\x7f\xc5\xda\xa1\x0d\xa5\xcc\xe0\x4c\xb5\x57\x4c\xe1\x48\x2c\xd2\x14\x46\x5b\xb5\xd2\xc7\x17\xac\xcf\xa1\x65\xb6\xbe\xcc\x32\x74\x5f\xd4\x29\x35\xee\x98\x61\xed\xb3\x7c\xbd\x78\x4e\x17\xeb\x22\xcf\x6f\xa0\x32\xcb\xce\xe7\x73\x2a\x4e\xf3\xc6\x0c\x5a\x46\x9e\x23\xde\x58\xd2\x28\x04\x79\x9f\x05\x3a\x49\x73\x25\x4e\xd6\x55\xc5\x22\x7f\xce\x5a\xee\xbb\xec\x9d\xd1\xc7\xea\xed\xd0\x75\x97\x6a\x6f\xf4\xc9\x74\x43\x50\xc6\xae\x3a\x10\x87\x1e\xf3\x11\x5b\xed\xff\xfc\xf0\xb1\x8a\x29\xa4\x41\xed\x45\x78\x47\xc5\xed\x50\xa7\xc2\xf4\x99\x6f\xa9\x6b\xb1\x27\x97\x35\x42\xa7\x35\xb9\xcf\xd4\xd1\xe5\xa4\xfc\x35\x20\x76\x44\x59\x8f\x9e\xc9\x65\x27\x23\xe6\x8d\xd0\xcb\xc2\x27\x33\xe8\x94\x20\xed\xe3\xb8\xdc\x8b\x30\x5d\x96\xf0\xc7\xe1\xd7\xc3\xfb\xbf\x0e\xc9\x0c\x94\xb6\x03\xc7\x82\xde\x61\xe3\x5d\x20\x7b\x06\x8d\x72\x9e\x47\x14\xf0\xc5\xd2\x57\xc3\x34\x8f\xd7\x25\xa8\x1e\x8f\x94\x8c\x1d\xfb\xc0\xe6\x35\x80\x07\x3b\x11\xf4\x82\xf0\x00\x18\x5d\xdc\xad\x58\x0c\x63\xc9\xe4\x22\xf7\xd1\xf5\xfd\x6a\x1a\x10\xa9\x7a\xd2\xa1\x16\xbe\x84\xbf\xf3\x27\x58\x3e\xc1\xf3\x62\x11\xff\x3e\x4d\x90\x9e\x50\x07\x61\x51\xa4\xeb\xcd\x76\x57\x3c\x41\x9e\xaf\xd3\xf5\x7a\xbb\xd9\x3c\x41\xbe\x58\xa5\x8b\xc5\x7a\xb7\xfb\x94\x98\x81\xed\xc0\x63\xce\x21\x9c\xe8\x70\x8a\x7d\x94\x25\x30\x65\xda\x10\xf2\xe0\x28\x42\xf1\xb5\x5c\x47\xfc\x3d\xdc\xe4\x95\x74\x27\x4c\x87\x75\xac\xe2\x43\xb6\x53\x0d\x5f\xcb\x78\xf2\xec\xab\xc1\x75\xe5\x43\xbf\x78\x4e\xc7\xa6\x19\x3c\xb9\xa9\x31\x63\xff\xa0\x36\xfa\xd2\x9b\xc1\x67\xb8\x2d\x56\x35\x2e\x97\xcb\x1a\x77\x45\xb1\x5b\x22\x6d\x17\x52\x6e\xe5\x7a\xbd\x91\xcb\x5d\x9e\x67\x0e\xcf\x59\x5d\xc8\x5c\x16\x02\x25\x2e\x37\x84\xf9\x6a\x9b\x6f\xb1\xde\x88\x25\x15\xc5\x4e\xac\x76\x75\x5d\x14\x62\xf5\xbc\x7c\x8e\x2e\x1b\xd5\x51\x9e\xf2\x17\x4e\x62\x2b\x04\x96\xae\xfb\xc8\x4f\x1b\xed\xe8\xd0\xb6\x80\x5a\xc2\x99\xd4\xb1\x65\x0f\x8e\xbc\x19\x9c\xa0\x90\x4f\x94\x56\x16\xb9\xbd\xe7\xe2\xf0\xfc\x8d\x54\xbe\x3b\x0a\x5f\x4d\x41\x76\xc2\x2e\xb5\xce\xb0\x09\x41\xc2\x35\x86\x07\x8f\x65\x96\xc9\x2e\x8d\xdb\xe8\x35\x8b\xa3\x99\x79\x4b\x78\xba\xcc\x2d\x7a\x81\x13\xf8\xda\xfb\xca\x57\xe8\x44\xab\x4e\xa1\x2b\xb0\xf3\xe1\xd9\x51\x0d\x78\xe2\xa7\x40\xb2\x8e\x4c\xd7\xe8\x29\x10\x06\xca\x03\x42\x38\xb0\x01\xd4\x30\x69\x3e\xee\xfa\x87\xa5\x1f\x34\xef\x05\x7a\xac\xe1\x78\x11\xcd\x4b\xd2\x86\x29\x9c\xbf\x61\x25\x70\x14\x9f\x45\x7f\xed\xcd\xaf\x29\x39\x2b\x6e\xd5\x18\xea\x35\x24\x64\x76\xaa\x1e\x78\xdc\xbb\xf4\x85\x1d\x82\x1e\xf7\x17\xdc\x65\x09\xc0\x67\xa5\x65\x09\xfb\xc3\x61\x8a\x38\x7c\x07\x4f\x9a\x06\x87\xdd\x4d\xe7\x87\xfd\xe1\xf0\x04\x1f\xc3\x5f\x9a\xa6\x3f\x86\x49\x0a\xcf\xab\xd2\xc7\x4a\x22\xa3\x27\x2e\xe1\x97\x30\xf9\x07\xe2\xb0\x3e\xc6\xbb\xdb\x33\x19\x57\xce\xa4\x90\x00\xf4\xa8\x55\x43\x9e\x2b\x1c\xb8\x35\xae\x04\xac\xe5\xd0\xc9\xa4\x55\x52\x52\x18\x2f\x37\x50\xf2\x6f\x00\x00\x00\xff\xff\x5a\x4a\xe7\xde\x43\x08\x00\x00"

func vocFcn32sYmlBytes() ([]byte, error) {
	return bindataRead(
		_vocFcn32sYml,
		"voc-fcn32s.yml",
	)
}

func vocFcn32sYml() (*asset, error) {
	bytes, err := vocFcn32sYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voc-fcn32s.yml", size: 2115, mode: os.FileMode(420), modTime: time.Unix(1502685807, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC-AlexNet.yml": bvlcAlexnetYml,
	"BVLC-GoogLeNet.yml": bvlcGooglenetYml,
	"BVLC-Reference-CaffeNet.yml": bvlcReferenceCaffenetYml,
	"BVLC-Reference-RCNN-ILSVRC13.yml": bvlcReferenceRcnnIlsvrc13Yml,
	"SqueezeNet_v1.0.yml": squeezenet_v10Yml,
	"SqueezeNet_v1.1.yml": squeezenet_v11Yml,
	"VGG16.yml": vgg16Yml,
	"VGG19.yml": vgg19Yml,
	"voc-fcn16s.yml": vocFcn16sYml,
	"voc-fcn32s.yml": vocFcn32sYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC-AlexNet.yml": &bintree{bvlcAlexnetYml, map[string]*bintree{}},
	"BVLC-GoogLeNet.yml": &bintree{bvlcGooglenetYml, map[string]*bintree{}},
	"BVLC-Reference-CaffeNet.yml": &bintree{bvlcReferenceCaffenetYml, map[string]*bintree{}},
	"BVLC-Reference-RCNN-ILSVRC13.yml": &bintree{bvlcReferenceRcnnIlsvrc13Yml, map[string]*bintree{}},
	"SqueezeNet_v1.0.yml": &bintree{squeezenet_v10Yml, map[string]*bintree{}},
	"SqueezeNet_v1.1.yml": &bintree{squeezenet_v11Yml, map[string]*bintree{}},
	"VGG16.yml": &bintree{vgg16Yml, map[string]*bintree{}},
	"VGG19.yml": &bintree{vgg19Yml, map[string]*bintree{}},
	"voc-fcn16s.yml": &bintree{vocFcn16sYml, map[string]*bintree{}},
	"voc-fcn32s.yml": &bintree{vocFcn32sYml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

