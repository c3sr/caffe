// Code generated by go-bindata.
// sources:
// builtin_models/BVLC-AlexNet.yml
// builtin_models/BVLC-GoogLeNet.yml
// builtin_models/BVLC-Reference-CaffeNet.yml
// builtin_models/BVLC-Reference-RCNN-ILSVRC13.yml
// builtin_models/SqueezeNet_v1.0.yml
// builtin_models/SqueezeNet_v1.1.yml
// builtin_models/VGG_ILSVRC_16.yml
// builtin_models/VGG_ILSVRC_19.yml
// builtin_models/voc-fcn16s.yml
// builtin_models/voc-fcn32s.yml
// DO NOT EDIT!

package caffe

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bvlcAlexnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x5d\x6f\xdc\xb6\x12\x7d\xd7\xaf\x18\x60\x11\xc0\xb9\x77\x57\xda\xdd\xd8\x89\xaf\x2e\x50\xb4\x75\xfb\x50\xa0\xf0\x43\xfa\xf1\x52\x14\xc6\x88\x1a\xad\x98\x50\x24\x41\x8e\xd6\xde\xfc\xfa\x62\x48\x69\xb5\x4e\x9c\xc6\x0f\x6b\x8a\x73\x66\x38\x3c\x33\x3c\xa4\xc5\x81\x6a\xf8\xf1\xcf\x5f\xef\x36\x3f\x18\x7a\xba\x27\x86\x15\xc8\x24\xb8\x0e\x4e\x6e\x0c\x30\xb8\x96\x4c\xd1\x05\x1c\xe8\xd1\x85\x8f\x75\x01\x90\x9d\xee\xb0\xeb\x08\x56\x70\x36\x41\xe7\x02\x70\x4f\x93\x0b\xc0\x91\x42\xd4\xce\xd6\xb0\x2b\xb7\xcf\x80\x93\x01\x94\xb3\x1c\x50\x5b\x2e\x3e\x83\xce\x00\x6d\x3b\x17\x06\xe4\x3c\x86\x48\x03\x5a\xd6\xea\x6c\xcf\xd6\x42\xe2\xa0\xb6\x14\x6a\x58\xc1\xf9\x23\xc2\x18\xa9\x05\x76\xe0\x29\x08\x32\x27\x06\x3e\x50\xab\x95\xc4\x2c\x60\xf9\x5b\xc1\x30\x1a\xd6\xde\x10\x78\x83\x2c\xf8\x08\x0a\x2d\x34\x04\xd1\x93\xd2\x9d\xa6\xb6\x00\xc0\xa1\x7d\x7b\x5d\x27\xcf\x83\x1f\x6b\x08\xa8\x7d\x70\x1f\x48\x71\xa5\x30\x0c\x66\xa3\x84\x97\x3a\xc1\x36\xca\x8f\x09\xa9\xbe\x89\x3c\x24\xa4\xf7\xea\xed\xb5\xa1\xfa\x9b\x4e\x13\x70\x72\xfb\xf7\x54\x2e\xb1\x2d\x45\x15\xb4\xe7\xc4\xf5\x77\x05\xc0\xef\xbd\x8e\x13\x2f\x3a\x02\x42\x20\x6f\xb4\xca\x8c\xbb\x6e\x29\x27\x64\xcf\x86\x5a\x29\x84\x4c\xcf\xfd\xe2\xc7\x66\xf6\x28\x0b\x80\x9f\x74\xd7\x51\x20\xab\x28\xd6\x60\x1d\x43\xaa\xb0\xb6\x07\x78\xd4\xdc\x27\xcf\x40\x46\x1f\x7a\x96\xb9\x16\x19\x37\x38\x1e\x06\xb2\x9c\x42\xfc\xbf\x00\xd0\x56\xb3\x46\xa3\x3f\x09\xc2\x3a\xbb\xf9\x44\xc1\x41\xa3\x31\x52\x94\x72\x6e\xcb\x1d\x68\x1b\x99\xb0\x95\x1c\x77\x70\xd5\xb9\xd1\xb6\x60\x49\x51\x8c\x18\x4e\xb9\x13\xa7\x75\xd7\x80\x71\x09\x99\x77\xc6\x0e\x76\x70\xc0\x23\x41\x67\x90\xc1\xb8\x18\x5f\x97\x89\x0d\x82\x66\xb4\xad\xa1\x76\x21\x45\x52\xd6\x4c\x21\xbb\xbe\x79\xbb\x5d\x6f\xb7\x5b\x88\x16\x7d\xec\x1d\x97\xd9\x89\x22\xc3\x11\x8d\x6e\x71\x6a\xac\xa9\xe7\xd0\x2a\x82\x76\x0c\xb2\x95\x85\x09\xc9\x68\x89\x78\x73\x9b\x22\x26\x7e\x96\x18\x80\x4a\x8d\x01\xd5\xa9\x00\xb8\x79\x57\xee\x6f\x6e\x5f\x01\xda\x36\x25\x0b\xbb\xf2\xf6\xcd\xff\xae\x6f\xcb\xcb\xfa\xb9\x46\xfa\x5e\x8a\xc8\xce\x6f\x76\x67\x7f\xf1\xde\x65\x5f\x2c\x20\x19\x6f\x16\xe3\xed\xb6\xdc\xbf\x02\x97\x6b\x7a\xb1\x7a\x24\x5e\xc3\x18\x25\xdd\x0f\x63\xe4\x64\x56\x64\x99\x02\xa8\xe0\xbc\xb0\x75\xf5\x47\x32\x8b\x05\x8f\x14\xf0\x90\x54\x63\xb7\x4d\x80\xb8\x86\xab\x6b\xf8\x2f\xec\x26\xaf\xd7\xf0\x1f\xd8\xc3\xa0\x43\x70\x61\x0d\xb1\x77\xa3\x69\xa7\x94\xe5\x54\x41\xa3\x19\x7a\x7d\xe8\x29\x9c\x73\x2b\x5f\x3f\x6f\x50\xa1\x2d\x71\x48\x2d\x34\x27\xf8\xf9\x88\x16\x7e\xeb\xc9\xf4\x38\x50\x80\xef\xe3\x3c\x2c\x02\x2d\x2d\xb8\x82\xe5\x2b\x69\x01\x7a\x91\x86\x0a\x1e\xa9\x89\x9a\x49\x86\xc4\xaa\x2c\xe7\x0e\x9f\xb7\x34\xab\xd8\x06\x7a\x66\x1f\xeb\xaa\x3a\x68\xee\xc7\xa6\x54\x6e\xa8\x44\x31\xab\x74\xbc\x2a\x0e\x44\xd5\x80\x91\x29\x54\xc9\x27\x56\xcd\xd1\xa8\x07\x34\xf4\x64\x89\xcf\x11\xea\xaa\xca\x6b\x97\x56\xfb\x58\x2a\x95\x3f\xab\xeb\xdb\xfd\xf5\x46\x0f\x78\x20\x4b\xbc\x51\x06\x63\xd4\xdd\x74\xa0\x36\xd2\x13\x9b\x96\xc8\x6f\x94\xb3\x47\x67\x46\x99\x45\xb3\xb1\x34\x86\xf4\x8f\x45\x50\x63\xe9\xdb\xae\x58\x81\xd1\x8a\x6c\xa4\x67\x07\xb7\x98\x26\x6b\x18\x6d\xa0\xc8\x41\x2b\xa6\xb6\x58\x81\xb6\x7e\xe4\x44\xc9\x82\xcd\x73\x22\x3f\x2b\xe8\x74\x88\x9c\x51\xc0\x27\x4f\x5f\xc8\xfb\x26\x4d\xd7\x90\x72\x2f\xb2\x86\x5e\xe8\xcb\x9c\xc5\x45\x9c\x04\x7a\x26\x41\xe9\x6c\xa5\x25\x96\x28\x1e\xe5\xa2\x60\x0a\xa9\x7a\x69\xe9\x65\x6a\x92\xec\x56\x0f\x64\xe5\x0a\x88\x35\xfc\xb5\x5b\xc3\x9b\x35\xec\xf7\xef\xd2\xcf\xdf\x13\x64\x20\xb4\xf5\x4b\xb5\x7b\xef\x1a\x0a\xbc\xbd\xdd\xed\x2b\x61\x36\xa2\x69\x89\xab\x80\x8f\x73\x15\x53\x5d\x37\x11\x4d\x25\xf2\x54\x69\x13\x8f\x41\xed\xf6\xd5\x5c\xa4\x07\x09\x5d\x36\xda\x62\x38\xf9\xe0\xd8\x15\x6e\x64\x3f\x72\xe6\x4d\xb6\x94\x92\x9e\xf6\x9f\x6d\x72\xf0\x12\x5b\x1d\x21\x8f\x81\x12\x14\x5f\xe2\x2b\xe3\x97\x2d\x17\x2f\x50\x36\x61\x0c\x36\xa9\x12\x17\x8c\x4d\x75\x78\x89\xb5\x69\xe5\xf8\x30\x06\x53\xcf\x2d\x29\x3b\x2c\xdb\xc1\xa8\x72\x30\xd5\x20\x0d\x3b\x37\xf1\xbc\xdb\x2a\x9e\x6c\x24\x2e\xf9\x89\x8b\x64\x92\xaa\xcc\x37\xe2\x7c\x34\x0f\x01\x7d\x9f\x24\xe6\x91\x44\xdb\x23\x04\x8a\x6e\x0c\x8a\x64\xed\x64\x7d\xf0\xc8\xfd\x52\x90\x80\x8f\x65\x2e\xca\x18\x29\xc8\xa5\x4d\x96\x3f\x3f\x5b\x5f\x3f\x56\x55\x4b\xde\xb8\x53\x99\xf8\x97\xd4\x60\x5e\xf9\x62\x1d\xd9\x9f\x29\x53\xa8\xb2\xa1\xf0\x91\x0c\x9d\x8e\x5a\xda\xa6\x74\xe1\xf0\x2c\x5e\x46\xcd\xad\xad\xe3\x03\x06\xd5\xeb\xa3\x14\x0c\x4d\x94\x77\x8e\xee\xb2\x26\x72\x4f\x59\x2c\x1b\x8c\x24\x5c\xe6\x8b\x53\x06\xec\x00\x2d\x4c\x9e\x97\x8f\x8b\x8b\x57\x86\x78\x2e\x7c\x5c\x52\x96\x27\x52\xf8\x96\xac\x63\x92\xf1\x57\xa2\x74\xda\x50\x7a\x87\xc5\xb9\x6d\xbe\xac\x80\x68\xc7\x74\x57\xcf\x29\x21\x73\xd0\xcd\xc8\x59\x18\xe9\x89\x03\xc2\xa4\x21\xb0\xd8\x0a\x80\x8f\xda\xb6\x35\xdc\xdd\xdf\x4f\x19\xcb\xb7\xac\x94\x75\xe7\xec\x73\x75\x77\x7f\xbf\x86\xf7\xf2\x53\x96\x49\xae\xe7\x3b\xee\x41\x1a\x2b\x12\xd7\xf0\x8b\xf4\x51\x7e\x58\x4e\x73\xe7\x77\xd9\xe5\x35\x5d\x00\x0c\x68\x75\x47\x91\x1f\x70\xe4\xde\x85\x1a\xb0\x69\x47\xd3\x16\xff\x04\x00\x00\xff\xff\xb5\x84\x78\x10\xa5\x0a\x00\x00"

func bvlcAlexnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcAlexnetYml,
		"BVLC-AlexNet.yml",
	)
}

func bvlcAlexnetYml() (*asset, error) {
	bytes, err := bvlcAlexnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-AlexNet.yml", size: 2725, mode: os.FileMode(420), modTime: time.Unix(1502657377, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcGooglenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x5f\x6f\xe3\xb8\x11\x7f\xd7\xa7\x18\xc4\x58\x20\x69\x6d\xc9\x72\xbc\xa9\x4f\x07\x14\xed\xe5\xd0\x43\xd1\x43\x1e\xee\xfa\xe7\xa1\x28\x8c\x11\x35\x92\x78\xa1\x48\x75\x38\xb2\xe3\xfd\xf4\x07\x52\x92\xed\x64\xb3\xbb\x79\x08\x2c\xf2\x37\xff\x7e\x33\x9c\x19\x8b\x1d\x15\xf0\xc3\xbf\x7f\x7e\x5c\xfd\xe4\x5c\xf3\x33\x3d\x91\xc0\x02\xc2\x31\xb8\x1a\x4e\x6e\x60\xe8\x5c\x45\x26\xa9\x19\x3b\x3a\x3a\x7e\x2e\x12\x80\x51\xec\x11\xeb\x9a\x60\x01\xe7\x2b\xa8\x1d\x83\xb4\x34\x89\x00\x1c\x88\xbd\x76\xb6\x80\x3c\x5d\xbf\x02\x4e\x17\xa0\x9c\x15\x46\x6d\x25\x79\x03\x9d\x01\xda\xd6\x8e\x3b\x94\xf1\x37\x78\xea\xd0\x8a\x56\xe7\xfb\xf1\x36\x09\x7a\x50\x5b\xe2\x02\x16\x70\xfe\xf0\x30\x78\xaa\x40\x1c\xf4\xc4\x01\x39\x3a\x06\x3d\x53\xa5\x55\xd0\x99\xc0\xe5\x6f\x01\xdd\x60\x44\xf7\x86\xa0\x37\x28\x01\xef\x41\xa1\x85\x92\xc0\xf7\xa4\x74\xad\xa9\x4a\x00\xb0\xab\x1e\xb6\x45\x94\x6c\xfa\xa1\x00\x46\xdd\xb3\xfb\x8d\x94\x64\x0a\xb9\x33\x2b\x15\x78\x29\x22\x6c\xa5\xfa\x21\x22\xd5\x37\x91\x4d\x44\xf6\xbd\x7a\xd8\x1a\x2a\xbe\x29\x34\x01\x27\xb1\xaf\xbb\x72\x8d\xad\xc8\x2b\xd6\xbd\x44\xae\xff\x9c\x00\xfc\xb3\xd5\x7e\xe2\x45\x7b\x40\x60\xea\x8d\x56\x23\xe3\xae\xbe\xa4\x13\x46\xc9\x92\xaa\x90\x88\x70\x1c\x2a\xc6\xc4\x8a\xe9\x87\x72\x96\x49\xe1\x3f\x04\x47\x37\x98\x0a\x8c\x7e\xa6\x40\xbe\xb4\x68\x9f\xe1\xb1\x65\xed\x45\xa3\x85\x5f\x3f\x51\x43\xd5\x29\x56\x0b\x1a\x03\xc1\x81\x96\x4c\x3f\xeb\x7d\xe3\xc1\xc5\x4c\xf4\x23\x4d\x00\x7e\xd4\x75\x4d\x4c\x56\x91\x8f\xe5\xe8\x04\x62\x19\x69\xdb\xc0\x51\x4b\x3b\xa9\x31\xba\x69\x25\x9c\x55\x28\xb8\xc2\xa1\xe9\xc8\x4a\xd4\xfb\xfd\x17\xa5\xbc\x42\x43\x10\x3c\x0b\x39\x97\x15\x07\xfc\xfb\x0a\x06\x4f\x1e\x6e\x5e\xf0\xa0\x89\x6f\x42\xa0\xda\x6a\xd1\x68\xf4\x27\x8a\xaa\x8e\x14\xec\x7b\xd0\xd6\x0b\x61\x15\x62\xb9\x69\x70\xf0\x5e\xa3\xbd\x09\x0a\xfe\x3f\x68\xf5\xbc\xf7\xce\x1c\x88\xd3\x9e\x9d\x38\x79\x91\x51\x2d\x42\x35\xc5\x28\x60\x08\x39\x3a\xc9\x28\x04\x15\x29\x3c\x41\xef\x8c\x56\xa7\x48\x6d\xb4\xe5\x58\x37\xda\xa2\x81\x37\xda\x96\x01\x22\x81\x66\x77\x0c\x5a\xbb\x41\xb5\x50\xa3\x17\xe2\x4b\xf0\xb7\x0f\x6b\xa0\xde\xa9\xd6\xc3\xc1\xc3\xe6\xe3\xfc\x75\xf7\x7d\xac\x0f\x82\x72\xb0\x95\xa1\xea\x52\x26\xc1\xa4\x16\xe2\x31\x49\x9b\xe5\x76\xbd\x5e\xae\xd7\x6b\xf0\x16\x7b\xdf\x3a\xb9\x52\x79\x07\x83\x0f\x46\xde\x0d\x76\xae\xbf\xd7\x06\x5c\x19\xde\x6f\x70\x57\x5c\xbf\xca\x01\x95\x1a\x18\xd5\x09\x1e\x76\xe9\x9f\x3e\xc0\xed\x7d\x9e\xde\x7f\x00\x62\x76\x7c\x07\x68\xab\x09\xf8\xf1\x02\xdc\xed\xd2\xef\x3e\xc0\x6d\x9e\xa7\xf9\x19\xe8\x46\xa6\x0e\x68\x74\x35\xfa\xed\x49\x96\x93\x77\xbf\x0d\x5e\xe2\xb5\x22\x1b\xb8\x51\xec\xfa\x50\x69\xb7\xff\x8a\xd7\xe1\x06\x0f\xc4\xd8\xc4\xbe\x98\xaf\x23\xc0\x2f\xe1\x76\x0b\x7f\x84\x7c\x92\xba\x83\x3f\xc0\x06\x3a\x1d\xec\x2d\xc1\xb7\xf1\x15\x8c\xc1\x00\x42\xa9\x05\x5a\xdd\xb4\xc4\x67\x3f\xd3\xbb\x40\x80\xee\xb4\x6d\x7c\x7c\x0e\xe5\xc1\xa8\x7d\x13\x0b\xde\x92\x8c\x55\xa9\x86\x1f\x9f\x9e\x26\x37\x4b\x14\xd5\xee\xbd\xfe\x44\x45\xbe\xd9\x85\x90\x10\xfe\xb1\x5d\xab\xf0\x0a\xfe\x3a\xf9\xf7\x37\xc7\x47\xe4\x0a\x7a\xf4\xbe\x80\x8f\x0f\x9b\x74\xb7\xcd\xa1\xf3\xe9\x15\xe6\x07\x54\xcf\x57\xa0\x3c\xdf\xdc\xa7\xbb\xed\x1b\xd0\xa4\x68\x35\x83\x0b\xc8\x1f\x76\xbb\x74\x37\xc1\xae\x1a\xc7\x11\xfd\x58\x4d\x54\x41\x79\x82\x5f\x89\x1b\xed\xe0\xa7\x01\x2b\x64\xc6\x0e\xe1\x2f\xbe\x09\x1f\x09\xd3\xf9\xdd\xc2\x02\x2e\x5f\xb1\x47\x63\x1f\x5a\x76\x06\x47\x2a\xbd\x16\x0a\x3f\x49\x54\x9a\xce\x9d\x67\x4e\xc4\x3c\x5d\x56\xd0\x8a\xf4\xbe\xc8\xb2\x46\x4b\x3b\x94\xa9\x72\x5d\x16\x66\x59\x16\xdb\x5e\x26\x4c\x94\x75\xb1\xd6\xb3\x28\xe3\xb3\xd7\xfc\xbe\xd2\x81\xfc\xa2\x0f\xa9\xe3\x26\xc3\xd2\x67\xf9\x76\xfd\x5d\xba\xdd\x6d\x37\xc9\x02\x8c\x56\x64\x3d\xbd\xea\x86\xc9\x74\x58\xc0\x60\x99\xbc\xb0\x56\x42\x55\xb2\x00\x6d\xfb\x41\xfc\xd8\xf6\x66\xec\x78\x16\x72\xb4\x80\x5a\xb3\x97\x11\x05\x72\xea\xe9\xb3\x99\xb9\x8a\xc7\x05\xe8\x0e\x1b\x4a\xc6\xc1\x74\xd5\xb4\x67\x2f\xae\xf4\x44\xd0\xab\xbe\x1e\x9f\x67\x34\x71\xd1\xd2\x63\x98\xbe\x42\x1c\xa9\x8f\xa6\x2f\x47\xd3\x1c\xac\x74\x47\x36\xcc\x55\x5f\xc0\x7f\xf3\x25\xdc\x2f\x61\xb3\xd9\xc6\x7f\xff\x9b\x20\x1d\xa1\x2d\xde\x23\xfe\x17\x57\x12\xcb\x7a\x97\x6f\xb2\x8a\xa8\xf7\x68\x2a\x92\x8c\xf1\x38\xa7\x20\x26\x65\xe5\xd1\x64\xa1\x9b\x66\xda\xf8\x03\xab\x7c\x93\x45\x17\x2d\xc9\x3e\xa8\x4e\x4b\x6d\x91\x4f\xb1\x3f\x24\x6e\x90\x7e\x90\x91\xb7\x10\x52\x74\x7a\x8a\x7f\xbc\x4b\x60\x62\xab\x26\x94\x81\x29\x42\xf1\x3d\xbe\x46\xfc\x25\xe4\xe4\x1d\xca\x26\x8c\xc1\x32\x66\xe2\x8a\xb1\x29\x0f\xef\xb1\x36\x59\xf6\xfb\x81\xcd\x48\x4c\x91\xc5\x08\xd3\xaa\x33\x2a\xed\x4c\xd6\xbd\x58\x92\xb9\x02\xe7\x68\x33\x7f\xb2\x9e\x24\x0d\x4d\x30\x5e\x85\xac\xcc\x6b\xc6\xfc\xae\x1a\xc6\xbe\x8d\x1d\x6e\x9e\x25\x4c\xde\x0d\xac\x28\xd8\x8e\xb7\xfb\x1e\xa5\xbd\x24\x84\xf1\x98\x8e\x49\x19\x3c\x71\xd8\x84\xc8\xca\xdb\x87\xf1\xb5\x37\x91\x55\xd4\x1b\x77\xba\xee\xd0\x93\xed\x2b\x4b\x21\x42\x93\x46\x65\x69\x49\xfc\x4c\x86\x4e\x07\x1d\x0a\x27\x3e\xa0\xd7\x1a\x47\xdc\x5c\xde\xda\xef\x91\x55\xab\x0f\x21\x69\x68\x7c\x58\x20\x75\x3d\xb6\x62\x69\x69\xec\xd1\x25\x7a\x0a\x7c\x8e\x1b\x49\xf8\x21\x0e\xd0\xc2\x24\x79\xbd\xb5\x5d\xad\x6f\x41\xf2\xc2\xc9\x35\x6d\xe3\x41\x54\x5f\x91\x75\x12\xe7\xf3\x17\xb4\xd4\xda\x50\x5c\x70\xfd\x5c\x3a\x9f\x67\x21\xf4\xe5\x69\x59\x99\x5d\x42\x11\xd6\xe5\x20\x63\x67\xa3\x17\x61\x04\x4b\x12\xb7\xdd\xcb\x5d\x02\xf0\xac\x6d\x55\xc0\xe3\xd3\xd3\xe4\x71\xf8\x0e\x96\x2c\x0d\x8c\xe6\x2c\x73\xfb\xf8\xf4\xb4\x84\x5f\xc2\xbf\x34\x8d\x73\x62\x1e\xd7\xfb\x50\x5c\x9e\xa4\x80\xbf\x87\x5a\x1a\x37\xf6\xe9\xec\xbc\xf0\xc6\xae\x32\x09\x24\x00\x1d\x5a\x5d\x93\x97\x3d\x0e\xd2\x3a\x2e\x00\xcb\x6a\x30\x55\xf2\x7b\x00\x00\x00\xff\xff\x8a\xcb\x83\xf2\x00\x0c\x00\x00"

func bvlcGooglenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcGooglenetYml,
		"BVLC-GoogLeNet.yml",
	)
}

func bvlcGooglenetYml() (*asset, error) {
	bytes, err := bvlcGooglenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-GoogLeNet.yml", size: 3072, mode: os.FileMode(420), modTime: time.Unix(1502657384, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceCaffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x41\x8f\xdb\xb6\x12\xbe\xeb\x57\x0c\x60\x3c\x60\xf3\xde\x4a\xb2\xbd\x9b\x64\xa1\x07\x14\x6d\x37\x97\x14\xc5\x1e\x82\xb4\x97\xa2\x30\x28\x6a\x64\x31\xa1\x48\x82\x1c\xda\xeb\xfe\xfa\x62\x48\xc9\xb2\x93\x4d\xd3\x3d\x78\x45\xce\x37\xc3\xe1\xf7\x0d\x87\x34\x62\xc4\x06\x7e\xfe\xfd\xd7\xc7\xf2\x03\xf6\xe8\xd1\x48\x2c\x1f\x45\xdf\xe3\x13\x12\xac\x80\xed\x60\x7b\x38\xd9\xe8\x61\xb4\x1d\xea\xa2\xf7\x62\xc4\xa3\xf5\x9f\x9b\x02\x20\xfb\x27\x07\x58\xc1\xd9\x04\xbd\xf5\x40\x03\x4e\x2e\x00\x07\xf4\x41\x59\xd3\xc0\xa6\x5a\x5f\x01\x27\x03\x48\x6b\xc8\x0b\x65\xa8\xf8\x02\x3a\x03\x94\xe9\xad\x1f\x05\xe5\x6f\x08\x38\x0a\x43\x4a\x9e\xed\xd9\x5a\x70\x1c\xa1\x0c\xfa\x06\x56\x70\x1e\x04\x88\x01\x3b\x20\x0b\x0e\x3d\x23\x73\x62\xe0\x3c\x76\x4a\x72\xcc\x02\x96\xbf\x15\x8c\x51\x93\x72\x1a\xc1\x69\x41\x8c\x0f\x20\x85\x81\x16\x21\x38\x94\xaa\x57\xd8\x15\x00\x62\xec\xde\xdc\x37\xc9\x73\xef\x62\x03\x5e\x28\xe7\xed\x27\x94\x54\x4b\xe1\x47\x5d\x4a\xe6\xa5\x49\xb0\x52\xba\x98\x90\xf2\xbb\xc8\x7d\x42\x3a\x27\xdf\xdc\x6b\x6c\xbe\xeb\x34\x01\x27\xb7\x7f\x4e\xe5\x12\xdb\x61\x90\x5e\x39\x4a\x5c\xff\x50\x00\x7c\x1c\x54\x98\x78\x51\x21\xa9\xe7\x31\x44\x4d\xac\x7f\x6f\xb5\xb6\x47\x65\xf6\x69\x3e\xeb\xfd\x7e\x14\xfb\x54\x26\xd9\x27\xc9\xc7\x08\x65\x02\xf9\x98\x58\x0d\x15\xbc\x27\x8e\x26\xc0\xa3\xd3\x4a\x66\xfd\x6c\xbf\x14\x07\xe4\x3c\x5a\xec\x58\x56\x9e\xfe\x49\xe3\x33\x87\x75\xb1\x3d\x7b\x1c\x15\x0d\x10\xec\x88\xd0\xa9\x7e\xaa\xd3\x50\x15\x00\xef\x96\x61\xaa\x47\x4b\x4b\x22\xc9\x29\xef\x43\xab\xfd\x40\x3c\xd7\x09\x12\xa5\x88\xfb\x11\x0d\xa5\xd0\xff\x2f\x20\x61\xac\xef\xd0\x73\x66\xce\x5a\xcd\x48\x61\x3a\x30\x5c\x54\x5a\xfd\x95\x93\xd0\xe2\xc4\xa5\xa4\x02\x84\xa3\x22\x39\x60\x07\x37\xca\xc0\x7c\x5c\x6e\xcf\xae\x2a\x40\x67\x0d\x42\x8b\xbd\xf5\x78\x1d\xe5\x55\xf5\x15\xd5\xc1\x08\x17\x06\x9b\x88\x56\x84\x3e\xaf\x76\xb7\x59\xdf\xae\xd7\xeb\x0a\x3e\x0e\x1c\x29\x10\x1c\x84\x56\x5d\x36\x4e\x65\x2c\x8c\x44\xe8\xa2\x4f\xc2\x9c\xb7\x2d\xc2\x55\x98\x3b\x0e\x93\xc9\xb8\x88\x20\xa4\x8c\x5e\xc8\x13\xbc\x7e\x5b\xdd\x6f\xb6\xff\x49\xfb\xd5\x36\x04\xd8\x54\x0f\xdb\xbb\xed\xc3\x17\x79\xda\x96\x8f\x12\x2b\x49\xd6\x95\x9b\x6b\xff\xec\x9d\x4d\xaf\x17\xd3\xc3\x9a\x4d\x36\xcb\x7a\xb1\x76\x60\xb2\x62\xe0\x64\x3f\xc5\x40\xc9\x2c\xd1\x10\x7a\x90\xde\x3a\x5e\xf9\xe6\xb7\x30\x57\x9b\x38\xa0\x17\xfb\xd4\x86\x36\xeb\x04\x08\xb7\x70\x73\x0f\xff\x83\xcd\xe4\xf5\x0a\xfe\x0b\x5b\x18\x95\xf7\xd6\xdf\x42\x18\x6c\xd4\xdd\x94\x30\x08\x68\x15\xc1\xa0\xf6\x03\xfa\x25\xb3\x40\x4a\xeb\xea\xd5\xf5\x16\x99\xb8\xc4\x22\x76\xd0\x9e\xe0\x17\xec\x7b\x78\x67\x8d\x18\x22\xc2\x8f\x9f\xb0\xef\xbb\x3c\x28\x3c\x9e\x6b\x0e\x56\xb0\x8c\x52\x83\x11\x8e\x8b\xa4\x86\x23\xb6\x41\x11\xf2\x27\x92\xac\xaa\xb9\xd0\xe7\x6d\xcd\xad\xb1\x84\x81\xc8\x85\xa6\xae\xf7\x8a\x86\xd8\x56\xd2\x8e\x35\x77\xe4\x3a\x9d\xd9\x9a\x3c\x62\x3d\x8a\x40\xe8\xeb\xe4\x13\xea\xf6\xa0\xe5\xee\xbc\xec\x2e\xe1\x0c\xd2\x39\x58\x53\xd7\x39\x8d\xca\x28\x17\x2a\x29\xf3\xb0\xbe\x7f\xd8\xde\x97\x8a\x8f\xad\x41\x2a\xa5\x16\x21\xa8\x7e\x3a\x62\x25\x17\x48\xd9\x21\xba\x52\x5a\x73\xb0\x3a\xf2\xac\xd0\xa5\xc1\xe8\xd3\x3f\xe2\x86\x1d\x2a\xd7\xf5\xc5\x0a\xb4\x92\x68\x02\x5e\x1d\xe5\x62\x9a\x6c\x20\x1a\x8f\x81\xbc\x92\x84\x5d\xb1\x02\x65\x5c\xa4\xc4\xce\x82\xcd\x73\x7c\x66\x57\xd0\x2b\x1f\x28\xa3\x80\x4e\x0e\xbf\xba\x3e\xca\x34\xdd\x40\xca\xbd\xc8\x3d\xfa\xa2\x7f\xcd\x59\x5c\xc4\x49\xa0\xab\x16\xc7\x80\xbc\xc4\x12\xc5\x09\xbe\x88\x08\x7d\x12\x32\x2d\xbd\x4c\x4d\x57\x42\xa7\x46\x34\x7c\xc5\x84\x06\xfe\xd8\xdc\xc2\xdd\x2d\x6c\xb7\x6f\xd3\xcf\x9f\x13\x64\x44\x61\x9a\x97\x64\xfc\x60\x5b\xf4\xb4\x7e\xd8\x6c\x6b\x66\x36\x08\xdd\x21\xd5\x5e\x1c\x67\x41\x93\x74\x65\x10\xba\xe6\xc6\x54\x2b\x1d\x0e\x5e\x6e\xb6\xf5\x2c\xd2\x8e\x43\x57\xad\x32\xc2\x9f\x9c\xb7\x64\x0b\x1b\xc9\x45\xca\xbc\xf1\x96\x52\xd2\xd3\xfe\xb3\x8d\x1b\x5a\x62\xab\x47\x41\xd1\x63\x82\x8a\x97\xf8\xca\xf8\x65\xcb\xc5\x0b\x94\x4d\x18\x2d\xda\xa4\xc4\x05\x63\x93\x0e\x2f\xb1\x36\xad\x1c\x76\xd1\xeb\x66\x2e\x49\xde\x61\xd5\x8d\x5a\x56\xa3\xae\xc7\x67\x83\x34\xd7\xf3\xbc\xdb\x3a\x9c\x4c\x40\xaa\xe8\x99\x8a\x64\x62\x55\xe6\x1b\x77\x3e\xa5\x7b\x2f\xdc\x90\xfa\xcd\x11\xb9\xab\x07\xbe\xa6\x6c\xf4\x12\x79\xed\x64\xdd\x39\x41\xc3\x22\x88\x17\xc7\x2a\x8b\x12\x03\x7a\x7e\x14\xa0\xa1\x2f\x8f\xd9\xbf\x3a\x61\x75\x87\x4e\xdb\x53\x95\xa4\xe0\x2c\x61\x4e\xe2\x62\x49\xde\xaa\xae\x92\x4b\xd5\xa2\xff\x8c\x1a\x4f\x07\xc5\x15\x54\x59\xbf\xff\x56\xe8\xec\x90\x0b\xbe\x00\x50\x61\x27\xbc\x1c\xd4\x81\x75\x14\x3a\xf0\xf3\x4a\xf5\xb9\x73\xd2\x80\xb9\xa5\xb6\x22\x20\x53\x9c\x6f\x58\xfe\x20\x0b\xc2\xc0\xe4\x79\xf9\xa6\xb9\x78\xdc\xb0\xe7\x42\xd3\x25\x93\x79\x22\x85\xef\xd0\x58\x42\xfe\xfe\x46\x94\x5e\x69\x4c\xcf\xbf\x30\x57\xd3\xd7\xc2\x70\x4b\x99\x2e\xf5\x39\x25\x41\xe4\x55\x1b\x29\xb7\x4e\x7c\x26\x2f\x60\x6a\x2d\xb0\xd8\x0a\x80\xcf\xca\x74\x0d\x3c\x3e\x3d\x4d\x19\xf3\x98\x57\xca\xed\xe8\xec\x73\xf3\xf8\xf4\x74\x0b\x1f\xf8\xa7\xaa\x52\x43\x9f\xef\xc1\x1d\xd7\x5b\x40\x6a\x96\x87\xca\x0a\xa6\xb9\xf3\x73\x30\x35\x9a\xc9\xa1\x00\x18\x85\x51\x3d\x06\xda\x89\x48\x83\xf5\x0d\x88\xb6\x8b\xba\x2b\xfe\x0e\x00\x00\xff\xff\x66\xc2\xf8\xdc\x27\x0b\x00\x00"

func bvlcReferenceCaffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceCaffenetYml,
		"BVLC-Reference-CaffeNet.yml",
	)
}

func bvlcReferenceCaffenetYml() (*asset, error) {
	bytes, err := bvlcReferenceCaffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-CaffeNet.yml", size: 2855, mode: os.FileMode(420), modTime: time.Unix(1502657391, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bvlcReferenceRcnnIlsvrc13Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\xc1\x8e\xdb\x36\x10\xbd\xeb\x2b\x06\xf0\xa5\x05\xd6\x52\xbd\x9b\xa6\x80\x0e\x45\x91\x05\x5a\x04\x48\x7d\xd8\x14\xb9\x14\x85\x31\xa2\x46\x16\x63\x8a\x24\x86\x23\x7b\xfd\xf7\xc5\x50\x92\xed\x6d\xb6\x49\xf6\xb0\x90\xc9\x37\xc3\xc7\x37\x6f\x46\xf2\x38\x50\x0d\xef\x3e\x7d\x78\x5c\x3f\x51\x47\x4c\xde\xd0\xfa\xe9\x71\xbb\x5d\xbf\xff\xf0\xf1\xd3\xd3\xe3\xe6\x01\x56\xa0\x20\x08\x1d\x9c\xc3\xc8\x30\x84\x96\x5c\xd1\x31\x0e\x74\x0a\x7c\xa8\x0b\x80\x29\xc9\x23\x76\x1d\xc1\x0a\x2e\x5b\xd0\x05\x06\xe9\x69\x0e\x01\x38\x12\x27\x1b\x7c\x0d\x9b\xf2\xa7\x17\xc0\x79\x03\x4c\xf0\xc2\x68\xbd\x14\xff\x81\x2e\x00\xeb\xbb\xc0\x03\xca\xf4\x0c\x89\x06\xf4\x62\xcd\x65\x7f\xda\x2d\x34\x0f\x5a\x4f\x5c\xc3\x0a\x2e\x3f\x12\x8c\x89\x5a\x90\x00\x91\x58\x91\x13\x31\x88\x4c\xad\x35\x9a\xb3\x80\xeb\xdf\x0a\x86\xd1\x89\x8d\x8e\x20\x3a\x14\xc5\x27\x30\xe8\xa1\x21\x48\x91\x8c\xed\x2c\xb5\x05\x00\x0e\xed\xdb\x37\x75\x8e\xdc\xc7\xb1\x06\x46\x1b\x39\x7c\x26\x23\x95\x41\x1e\xdc\xda\xa8\x2e\x75\x86\xad\x4d\x1c\x33\xd2\x7c\x13\xb9\xcf\xc8\x18\xcd\xdb\x37\x8e\xea\x6f\x06\xcd\xc0\x39\xec\xeb\x54\x6e\xb1\x2d\x25\xc3\x36\x4a\xd6\xfa\xd7\x02\xe0\xaf\x9e\x20\x8e\x4c\x73\x39\xad\x4f\xa2\x12\x4f\x92\x87\x2e\xd7\xf3\x69\xfd\xb8\xdd\xce\xe2\x69\x8d\x2f\x56\x69\x49\x28\x0b\x59\xe6\x4c\x36\xcd\xa0\x13\x26\x18\xb0\x25\x68\xce\x20\x8c\x3e\x45\xa7\x49\xfd\xfe\x26\xdd\xc7\x4f\x7f\x82\x71\x98\x92\x0a\xcb\x09\xac\x97\x00\x08\x9d\x59\xb3\xf1\xfe\xb2\x65\x26\x26\x0e\xcf\xc4\x77\x10\x39\x1c\x6d\x4b\x2d\xf4\xc4\x04\x98\x00\x95\x64\xb7\x96\x9e\xd6\xa9\x27\xd7\xcd\xd7\x98\x88\x05\xce\xbc\xf8\x9c\x8f\xbd\x90\x05\x7a\xc6\x41\xeb\x2c\x01\x12\x11\x58\x51\x6f\xe1\xe5\x22\xdb\xf2\x5d\x09\xbf\x07\x06\xa6\x44\xc8\xa6\x57\x81\x62\x48\x94\xee\x60\xc0\x03\xa9\xad\x16\x69\x42\xd7\x59\x63\xd1\xcd\x97\x8a\x68\x0e\xb8\x27\x40\xdf\x82\x0f\x02\xa2\x9a\xcc\xc7\xbd\xa2\x51\x36\x3f\xb5\x2a\xd3\x53\x48\x09\xfe\xb0\x9c\x7a\x6b\x0e\xf0\x1b\x37\xfb\xf9\xb9\xe0\xa5\x4f\x93\xba\xfb\xfa\x2b\x1b\x1b\xa3\x6a\x57\xc1\x89\x9a\x64\x85\xf4\x91\xc4\x94\x25\x4c\x85\x6e\x16\xcd\x97\x96\x5c\x43\x2f\x12\x53\x5d\x55\x7b\x2b\xfd\xd8\x94\x26\x0c\x95\x8e\x83\x2a\x7b\xa5\x12\x26\xaa\x06\x4c\x42\x5c\xe5\x98\x54\x35\x47\x67\x76\x97\x63\x77\x5a\x9d\x9d\x75\xe9\xc8\x66\xf3\xf0\x22\x23\xf2\xb3\x3d\x96\x81\xf7\x15\x36\xa9\xda\x3c\x6c\x36\xe5\xfd\xcf\xf7\x6f\x2e\x98\xba\xaa\x7c\x73\xb4\x74\x22\x2e\x3f\x8f\xf1\x2c\xc4\x19\x3d\x31\xb9\x65\xd1\xb8\xd0\x2c\x2c\x66\xf5\x52\x75\x35\x9b\x8d\x67\xdf\x14\x2b\x70\xd6\x90\xbf\xd6\x62\xba\xe3\xbc\x58\xc3\xe8\x99\x92\xb0\x35\x42\x6d\xb1\x02\xeb\xe3\x28\x59\xb4\x2b\x76\x5a\xd3\x6e\x5b\x41\x67\x39\xc9\x84\x02\x39\x47\xfa\x62\x9a\xad\xf3\x72\x0d\x76\xc0\x3d\x15\xd3\xc8\xb8\x69\xa7\x85\xc5\x4d\x9e\x0c\x7a\xd1\x71\x0a\x98\x8e\xb8\x66\x89\xa8\x73\x51\x88\x73\x7d\xf3\xd1\xd7\xa5\x79\x42\xb5\x76\x20\xaf\x13\x2f\xd5\xf0\xf7\xe6\x0e\x1e\xee\xe0\xfe\xfe\x97\xfc\xef\x9f\x22\x8c\x12\x47\x99\x6e\xa1\x07\xe4\x14\x8b\x3f\xf3\x5e\x01\x33\xf7\x8e\x50\x46\xa6\x0c\xc5\xd7\xd8\x4f\xf8\x2b\x81\xe2\x95\x0b\xcc\x18\x87\x4d\xd6\xe5\x86\xff\xac\xca\x6b\x77\x98\x4f\x4e\xbb\x91\x5d\x7d\xb1\x0c\xe3\xa9\x9c\xca\x3f\x26\x62\x9d\xdc\xe4\x25\x7b\x92\xd1\xae\x5f\x0e\xb3\xd9\x8e\xb3\x2d\x5a\x14\xac\x66\x1b\xde\xab\x37\x76\xe9\xec\x13\xc9\xee\x14\xb8\x4d\xa5\x3c\x4b\x91\x03\x54\xd3\x65\x7c\x2f\xad\xb7\x67\x8c\x7d\xee\xd1\x13\xd9\x7d\x2f\x49\x3b\x3d\x8c\x6c\x48\xb9\xe6\xdd\x5d\x44\xe9\xbf\x87\xe7\x8d\x6b\xbf\xbf\x6d\xaa\x96\xa2\x0b\xe7\x32\x72\x90\xa0\x54\x61\x61\x72\x73\x6e\x5d\x55\xad\x2b\x73\xea\xb2\x21\x3e\x90\xa3\xf3\xd1\xaa\x09\x72\xd7\x7c\x2d\xff\x14\xb5\x18\xd7\xa6\x9d\x4e\x31\x7b\x54\x03\xa0\x4b\xfa\xd2\xb6\x1d\x24\x92\x3b\xad\xa7\xcf\x45\x6d\x30\x91\xd6\x06\x6c\x02\x04\x7d\xd0\x71\xec\x61\x8e\xbc\x7d\x53\xde\xbc\x32\x35\xf2\xaa\xd7\xad\xa4\xd3\x42\x4e\xdf\x92\x0f\x42\xfa\xfc\x3f\x59\x3a\xeb\x28\x7f\x54\xa4\xc5\x86\x5f\x56\xe8\x64\xa5\xb7\x13\xd5\x85\x12\x8a\xb0\x6d\x46\x99\x06\x23\x3d\x0b\x23\x78\x92\xfc\x85\x71\xdd\x2b\x00\x0e\xd6\xb7\x35\xe8\x7c\x9e\x18\xeb\x6f\x3d\xc9\xd3\xc8\xe8\x2e\x31\x3f\x3c\x6e\xb7\x77\xf0\xa4\xff\xca\xb2\xfc\x51\x9b\x46\xe7\xb3\xf5\xfb\x9d\xba\x2d\x91\xd4\xf0\x5e\xdb\x76\x4b\xa2\xbd\x3f\xad\x5d\x3e\x32\xf2\xbc\x98\x03\x0a\x80\x01\xbd\xed\x28\xc9\x0e\x47\xe9\x03\xd7\x80\x4d\x3b\xba\xb6\xf8\x37\x00\x00\xff\xff\x1e\x06\xbb\x1b\x82\x09\x00\x00"

func bvlcReferenceRcnnIlsvrc13YmlBytes() ([]byte, error) {
	return bindataRead(
		_bvlcReferenceRcnnIlsvrc13Yml,
		"BVLC-Reference-RCNN-ILSVRC13.yml",
	)
}

func bvlcReferenceRcnnIlsvrc13Yml() (*asset, error) {
	bytes, err := bvlcReferenceRcnnIlsvrc13YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "BVLC-Reference-RCNN-ILSVRC13.yml", size: 2434, mode: os.FileMode(420), modTime: time.Unix(1502658235, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v10Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\x0c\x60\x14\xd8\x05\x1c\xc9\x4e\x9a\xa4\xd0\x61\x81\x6e\xf6\xd2\x8b\x0f\xed\x71\x51\x18\x63\x6a\x64\x71\xcb\xaf\x92\xc3\xd8\xe9\xaf\x5f\x0c\x25\x5b\x4e\x9b\x34\x3e\x18\x22\xe7\xcd\x07\x1f\xdf\x0c\x1d\x5a\x6a\xe1\xcb\xf7\x4c\xf4\x83\x36\xc4\xb0\x00\xd9\x02\xdf\xc3\x93\xcf\x11\xac\xef\xc8\x54\x7d\x44\x4b\x07\x1f\xbf\xb5\x15\xc0\xe8\xf2\x80\x7d\x4f\xb0\x80\xb3\x09\x7a\x1f\x81\x07\x9a\x5c\x00\x1e\x29\x26\xed\x5d\x0b\xeb\x7a\xf5\x0c\x38\x19\x40\x79\xc7\x11\xb5\xe3\xea\x27\xe8\x09\xa0\x5d\xef\xa3\x45\x1e\xbf\x21\x91\x45\xc7\x5a\x9d\xed\xa3\xb5\x92\x38\xa8\x1d\xc5\x16\x16\x70\x5e\x24\xc8\x89\x3a\x60\x0f\x81\xa2\x20\xc7\xc2\x20\x44\xea\xb4\x92\x98\x15\xcc\xbf\x05\xd8\x6c\x58\x07\x43\x10\x0c\xb2\xe0\x13\x28\x74\xb0\x23\x48\x81\x94\xee\x35\x75\x15\x00\xda\xee\xee\x7d\x5b\x3c\xf7\x21\xb7\x10\x51\x87\xe8\xff\x23\xc5\x8d\xc2\x68\xcd\x95\x12\x5e\xda\x02\xbb\x52\x21\x17\xa4\x7a\x13\xb9\x2f\xc8\x10\xd4\xdd\x7b\x43\xed\x9b\x4e\x13\x70\x72\xfb\x7d\x29\x97\xd8\x8e\x92\x8a\x3a\x70\xe1\xfa\xaf\x0a\x4e\x17\xef\x88\x01\xd5\xa0\xe9\x91\x12\x24\x6d\xb5\xc1\x08\x91\x52\x36\x9c\x84\xc1\x8f\x86\x8e\x1b\xe2\x25\x20\xc3\xed\xea\x08\x3d\x1d\x28\x42\x40\xb9\x52\x16\xaa\xd1\x75\xb0\x6e\x6e\x57\x2b\x1e\x8a\x06\x92\xfe\x41\xb5\xc4\xb7\x68\xcc\x48\x7c\x02\x8c\x22\x8e\x48\xd0\x13\x26\xbd\x33\x24\xa1\x3b\x0a\xc6\x3f\x81\x77\x30\x60\xec\x0e\x82\x39\x68\x1e\xc0\x68\xab\x99\x3a\xb0\x64\x7d\x7c\x5a\x42\xa4\xef\x59\x47\x02\x43\x29\x55\x00\xca\x5b\x9b\x9d\x56\xa3\x38\xba\x1c\xb5\xdb\x43\xa7\x13\x47\xbd\xcb\xe2\x57\x94\xa5\xdd\x7e\x59\x6a\x93\xb0\x92\x94\x62\xc9\x79\xc6\xc9\x4a\x19\x4d\x8e\x53\x3d\xd3\xb1\xb9\xa4\xe3\xf6\xbe\xbe\x7d\x57\x82\x7c\x58\xd5\x37\xef\x80\x7d\xb8\x5a\x97\xb5\x7c\xdd\x02\xaa\x1c\x51\x71\x39\xc2\x27\x8b\x7b\xf1\xae\xab\x48\x3d\x45\x72\x8a\x92\x88\x72\x5e\x15\x3d\x62\x10\xce\x1a\x38\xd0\x2e\x69\x26\xf9\x24\x56\x75\x0d\xe3\xfd\xec\xe4\x2c\x97\x9d\x74\x05\x03\x73\x48\x6d\xd3\xec\x35\x0f\x79\x57\x2b\x6f\x9b\x7f\x88\xc2\x17\x85\x86\x9a\xb9\xea\x67\x58\x8c\x47\xfd\x58\xfb\xb8\x6f\x70\x97\x9a\xf5\xdd\xea\xba\x5e\xdd\xdf\xdc\xad\xaa\x05\x18\xad\xc8\xa5\xd2\xe5\x73\x9e\x69\xb3\x85\xbf\x3f\x7e\xfa\x5c\x2d\x40\xbb\x90\xc7\xeb\x9f\x31\xe3\x9e\x08\x74\x01\xbd\x8e\x89\x47\x14\xf0\x53\xa0\x5f\x06\xc0\x55\xd9\x6e\x41\x0b\x2b\xd5\xd8\x65\x17\x0a\x3c\x65\xbf\x88\x53\x40\xcf\x44\x2a\x80\x31\xc5\x1c\x65\xd6\x9d\x70\x5b\x52\xcf\x5b\x53\x53\x77\xda\x92\x93\x21\x91\x5a\xf8\x77\xbd\x84\x9b\x25\x5c\x5f\xdf\x97\xbf\xaf\x13\xc4\x12\x3a\x31\x5e\x7f\x58\xc2\xe9\xef\x6b\xe5\x33\x87\xcc\xe3\x09\x25\x79\x09\x3f\x55\x3a\xda\x2a\x98\xce\xd5\x13\x72\x8e\x54\xa0\xf8\xd2\xc9\x46\xfc\x5c\x5c\xf5\xc2\xe1\x26\x8c\xc1\x5d\xe1\xec\xe2\x6c\x13\x63\x2f\x9d\x6f\xca\x9c\xb6\x39\x9a\xb6\x5c\x78\xdb\x34\x1d\x32\xd6\x9d\x35\xaa\xb6\xa6\xb1\x47\x47\xdc\x8c\x8d\xd7\x14\xea\x64\x9d\x9e\x5c\x22\xae\xf9\xc8\x55\x31\x09\x7f\xa7\xe9\x96\xa6\xf9\xb8\x8f\x18\x86\xa2\xef\x03\xe9\xfd\xc0\x49\x06\x81\xcf\x51\x91\xe4\x2e\xd6\x6d\x40\x1e\xda\xb3\xd0\x22\x1e\xea\x51\x98\x39\x51\x94\x01\x4c\x8e\x5f\xd5\x68\x63\x31\x31\xc5\x8b\x9d\xed\xe3\xba\x5e\x35\xe3\x20\xa8\x43\xf4\xec\xa5\x40\x38\xe5\xff\x29\xdb\x1b\x2d\x20\xd5\xbc\x96\x22\x9d\xa7\x5d\x59\xd7\x65\x40\x9e\xd4\xaa\xd3\x16\xa3\x1a\xf4\xa3\xdc\x2c\x9a\x24\x8f\x9b\xee\x21\xc9\xd8\xe3\x81\x5c\xb9\xad\x1d\x26\x12\xd2\x41\x27\x40\x90\x0f\xf6\x80\x0e\x26\xcf\xcb\x17\xe5\xe2\x69\x11\xcf\x99\xb8\x4b\x6e\xc7\x8d\x12\xbe\x23\xe7\x65\x20\x0d\xaf\x45\xe9\xb5\xa1\xf2\xf8\xa6\x93\xbe\x7e\xbd\x2a\x19\x9d\x7a\x2c\xf5\x54\x12\xf2\x34\xeb\x4a\xb7\xd0\x91\x23\x82\x23\x2e\x2f\xf1\x6c\xab\x00\xbe\x69\xd7\xb5\xf0\xb0\xd9\x4c\x15\xcb\x5a\x32\x39\xca\x11\xcd\xd9\xe7\x8f\x87\xcd\x66\x09\x9f\xe5\xaf\xae\xeb\x3f\xa5\x1b\xa6\x51\xbb\x15\x05\x26\xe2\xf6\x3c\x07\xa5\xe1\xc7\xbd\xf3\x63\x5c\x86\xc4\xe4\x50\x01\x58\x74\xba\xa7\xc4\x5b\xcc\x3c\xf8\xd8\x02\xee\xba\x6c\xba\xea\xff\x00\x00\x00\xff\xff\xbd\x6b\x22\x86\x98\x08\x00\x00"

func squeezenet_v10YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v10Yml,
		"SqueezeNet_v1.0.yml",
	)
}

func squeezenet_v10Yml() (*asset, error) {
	bytes, err := squeezenet_v10YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.0.yml", size: 2200, mode: os.FileMode(420), modTime: time.Unix(1502655794, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeezenet_v11Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4d\x8f\xdb\x36\x13\xbe\xeb\x57\x0c\x60\x20\x78\x5f\xc0\x16\x6d\xf9\x63\x6d\x01\x69\xd1\xa6\x97\x5c\xf6\x90\x1c\x8b\xc0\x18\x91\x23\x89\x5d\x89\x62\xc9\x91\xbd\xdb\x5f\x5f\x90\x92\x2d\x6d\x77\x93\xf8\x20\x90\x33\xcf\xcc\x3c\x9c\x0f\xd2\x89\xc1\x96\x72\xf8\xfa\x77\x4f\xf4\x0f\x3d\x12\xc3\x02\x82\x08\xba\x12\x5e\xba\xde\x41\xdb\x29\x6a\x92\xd2\x61\x4b\xd7\xce\x3d\xe5\x09\xc0\x60\xf2\x09\xcb\x92\x60\x01\x77\x15\x94\x9d\x03\xae\x69\x34\x01\xb8\x90\xf3\xba\x33\x39\x6c\xd2\xf5\x2b\xe0\xa8\x00\xd9\x19\x76\xa8\x0d\x27\x33\xe8\x06\x16\x77\x80\x36\x65\xe7\x5a\xe4\x61\x0d\x9e\x5a\x34\xac\xe5\x5d\x3f\x68\x93\xe0\x07\xb5\x21\x97\xc3\x02\xee\x1b\x0f\xbd\x27\x05\xdc\x81\x25\x17\x90\x03\x31\xb0\x8e\x94\x96\xc1\x67\x02\xd3\x6f\x01\x6d\xdf\xb0\xb6\x0d\x81\x6d\x90\x03\xde\x83\x44\x03\x05\x81\xb7\x24\x75\xa9\x49\x25\x00\xd8\xaa\xc3\x2e\x8f\x96\x95\xed\x73\x70\xa8\xad\xeb\xfe\x22\xc9\x42\xa2\x6b\x9b\x95\x0c\x79\xc9\x23\x6c\x25\x6d\x1f\x91\xf2\xa7\xc8\x2a\x22\xad\x95\x87\x5d\x43\xf9\x4f\x8d\x46\xe0\x68\xf6\x63\x2a\x73\xac\x22\x2f\x9d\xb6\x1c\x73\xfd\x4b\x02\xf3\xc2\x5f\x42\xee\x6b\xf4\x90\xa5\xbb\x67\x68\xc8\x7b\x90\x5d\x6b\x7b\x1e\xf2\xcf\x35\x9a\x80\x59\x2f\xe1\xaa\xb9\xee\x7a\x06\x8f\xd2\xe9\x52\x4b\x6d\x2a\x40\x29\x7b\x87\xf2\x25\x4d\x1c\x95\xe4\xc8\x48\xf2\xa1\x1c\xd3\x2e\x56\x02\x6d\x28\x8c\x80\x2b\x15\x5e\x33\x85\x25\xb1\x4c\x53\x18\x98\x15\xc1\xd5\xbc\x87\x56\x50\x33\x5b\x9f\x0b\x51\x69\xae\xfb\x22\x95\x5d\x2b\xfe\x20\xb2\x5f\x25\x36\x24\x26\xfa\xaf\xb0\xe8\x9e\xf5\x25\xed\x5c\x25\xb0\xf0\x62\x73\x58\x67\xe9\xfa\x61\x7b\x58\x7f\xcf\xa1\xd2\x17\xad\x34\x6b\x21\x9f\x86\xa4\x09\x76\x44\xa2\x45\xcf\xe4\x84\x45\xf9\x84\x15\x89\xa8\x89\xc4\x56\x8a\xc8\xfa\xc0\x60\xe5\x07\x06\x86\x78\xb5\x49\x37\xf7\x00\xb9\x10\xf2\xc9\x74\xd7\x86\x54\x45\x91\x89\x23\xdb\x89\x2b\x15\xa9\xad\xed\xaf\x4c\x6d\xe8\x32\xfa\x38\x81\x3e\x7c\xb8\x4a\xad\x3e\x8e\xc1\xf2\xfd\x69\xb7\xd9\x6d\x77\xc7\x62\x53\x28\x52\xc5\x3e\x59\x40\xa3\x25\x19\x1f\x47\x73\x4a\xd1\x28\xcc\xe1\xf7\xdf\x3e\x7f\x49\x16\xa0\x8d\xed\x39\xe6\x7a\xc2\x0c\xb2\xd0\x55\x0b\x28\xb5\xf3\x3c\xa0\x80\x5f\x2c\xbd\x99\xda\x55\x14\xe7\xa0\x5b\xac\x28\x19\x46\x63\xd6\x36\xb7\xe8\x33\x3f\x11\xf4\xaa\xb3\x02\x60\x08\x31\x79\xb1\x18\xe6\x9f\xc9\xc5\xb6\x88\xa1\x27\xd1\x38\x89\x4a\xb7\x64\xc2\x64\xfb\x1c\xfe\xdc\x2c\x61\xbb\x84\x2c\x7b\x88\x9f\x6f\x23\xa4\x25\x34\x41\x99\x1d\x97\x70\xfb\x7c\x4b\xba\x9e\x6d\xcf\xc3\x09\x43\xf0\xe8\x7e\x64\x3a\xe8\x12\x18\xcf\x55\x12\x72\xef\x28\x42\xf1\xbd\x93\x0d\xf8\x89\x5c\xf2\xce\xe1\x46\x4c\x83\x45\xcc\xd9\xec\x6c\x63\xc6\xde\x3b\xdf\x18\xd9\x9f\x7b\xd7\xe4\xb7\x2e\x51\xc8\x98\xaa\xb6\x91\x69\xdb\x88\xf6\xd9\x10\x8b\x58\x09\x2f\x62\xea\xc2\xde\xbf\x18\x4f\x9c\xf2\x33\x27\x51\x15\xf2\x77\xbb\x92\xfc\x78\xa9\x55\x0e\x6d\x0d\x68\x14\x5c\x49\x57\x35\x7b\x70\xe4\xbb\xde\x49\x0a\xb1\xa3\xf6\x6c\x91\xeb\x7c\xd6\xfe\x9e\xd3\x61\x06\x7a\x4f\x2e\x5c\x9b\x64\x38\x8e\x83\x6c\xf4\xe9\x24\x4e\xfb\x07\x89\x72\x53\x1e\x77\x5b\xda\xae\x65\x41\x27\xca\xe4\x61\x9d\x6d\xd7\xa7\x22\x23\xcc\x84\xc3\xab\x28\x8a\xcd\x41\xee\x1f\x24\xed\x8f\xd9\xf1\x41\xae\x4f\x87\x9d\xdc\x67\xc7\xed\xee\x70\x2a\xe5\x56\xed\xb2\x63\x99\xe1\x51\x29\x31\xcd\xc9\xf9\x32\x0c\xca\x48\xf4\x0d\xad\x1f\x8e\x79\x0c\x3a\xce\xe5\x24\x8d\x2e\xff\x1b\x22\x9d\xe6\x35\x01\xd0\xfe\x8c\x4e\xd6\xfa\x12\x5a\x00\x1b\x1f\x9e\x2e\x5d\x82\x27\x5e\x86\x8a\x9a\x58\xd6\x02\x3d\x85\xea\x80\xf6\x80\x10\x16\xdc\x01\x1a\x18\x2d\xe7\xef\xc5\xec\xe1\x08\x96\x53\x86\xe7\x45\x18\x04\xd1\xbd\x22\xd3\x31\x85\xf5\x77\xbc\x94\xba\xa1\xf8\xb4\xfa\x5b\x23\xbe\xad\x69\xb8\x78\xf5\x40\xf5\x46\x09\x99\x9d\x2e\x7a\x1e\x6e\x5b\x7a\x66\x87\x60\x88\xe3\x3b\x3b\xe9\x12\x80\x27\x6d\x54\x0e\x9f\x1e\x1f\x47\xc6\x61\x1f\x22\x19\xea\x1d\x36\x77\x9b\xff\x7d\x7a\x7c\x5c\xc2\x97\xf0\x49\xd3\xf4\xff\x61\x6c\xc2\x13\xad\x4d\x75\x0e\xad\xea\x89\x73\xf8\x1c\x3a\x73\xf8\xaf\x30\xca\xee\x4f\x6d\xbc\x4d\x46\x83\x04\xa0\x45\xa3\x4b\xf2\x7c\xc6\x9e\xeb\xce\xe5\x80\x85\xea\x1b\x95\xfc\x1b\x00\x00\xff\xff\x7b\xd7\xb4\x5d\x77\x08\x00\x00"

func squeezenet_v11YmlBytes() ([]byte, error) {
	return bindataRead(
		_squeezenet_v11Yml,
		"SqueezeNet_v1.1.yml",
	)
}

func squeezenet_v11Yml() (*asset, error) {
	bytes, err := squeezenet_v11YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SqueezeNet_v1.1.yml", size: 2167, mode: os.FileMode(420), modTime: time.Unix(1502655805, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg_ilsvrc_16Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4b\x8f\xdb\x36\x10\xbe\xeb\x57\x0c\xe0\x4b\x02\x58\x92\xf5\x58\x3f\x74\xe8\x21\x3e\x18\x01\xd2\x3d\x6c\x8b\x05\xda\x22\x30\x46\xe4\x48\x66\x57\x22\x09\x92\xb2\xd7\x97\xfe\xf6\x82\x94\xfc\xd8\x64\x9b\xd4\x07\x81\x9c\xf9\xe6\xfd\xa0\x25\xf6\x54\xc1\xf3\x6e\x17\x7f\xfe\xf2\xdb\xf3\xd3\x36\xce\x96\x30\x03\x4f\x05\xd5\xc0\x59\x0d\x06\x7a\xc5\xa9\x8b\x1a\x83\x3d\x9d\x94\x79\xa9\x22\x80\x51\x6a\x8b\x4d\x43\x30\x83\x2b\x0b\x1a\x65\xc0\x1d\x68\x12\x01\x38\x92\xb1\x42\xc9\x0a\xb2\x64\xf1\x06\x38\x31\x80\x29\xe9\x0c\x0a\xe9\xa2\x6f\xa0\x17\x80\x90\x8d\x32\x3d\xba\xf1\x0c\x96\x7a\x94\x4e\xb0\x2b\x7f\xe4\x46\x5e\x0f\x0a\x49\xa6\x82\x19\x5c\x2f\x16\x06\x4b\x1c\x9c\x02\x4d\xc6\x23\x47\xc7\x40\x1b\xe2\x82\x79\x9d\x11\xdc\x7e\x33\xe8\x87\xce\x09\xdd\x11\xe8\x0e\x9d\xc7\x5b\x60\x28\xa1\x26\xb0\x9a\x98\x68\x04\xf1\x08\x00\x7b\xbe\x2c\xab\x20\xd9\xea\xa1\x02\x83\x42\x1b\xf5\x37\x31\x97\x32\x34\x7d\x17\x33\x9f\x97\x2a\xc0\x62\xa6\x87\x80\x64\x3f\x45\xb6\x01\xa9\x35\x5b\x96\x1d\x55\x3f\x15\x9a\x80\x93\xd8\x8f\x5d\xb9\xc7\x72\xb2\xcc\x08\xed\x42\xae\x7f\x89\x00\x7e\xbf\xd4\x0b\x84\x05\x94\x20\x7a\x6d\xd4\x91\xf8\x35\xc5\xaa\x09\x35\xcd\x96\x71\x87\x67\x9a\xfa\x61\xcc\x6c\x7d\x0e\xac\xe7\xdd\x0e\x1c\x61\xef\x2b\xe4\xef\x53\x2b\xe5\x8b\xac\x04\xa6\x7a\x4d\x4e\x78\x7b\x49\x64\xa8\x21\x43\x92\x91\xf5\x75\xba\xdd\x42\x89\x50\xfb\x8a\xa5\x70\xa2\xda\x0a\x47\xfe\x48\x8e\x25\x09\x8c\x2e\xd7\x42\xb6\x6f\x9a\x2b\x86\x83\x73\xda\x56\x69\xda\x0a\xeb\x92\x56\xb8\xc3\x50\x27\x4c\xf5\xe9\x8b\x15\xbd\x92\x67\x94\x69\x9e\x65\xeb\x62\x43\xab\xd5\xa2\x59\xd5\x0f\xc5\x9a\x72\xbe\xfe\x46\xf4\x2a\xf5\xe9\xf9\xcb\x36\x0d\x09\x4b\x4f\xe2\x45\xa4\xbf\x7a\x3b\xf1\x9f\x4a\xcd\x82\x45\x1b\xfb\x90\xe3\xfa\x1c\xbb\x03\xc5\xc7\xb6\x8d\x7d\xc8\xb1\x90\xb1\xe8\xec\xd1\xb0\x10\xee\x1b\xdd\x68\x5e\xc5\x31\x51\xa6\x4d\xb1\xb6\x69\x56\x2e\x36\x49\xf6\xf0\xb0\x8c\x66\xd0\x09\x46\xd2\xd2\x25\xb5\x63\x44\x13\xb1\x82\xed\x16\x3e\xfd\x01\x65\xb2\x80\x0f\x4c\xf5\x3d\x19\x26\x30\x24\x3c\x54\xa8\xeb\xd4\x89\xf8\xc7\x68\x06\x42\xea\xc1\x85\xdc\xdd\x94\x8c\x34\xdf\x3e\x33\x68\x84\xb1\x6e\x44\x81\x3b\x6b\xfa\x6e\x3c\xe3\x40\xae\x40\xf4\xd8\x52\x34\xce\xc0\x5d\x7f\x5c\xdc\xbb\xd3\x13\x40\x6f\x5a\xc8\x03\x46\x13\x37\x2d\x1a\xfd\xa0\x3b\x32\xa1\xcc\xc1\xf4\x8d\x34\x8d\x1c\x17\x3d\x49\xdf\x5f\xb6\x82\xbf\xb2\x39\x14\x73\xc8\xf3\x32\x7c\xbe\x46\x97\x81\x14\x12\x9e\x76\x9f\xa6\x6b\x4f\x28\x3d\x36\x2f\x92\xe5\x7a\x0e\x59\xb6\x4c\x56\xab\xcd\x1c\xb2\x45\x91\x6c\x8a\xcd\xd7\x48\x0d\x4e\x0f\x6e\x8c\xdd\xbb\x15\x0c\x4f\x31\x8c\xbc\x08\xa6\x88\x1b\x42\x37\x18\x0a\x50\x7c\x2f\xe6\x11\x7f\x73\x3b\x7a\x27\xec\x09\xd3\x61\x1d\xb2\x79\x17\xf5\x94\xcb\xf7\x22\x9f\x2c\xdb\xfd\x60\xba\xea\xbd\x0e\x1e\x2c\x19\xbf\xc1\x48\xba\xd0\x96\x28\x95\x3c\xf7\x6a\xb0\x29\xae\xf3\xb2\xc6\xa2\x28\x6a\xdc\xe4\xf9\xa6\x40\x5a\x2f\x38\x5f\xf3\xe5\x72\xc5\x8b\x4d\x96\xa5\x06\x4f\x69\x9d\xf3\x8c\xe7\x0c\x39\x16\x2b\xc2\xac\x5c\x67\x6b\xac\x57\xac\xa0\x3c\xdf\xb0\x72\x53\xd7\x79\xce\xca\x87\xe2\x21\x98\x6c\x44\x47\x59\xe2\x5e\x5d\x14\x5a\xc2\x57\xeb\xb2\xe9\xec\x34\xe7\xad\x41\x7d\x00\x94\x1c\x4e\x24\xda\x83\xb3\x60\xc8\xaa\xc1\x30\xf2\xf1\x04\xee\x5e\xa3\x3b\xfc\xaf\x58\x7e\x3c\x98\xc1\x7f\x4e\x7c\x53\x2c\x8b\x9a\x6f\x0a\x62\x0b\xb6\x5a\x2d\xb2\xa2\x6c\x4a\x2a\xd6\x2b\xbe\x46\xff\xcb\xcb\xc5\x8a\x51\xfa\xbc\xdb\xed\xc7\x45\xb3\xcf\x96\xfb\xb0\x9a\xec\x9e\x93\xee\xd4\x39\xd1\x46\x39\xe5\xc3\x82\x8b\xd7\x77\x3e\x56\x69\x7a\x3a\x9d\x12\xa3\x6a\xe5\x6c\xa2\x5e\x13\x64\xc9\xf0\x92\xfe\x73\x6c\xdb\xd4\xaa\xc6\x9d\xd0\x50\x7a\x24\x73\xde\x73\x22\x3d\x6d\x84\xf7\xac\x25\x81\x75\x19\x26\x61\xf7\x68\xd8\x41\x1c\x7d\x7b\x61\x67\xfd\xcb\x28\x1a\xb0\xe4\xe6\xbe\x5b\xc6\xcd\x58\xa3\x25\x5f\xf9\x30\xc9\xe0\x0f\x4e\xf9\xa5\x3b\x49\xde\x3f\x47\x77\xef\x92\x97\xbc\x65\xfa\xbe\x18\x23\x21\xa8\xe7\x24\x95\x23\x7f\xfe\x0f\x2d\xbe\xd8\xe1\xe5\xb6\x97\x26\xff\xbe\xb6\x27\xe1\x0e\xd3\x12\xbf\xb8\x84\xce\x19\x51\x0f\x6e\xdc\xd9\xf4\xea\x0c\x82\x24\x17\x9e\xf1\x1b\x2f\x02\x78\x11\x92\x57\xb0\x7d\x7c\x9c\x3c\xf6\x77\x6f\x49\xd2\x60\xb0\xbb\xca\x7c\xd8\x3e\x3e\xce\xe1\xc9\x7f\x92\x24\xf9\xe8\x47\xd2\xff\x03\x10\xb2\xdd\x73\x74\x68\xc9\x55\xf0\xd9\xaf\x92\x47\x72\x7e\x1f\x8d\xb4\xeb\x4b\x1e\x76\xd8\x24\x10\x01\xf4\x28\x45\x43\xd6\xed\x71\x70\x07\x65\x2a\xc0\x9a\x0f\x1d\x8f\xfe\x0d\x00\x00\xff\xff\xe0\xa7\x62\x73\xd8\x08\x00\x00"

func vgg_ilsvrc_16YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg_ilsvrc_16Yml,
		"VGG_ILSVRC_16.yml",
	)
}

func vgg_ilsvrc_16Yml() (*asset, error) {
	bytes, err := vgg_ilsvrc_16YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "VGG_ILSVRC_16.yml", size: 2264, mode: os.FileMode(420), modTime: time.Unix(1502658624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg_ilsvrc_19Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x49\x8f\xdb\xb8\x12\xbe\xeb\x57\x14\xe0\x4b\x02\x58\x92\xb5\x58\xb6\x74\x78\x87\xf8\x60\x04\xc8\xeb\x43\xde\x43\x03\x33\x83\xc0\x28\x91\x25\x99\xd3\x12\x29\x90\x94\xdd\xbe\xcc\x6f\x1f\x90\x92\x97\x4e\x7a\x92\xf1\xc1\x10\xab\xbe\xda\x37\x89\x3d\x55\xf0\xbc\xdf\x87\x9f\xbf\xfc\xef\xf9\xeb\x2e\x4c\x4a\x58\x80\xa3\x82\x6a\xe0\xa2\x46\x0d\xbd\xe2\xd4\x05\x8d\xc6\x9e\xce\x4a\xbf\x54\x01\xc0\x24\xb5\xc3\xa6\x21\x58\xc0\x8d\x05\x8d\xd2\x60\x8f\x34\x8b\x00\x9c\x48\x1b\xa1\x64\x05\x49\xb4\x7a\x03\x9c\x19\xc0\x94\xb4\x1a\x85\xb4\xc1\x77\xd0\x2b\x40\xc8\x46\xe9\x1e\xed\xf4\x0d\x86\x7a\x94\x56\xb0\x1b\x7f\xe2\x06\x4e\x0f\x0a\x49\xba\x82\x05\xdc\x1e\x06\x46\x43\x1c\xac\x82\x81\xb4\x43\x4e\x8e\xc1\xa0\x89\x0b\xe6\x74\x06\x70\xff\x2d\xa0\x1f\x3b\x2b\x86\x8e\x60\xe8\xd0\x3a\xbc\x01\x86\x12\x6a\x02\x33\x10\x13\x8d\x20\x1e\x00\x60\xcf\x8b\xbc\xf2\x92\xed\x30\x56\xa0\x51\x0c\x5a\xfd\x49\xcc\xc6\x0c\x75\xdf\x85\xcc\xe5\xa5\xf2\xb0\x90\x0d\xa3\x47\xb2\x5f\x22\x5b\x8f\x1c\x06\x56\xe4\x1d\x55\xbf\x14\x9a\x81\xb3\xd8\xcf\x5d\x79\xc4\x72\x32\x4c\x8b\xc1\xfa\x5c\xff\x27\x00\xf8\xff\xb5\x5e\x20\x0c\xa0\x04\xd1\x0f\x5a\x9d\x88\xdf\x52\xac\x1a\x5f\xd3\xa4\x0c\x3b\xbc\xd0\xdc\x0f\x53\x66\xeb\x8b\x67\x3d\xef\xf7\x60\x09\x7b\x57\x21\xf7\x9e\x5b\x29\x5d\x25\x39\x30\xd5\x0f\x64\x85\xb3\x17\x05\x9a\x1a\xd2\x24\x19\x19\x57\xa7\xfb\xcb\x97\x08\x07\x57\xb1\x18\xce\x54\x1b\x61\xc9\x7d\x92\x65\x51\x04\x93\xcb\xb5\x90\xed\x9b\xe6\x0a\xe1\x68\xed\x60\xaa\x38\x6e\x85\xb1\x51\x2b\xec\x71\xac\x23\xa6\xfa\xf8\xc5\x88\x5e\xc9\x0b\xca\x38\xdb\x6c\xd7\x49\x91\x36\xe5\x9a\xf1\x94\xaf\x1b\xa2\xcd\xe6\x3b\xd1\x9b\xd4\xa7\xe7\x2f\xbb\xd8\x27\x2c\x3e\x8b\x17\x11\xff\xd7\xd9\x09\x7f\x57\x6a\xe1\x2d\x9a\xd0\x85\x1c\xd6\x97\xd0\x1e\x29\x3c\xb5\x6d\xe8\x42\x0e\x85\x0c\x45\x67\x4e\x9a\xf9\x70\xdf\xe8\x46\xfd\x2a\x4e\x91\xd2\x6d\x8c\xb5\x89\x93\x7c\x55\x46\xc9\x7a\x5d\x04\x0b\xe8\x04\x23\x69\xe8\x9a\xda\x29\xa2\x99\x58\xc1\x6e\x07\x9f\x7e\x83\x3c\x5a\xc1\x07\xa6\xfa\x9e\x34\x13\xe8\x13\xee\x2b\xd4\x75\xea\x4c\xfc\x63\xb0\x00\x21\x87\xd1\xfa\xdc\xdd\x95\x4c\x34\xd7\x3e\x0b\x68\x84\x36\x76\x42\x81\xbd\x0c\xf4\xc3\x78\x86\x9e\x5c\x81\xe8\xb1\xa5\x60\x9a\x81\x87\xfe\xb8\xba\xf7\xa0\xc7\x83\xde\xb4\x90\x03\x4c\x26\xee\x5a\x06\x74\x83\x6e\x49\xfb\x32\x7b\xd3\x77\xd2\x3c\x72\x5c\xf4\x24\x5d\x7f\x99\x0a\xfe\x48\x96\x90\x2d\x21\x4d\x73\xff\xf7\x6d\x86\xf4\x84\xd2\x31\xd3\x2c\x2a\xb6\x4b\x48\x92\x22\xda\x6c\xca\x25\x24\xab\x2c\x2a\xb3\xf2\x5b\xa0\x46\x3b\x8c\x76\x0a\xd6\xf9\xe1\x2d\xcd\x4e\x4f\xbc\x00\xe6\x10\x1b\x42\x3b\x6a\xf2\x50\x7c\x2f\xc8\x09\x7f\xf7\x33\x78\x27\xce\x19\xd3\x61\xed\xd3\xf7\x10\xe6\x9c\xbc\xf7\x42\x9d\x2d\x9b\xc3\xa8\xbb\xea\xbd\x96\x1d\x0d\x69\xb7\xb2\x48\x5a\xdf\x87\x28\x95\xbc\xf4\x6a\x34\x31\x6e\xd3\xbc\xc6\x2c\xcb\x6a\x2c\xd3\xb4\xcc\x90\xb6\x2b\xce\xb7\xbc\x28\x36\x3c\x2b\x93\x24\xd6\x78\x8e\xeb\x94\x27\x3c\x65\xc8\x31\xdb\x10\x26\xf9\x36\xd9\x62\xbd\x61\x19\xa5\x69\xc9\xf2\xb2\xae\xd3\x94\xe5\xeb\x6c\xed\x4d\x36\xa2\xa3\x24\xb2\xaf\x36\xf0\x3d\xe0\xca\x73\x5d\x6d\x66\x1e\xec\x56\xe3\x70\x04\x94\x1c\xce\x24\xda\xa3\x35\xa0\xc9\xa8\x51\x33\x72\xf1\x78\xee\x61\x40\x7b\xfc\x57\xb1\xfc\x7c\x12\xbd\xff\x4d\x9e\x11\x51\xc3\xb6\x45\xc9\x8b\xbc\xa8\xf3\xbc\x44\x2c\x18\x15\x45\xb3\xdd\xd4\x4d\xb9\xdd\x60\xc2\xca\x7a\x1d\x3f\xef\xf7\x87\x69\xb3\x1c\x92\xf2\xe0\x77\x91\x39\x70\x1a\x3a\x75\x89\x06\xad\xac\x72\x61\xc1\xd5\xeb\x07\x1f\xab\x38\x3e\x9f\xcf\x91\x56\xb5\xb2\x26\x52\xaf\x11\xb2\x68\x7c\x89\xff\x3a\xb5\x6d\x6c\x54\x63\xcf\xa8\x29\x3e\x91\xbe\x1c\x38\xd1\x30\xaf\x80\xf7\xac\x45\x9e\x75\x9d\x1e\x61\x0e\xa8\xd9\x51\x9c\x5c\x7b\x61\x67\xdc\x29\x14\x0d\x18\xb2\x4b\xd7\x2d\xd3\x2a\xac\xd1\x90\xab\xbc\x1f\x5d\x70\x1f\x56\xb9\x2d\x3b\x4b\x3e\xde\x9f\x87\x43\xe4\x24\xef\x99\x7e\x2c\xc6\x44\xf0\xea\x39\x49\x65\xc9\x7d\xff\x83\x16\x57\x6c\x7f\xaa\xcd\xb5\xc9\x7f\xac\xed\x59\xd8\xe3\xbc\xb5\xaf\x2e\xa1\xb5\x5a\xd4\xa3\x9d\x96\x34\xbd\x5a\x8d\x20\xc9\xfa\xbb\x7d\xe7\x05\x00\x2f\x42\xf2\x0a\x76\x4f\x4f\xb3\xc7\xee\xed\x2c\x49\x1a\x35\x76\x37\x99\x0f\xbb\xa7\xa7\x25\x7c\x75\x7f\x51\x14\x7d\x74\x23\xe9\x4e\xbe\x90\xed\x81\xa3\x45\x43\xb6\x82\xcf\x6e\x77\x3c\x91\x75\x0b\x68\xa2\xdd\x4e\xb7\x5f\x5a\xb3\x40\x00\xd0\xa3\x14\x0d\x19\x7b\xc0\xd1\x1e\x95\xae\x00\x6b\x3e\x76\x3c\xf8\x3b\x00\x00\xff\xff\x75\x32\x91\xb7\xc9\x08\x00\x00"

func vgg_ilsvrc_19YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg_ilsvrc_19Yml,
		"VGG_ILSVRC_19.yml",
	)
}

func vgg_ilsvrc_19Yml() (*asset, error) {
	bytes, err := vgg_ilsvrc_19YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "VGG_ILSVRC_19.yml", size: 2249, mode: os.FileMode(420), modTime: time.Unix(1502658648, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vocFcn16sYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8f\xdb\x36\x10\xbe\xeb\x57\x0c\xe0\x4b\x0b\xd8\x92\x25\x7b\x65\x5b\x87\x02\x81\x8b\x00\x45\x03\x27\x48\x5f\x87\x22\x10\x46\xe4\xc8\x62\x23\x91\x02\x39\xb2\xd7\xff\xbe\x20\x25\x3f\xb6\xd9\x74\x7d\x30\x28\xce\x37\xcf\x6f\x66\xa8\xb1\xa3\x02\xde\xef\x0f\x8b\x34\x77\xf0\xe9\xdd\x6f\xfb\x77\x1f\x60\x06\xfe\x1a\x4c\x0d\x17\x33\x58\xe8\x8c\xa4\x36\xaa\x2d\x76\x74\x36\xf6\x6b\x11\x01\x8c\x6a\x7b\xac\x6b\x82\x19\xdc\x44\x50\x1b\x0b\xdc\xd0\xa4\x02\x70\x22\xeb\x94\xd1\x05\xa4\xf1\xf2\x05\x70\x12\x80\x30\x9a\x2d\x2a\xcd\xd1\x7f\xa0\x57\x80\xd2\xb5\xb1\x1d\xf2\x78\x06\x47\x1d\x6a\x56\xe2\x26\x1f\xa5\x91\xb7\x83\x4a\x93\x2d\x60\x06\xb7\x0f\x07\x83\x23\x09\x6c\xa0\x27\xeb\x91\x63\x60\xd0\x5b\x92\x4a\x78\x9b\x11\xdc\x7f\x33\xe8\x86\x96\x55\xdf\x12\xf4\x2d\xb2\xc7\x3b\x10\xa8\xa1\x22\x70\x3d\x09\x55\x2b\x92\x11\x00\x76\x32\x5f\x17\x41\xf3\xd8\x0f\x05\x58\x54\xbd\x35\xff\x90\xe0\x44\xa0\xed\xda\x85\xf0\x75\x29\x02\x6c\x21\xfa\x21\x20\xc5\x9b\xc8\x63\x40\xf6\xbd\xc8\xd7\x2d\x15\x6f\x2a\x4d\xc0\x49\xed\xff\x43\x79\xc4\x4a\x72\xc2\xaa\x9e\x43\xad\x7f\x8a\x00\x7e\xff\xf8\xf3\xc7\xc8\x52\x4d\x96\xb4\x20\xe7\x0b\x78\xff\x0a\xb5\xc3\xde\x97\x32\x81\x33\x55\x4e\x31\xf9\x23\xb1\x88\x63\x18\x6d\x55\x4a\x1f\x5f\xb0\xbe\x80\x86\xb9\x77\x45\x92\xa0\x7d\x56\xa7\xd8\xd8\x63\x82\x95\x4b\xd2\x7c\xf9\x14\x2f\xf3\x2c\x4d\x6f\xa0\x22\x49\xce\xe7\x73\x2c\x4e\x8b\xda\x0c\x5a\x06\x9e\x03\xde\xf4\xa4\x51\x08\x72\x2e\xf1\x74\x92\xe6\x52\x9c\x7a\x5b\x66\xcb\xf4\x29\x69\xb8\x6b\x93\x0f\x46\x1f\xcb\xf7\x43\xdb\x5e\xca\xbd\xd1\x27\xd3\x0e\x5e\x19\xdb\xf2\x40\xec\x7b\xcc\x05\x6c\xb9\xff\xf3\xd3\xe7\x32\xa4\x10\x7b\xb5\x17\xe1\x1d\x15\x37\x43\x15\x0b\xd3\x25\xae\xa1\xb6\xc1\x8e\x6c\x52\x0b\x1d\x57\x64\xbf\x52\x4b\x97\x93\x72\xd7\x80\xd8\x12\x25\x1d\x3a\x26\x9b\x9c\x8c\x58\xd4\x42\xaf\x32\x17\xcd\xa0\x55\x82\xb4\x0b\xe3\x72\x2f\xc2\x74\x59\xc0\x1f\x87\x5f\x0f\x1f\xff\x3a\x44\x33\x50\xba\x1f\x38\x14\xf4\x0e\x1b\xef\x3c\xd9\x33\xa8\x95\x75\x3c\xa2\x80\x2f\x3d\x7d\x33\x4c\x8b\x70\x5d\x80\xea\xf0\x48\xd1\xd8\xb1\x0f\x6c\x5e\x03\x78\xb0\x13\x40\x2f\x08\xf7\x80\xd1\xc5\xdd\x4a\x8f\x7e\x2c\x99\x6c\xe0\x3e\xb8\xbe\x5f\x4d\x03\x22\x55\x47\xda\xd7\xc2\x15\xf0\x77\x3a\x87\xd5\x1c\x9e\x96\xcb\xf0\xf7\x65\x82\x74\x84\xda\x0b\xb3\x2c\xce\x37\xdb\x5d\x36\x87\x34\xcd\xe3\x3c\xdf\x6e\x36\x73\x48\x97\xeb\x78\xb9\xcc\x77\xbb\x2f\x91\x19\xb8\x1f\x78\xcc\xd9\x87\x13\x1c\x4e\xb1\x8f\xb2\x08\xa6\x4c\x6b\x42\x1e\x2c\x05\x28\xbe\x96\xeb\x88\xbf\x87\x1b\xbd\x92\xee\x84\x69\xb1\x0a\x55\x7c\xc8\x76\xaa\xe1\x6b\x19\x4f\x9e\x5d\x39\xd8\xb6\x78\xe8\x17\xc7\xf1\xd8\x34\x83\x23\x3b\x35\x66\xe8\x1f\xd4\x46\x5f\x3a\x33\xb8\x04\xb7\xd9\xba\xc2\xd5\x6a\x55\xe1\x2e\xcb\x76\x2b\xa4\xed\x52\xca\xad\xcc\xf3\x8d\x5c\xed\xd2\x34\xb1\x78\x4e\xaa\x4c\xa6\x32\x13\x28\x71\xb5\x21\x4c\xd7\xdb\x74\x8b\xd5\x46\xac\x28\xcb\x76\x62\xbd\xab\xaa\x2c\x13\xeb\xa7\xd5\x53\x70\x59\xab\x96\xd2\x98\x9f\x39\x0a\xad\xe0\x59\xba\xee\x23\x37\x6d\xb4\xa3\xc5\xbe\x01\xd4\x12\xce\xa4\x8e\x0d\x3b\xb0\xe4\xcc\x60\x05\xf9\x7c\x82\xb4\xec\x91\x9b\x7b\x2e\x16\xcf\xdf\x49\xe5\xcd\x51\x78\x39\x05\x69\xee\x92\x13\xb6\x71\x6f\x0d\x1b\x1f\x24\x5c\x63\x78\xf0\x58\x24\x89\x6c\xe3\xb0\x8d\x5e\xb3\x38\x9a\x59\x34\x84\xa7\xcb\xa2\x47\x27\x70\x02\x5f\x7b\x5f\xb9\x12\xad\x68\xd4\xc9\x77\x05\xb6\xce\x3f\x3b\xaa\x06\x47\x3c\xf7\x24\xeb\xc0\x74\x85\x8e\x3c\x61\xa0\x1c\x20\xf8\x03\x1b\x40\x0d\x93\xe6\xe3\xae\x7f\x58\xfa\x5e\xf3\x5e\xa0\xc7\x1a\x8e\x17\xc1\xbc\x24\x6d\x98\xfc\xf9\x3b\x56\x3c\x47\xe1\x59\x74\xd7\xde\xfc\x96\x92\xb3\xe2\x46\x8d\xa1\x5e\x43\x42\x66\xab\xaa\x81\xc7\xbd\x4b\xcf\x6c\x11\xf4\xb8\xbf\xe0\x2e\x8b\x00\xbe\x2a\x2d\x0b\xd8\x1f\x0e\x53\xc4\xfe\xdb\x7b\xd2\x34\x58\x6c\x6f\x3a\x3f\xec\x0f\x87\x39\x7c\xf6\x7f\x71\x1c\xff\xe8\x27\xc9\x3f\xaf\x4a\x1f\x4b\x89\x8c\x8e\xb8\x80\x5f\xfc\xe4\x1f\x88\xfd\xfa\x18\xef\x6e\xcf\x64\x58\x39\x93\x42\x04\xd0\xa1\x56\x35\x39\x2e\x71\xe0\xc6\xd8\x02\xb0\x92\x43\x2b\xa3\x46\x49\x49\x7e\xbc\xec\x40\xd1\xbf\x01\x00\x00\xff\xff\x87\x9d\x34\x36\x43\x08\x00\x00"

func vocFcn16sYmlBytes() ([]byte, error) {
	return bindataRead(
		_vocFcn16sYml,
		"voc-fcn16s.yml",
	)
}

func vocFcn16sYml() (*asset, error) {
	bytes, err := vocFcn16sYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voc-fcn16s.yml", size: 2115, mode: os.FileMode(420), modTime: time.Unix(1502315579, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vocFcn32sYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x5b\xaf\xdb\x36\x0c\x7e\xf7\xaf\x20\x90\x97\x0d\x38\xb1\x63\x27\x27\x17\x3f\x0c\x28\x32\x14\x18\x56\xa4\x45\x77\x7b\x18\x0a\x83\x96\xe8\x58\xab\x2d\x09\x12\x9d\x34\xff\x7e\x90\xec\x5c\xce\x7a\xba\xe6\x21\x90\xc5\x8f\xd7\x8f\xa4\x34\xf6\x54\xc2\xdb\xfd\x61\xbe\x2c\x3c\x7c\x78\xf3\xdb\xfe\xcd\x3b\x98\x41\xb8\x06\xd3\xc0\xc5\x0c\x0e\x7a\x23\xa9\x4b\x1a\x87\x3d\x9d\x8d\xfb\x5c\x26\x00\xa3\xda\x1e\x9b\x86\x60\x06\x37\x11\x34\xc6\x01\xb7\x34\xa9\x00\x9c\xc8\x79\x65\x74\x09\x79\xba\x78\x01\x9c\x04\x20\x8c\x66\x87\x4a\x73\xf2\x1f\xe8\x15\xa0\x74\x63\x5c\x8f\x3c\x9e\xc1\x53\x8f\x9a\x95\xb8\xc9\x47\x69\x12\xec\xa0\xd2\xe4\x4a\x98\xc1\xed\xc3\xc3\xe0\x49\x02\x1b\xb0\xe4\x02\x72\x0c\x0c\xac\x23\xa9\x44\xb0\x99\xc0\xfd\x37\x83\x7e\xe8\x58\xd9\x8e\xc0\x76\xc8\x01\xef\x41\xa0\x86\x9a\xc0\x5b\x12\xaa\x51\x24\x13\x00\xec\xe5\x7a\x55\x46\xcd\xa3\x1d\x4a\x70\xa8\xac\x33\xff\x90\xe0\x4c\xa0\xeb\xbb\xb9\x08\x75\x29\x23\x6c\x2e\xec\x10\x91\xe2\xbb\xc8\x63\x44\x5a\x2b\xd6\xab\x8e\xca\xef\x2a\x4d\xc0\x49\xed\xff\x43\x79\xc4\x4a\xf2\xc2\x29\xcb\xb1\xd6\x3f\x25\x00\xbf\xbf\xff\xf9\x7d\xe2\xa8\x21\x47\x5a\x90\x0f\x05\xbc\x7f\xc5\xda\xa1\x0d\xa5\xcc\xe0\x4c\xb5\x57\x4c\xe1\x48\x2c\xd2\x14\x46\x5b\xb5\xd2\xc7\x17\xac\xcf\xa1\x65\xb6\xbe\xcc\x32\x74\x5f\xd4\x29\x35\xee\x98\x61\xed\xb3\x7c\xbd\x78\x4e\x17\xeb\x22\xcf\x6f\xa0\x32\xcb\xce\xe7\x73\x2a\x4e\xf3\xc6\x0c\x5a\x46\x9e\x23\xde\x58\xd2\x28\x04\x79\x9f\x05\x3a\x49\x73\x25\x4e\xd6\x55\xc5\x22\x7f\xce\x5a\xee\xbb\xec\x9d\xd1\xc7\xea\xed\xd0\x75\x97\x6a\x6f\xf4\xc9\x74\x43\x50\xc6\xae\x3a\x10\x87\x1e\xf3\x11\x5b\xed\xff\xfc\xf0\xb1\x8a\x29\xa4\x41\xed\x45\x78\x47\xc5\xed\x50\xa7\xc2\xf4\x99\x6f\xa9\x6b\xb1\x27\x97\x35\x42\xa7\x35\xb9\xcf\xd4\xd1\xe5\xa4\xfc\x35\x20\x76\x44\x59\x8f\x9e\xc9\x65\x27\x23\xe6\x8d\xd0\xcb\xc2\x27\x33\xe8\x94\x20\xed\xe3\xb8\xdc\x8b\x30\x5d\x96\xf0\xc7\xe1\xd7\xc3\xfb\xbf\x0e\xc9\x0c\x94\xb6\x03\xc7\x82\xde\x61\xe3\x5d\x20\x7b\x06\x8d\x72\x9e\x47\x14\xf0\xc5\xd2\x57\xc3\x34\x8f\xd7\x25\xa8\x1e\x8f\x94\x8c\x1d\xfb\xc0\xe6\x35\x80\x07\x3b\x11\xf4\x82\xf0\x00\x18\x5d\xdc\xad\x58\x0c\x63\xc9\xe4\x22\xf7\xd1\xf5\xfd\x6a\x1a\x10\xa9\x7a\xd2\xa1\x16\xbe\x84\xbf\xf3\x27\x58\x3e\xc1\xf3\x62\x11\xff\x3e\x4d\x90\x9e\x50\x07\x61\x51\xa4\xeb\xcd\x76\x57\x3c\x41\x9e\xaf\xd3\xf5\x7a\xbb\xd9\x3c\x41\xbe\x58\xa5\x8b\xc5\x7a\xb7\xfb\x94\x98\x81\xed\xc0\x63\xce\x21\x9c\xe8\x70\x8a\x7d\x94\x25\x30\x65\xda\x10\xf2\xe0\x28\x42\xf1\xb5\x5c\x47\xfc\x3d\xdc\xe4\x95\x74\x27\x4c\x87\x75\xac\xe2\x43\xb6\x53\x0d\x5f\xcb\x78\xf2\xec\xab\xc1\x75\xe5\x43\xbf\x78\x4e\xc7\xa6\x19\x3c\xb9\xa9\x31\x63\xff\xa0\x36\xfa\xd2\x9b\xc1\x67\xb8\x2d\x56\x35\x2e\x97\xcb\x1a\x77\x45\xb1\x5b\x22\x6d\x17\x52\x6e\xe5\x7a\xbd\x91\xcb\x5d\x9e\x67\x0e\xcf\x59\x5d\xc8\x5c\x16\x02\x25\x2e\x37\x84\xf9\x6a\x9b\x6f\xb1\xde\x88\x25\x15\xc5\x4e\xac\x76\x75\x5d\x14\x62\xf5\xbc\x7c\x8e\x2e\x1b\xd5\x51\x9e\xf2\x17\x4e\x62\x2b\x04\x96\xae\xfb\xc8\x4f\x1b\xed\xe8\xd0\xb6\x80\x5a\xc2\x99\xd4\xb1\x65\x0f\x8e\xbc\x19\x9c\xa0\x90\x4f\x94\x56\x16\xb9\xbd\xe7\xe2\xf0\xfc\x8d\x54\xbe\x3b\x0a\x5f\x4d\x41\x76\xc2\x2e\xb5\xce\xb0\x09\x41\xc2\x35\x86\x07\x8f\x65\x96\xc9\x2e\x8d\xdb\xe8\x35\x8b\xa3\x99\x79\x4b\x78\xba\xcc\x2d\x7a\x81\x13\xf8\xda\xfb\xca\x57\xe8\x44\xab\x4e\xa1\x2b\xb0\xf3\xe1\xd9\x51\x0d\x78\xe2\xa7\x40\xb2\x8e\x4c\xd7\xe8\x29\x10\x06\xca\x03\x42\x38\xb0\x01\xd4\x30\x69\x3e\xee\xfa\x87\xa5\x1f\x34\xef\x05\x7a\xac\xe1\x78\x11\xcd\x4b\xd2\x86\x29\x9c\xbf\x61\x25\x70\x14\x9f\x45\x7f\xed\xcd\xaf\x29\x39\x2b\x6e\xd5\x18\xea\x35\x24\x64\x76\xaa\x1e\x78\xdc\xbb\xf4\x85\x1d\x82\x1e\xf7\x17\xdc\x65\x09\xc0\x67\xa5\x65\x09\xfb\xc3\x61\x8a\x38\x7c\x07\x4f\x9a\x06\x87\xdd\x4d\xe7\x87\xfd\xe1\xf0\x04\x1f\xc3\x5f\x9a\xa6\x3f\x86\x49\x0a\xcf\xab\xd2\xc7\x4a\x22\xa3\x27\x2e\xe1\x97\x30\xf9\x07\xe2\xb0\x3e\xc6\xbb\xdb\x33\x19\x57\xce\xa4\x90\x00\xf4\xa8\x55\x43\x9e\x2b\x1c\xb8\x35\xae\x04\xac\xe5\xd0\xc9\xa4\x55\x52\x52\x18\x2f\x37\x50\xf2\x6f\x00\x00\x00\xff\xff\x5a\x4a\xe7\xde\x43\x08\x00\x00"

func vocFcn32sYmlBytes() ([]byte, error) {
	return bindataRead(
		_vocFcn32sYml,
		"voc-fcn32s.yml",
	)
}

func vocFcn32sYml() (*asset, error) {
	bytes, err := vocFcn32sYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voc-fcn32s.yml", size: 2115, mode: os.FileMode(420), modTime: time.Unix(1502315579, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"BVLC-AlexNet.yml": bvlcAlexnetYml,
	"BVLC-GoogLeNet.yml": bvlcGooglenetYml,
	"BVLC-Reference-CaffeNet.yml": bvlcReferenceCaffenetYml,
	"BVLC-Reference-RCNN-ILSVRC13.yml": bvlcReferenceRcnnIlsvrc13Yml,
	"SqueezeNet_v1.0.yml": squeezenet_v10Yml,
	"SqueezeNet_v1.1.yml": squeezenet_v11Yml,
	"VGG_ILSVRC_16.yml": vgg_ilsvrc_16Yml,
	"VGG_ILSVRC_19.yml": vgg_ilsvrc_19Yml,
	"voc-fcn16s.yml": vocFcn16sYml,
	"voc-fcn32s.yml": vocFcn32sYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"BVLC-AlexNet.yml": &bintree{bvlcAlexnetYml, map[string]*bintree{}},
	"BVLC-GoogLeNet.yml": &bintree{bvlcGooglenetYml, map[string]*bintree{}},
	"BVLC-Reference-CaffeNet.yml": &bintree{bvlcReferenceCaffenetYml, map[string]*bintree{}},
	"BVLC-Reference-RCNN-ILSVRC13.yml": &bintree{bvlcReferenceRcnnIlsvrc13Yml, map[string]*bintree{}},
	"SqueezeNet_v1.0.yml": &bintree{squeezenet_v10Yml, map[string]*bintree{}},
	"SqueezeNet_v1.1.yml": &bintree{squeezenet_v11Yml, map[string]*bintree{}},
	"VGG_ILSVRC_16.yml": &bintree{vgg_ilsvrc_16Yml, map[string]*bintree{}},
	"VGG_ILSVRC_19.yml": &bintree{vgg_ilsvrc_19Yml, map[string]*bintree{}},
	"voc-fcn16s.yml": &bintree{vocFcn16sYml, map[string]*bintree{}},
	"voc-fcn32s.yml": &bintree{vocFcn32sYml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

